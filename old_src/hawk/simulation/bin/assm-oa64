#!/bin/sh 

prog=assm-oa64

if [ "X$HAWKROOT" = "X" ] ; then
     echo "HAWKROOT environment variable not set"
     exit
fi

if [ ! -d $HAWKROOT ] ; then
   echo "ERROR: Directory $HAWKROOT not found"
   exit 1
fi



. $HAWKROOT/simulation/bin/common



if [ -z "$*" ]; then
	echo "usage: $prog [ -hugs | -ghc ] file.64"
	exit
fi;

#determine which haskell impl. to use
hc=hugs
#hc=ghc
if [ $1 = "-ghc" ] ; then
   hc="ghc"
   shift
fi
if [ $1 = "-hugs" ] ; then
   hc="hugs"
   shift
fi


if [ -n "`echo $1 | $SED 's/.*\.64//'`" ]; then
	echo $prog: the input filename must have the form ".*\.64"
        exit 2
fi;


if [ ! -f $1 ] ; then
	echo $prog: $1 is not readable
        exit 1
fi;




if [ -f "Main.hi" -a $hc = "ghc"  ] ; then
	echo "$prog: Main.hi file exists.  Either delete or use -hugs option"
        exit
fi


#grab the base of the input file....
base=`echo $1 | $SED 's/\(.*\)\.64/\1/' `


script="$$assm.hs"
ofile="$$assm.o"
exec="$$assm"
errfile="$TDIR/$$err"

# generate script
echo > $script
echo "module Main where"                             >> $script
echo "import IO"                                     >> $script
echo "import OA64"                                   >> $script
echo "import Trans"                                  >> $script
echo 'main = assembleIO "'$base.hsk'" program'       >> $script
echo "program ="                                     >> $script
$CAT $1                                              >> $script

if [ $hc = "ghc" ] ; then
	$HAWKROOT/simulation/bin/hawkc -o $exec $script >$errfile 2>> $errfile
        st=$?

        $SED "s/$script/$prog /g" $errfile
	if [ $st = 0 ]; then
		$exec
        fi
	$RM -f $exec $ofile Main.hi $errfile
fi;

if [ $hc = "hugs" ] ; then
	$HAWKROOT/simulation/bin/runhawk $script
fi;

$RM -f $script

