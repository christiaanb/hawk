// Generated .IDL file (by the OLE/COM Object Viewer)
// 
// typelib filename: VISLIB32.DLL
// Forward declare all types defined in this typelib
interface IVApplication;
interface IVCell;
interface IVCharacters;
interface IVConnect;
interface IVConnects;
interface IVDocument;
interface IVDocuments;
interface IVMaster;
interface IVMasters;
interface IVPage;
interface IVPages;
interface IVSelection;
interface IVShape;
interface IVShapes;
interface IVStyle;
interface IVStyles;
interface IVWindow;
interface IVWindows;
interface IVLayer;
interface IVLayers;
interface IVFont;
interface IVFonts;
interface IVColor;
interface IVColors;
interface IVAddon;
interface IVAddons;
interface IVEvent;
interface IVEventList;
interface IVGlobal;
dispinterface EDocument;
dispinterface EApplication;
dispinterface EWindows;
dispinterface EWindow;
dispinterface EDocuments;
dispinterface EStyles;
dispinterface EStyle;
dispinterface EMasters;
dispinterface EMaster;
dispinterface EPages;
dispinterface EPage;
dispinterface EShape;
dispinterface ECharacters;
dispinterface ECell;
interface IVMenuItem;
interface IEnumVMenuItem;
interface IVMenuItems;
interface IVMenu;
interface IEnumVMenu;
interface IVMenus;
interface IVMenuSet;
interface IEnumVMenuSet;
interface IVMenuSets;
interface IVToolbarItem;
interface IEnumVToolbarItem;
interface IVToolbarItems;
interface IVToolbar;
interface IEnumVToolbar;
interface IVToolbars;
interface IVToolbarSet;
interface IEnumVToolbarSet;
interface IVToolbarSets;
interface IVStatusBarItem;
interface IEnumVStatusBarItem;
interface IVStatusBarItems;
interface IVStatusBar;
interface IEnumVStatusBar;
interface IVStatusBars;
interface IVAccelItem;
interface IEnumVAccelItem;
interface IVAccelItems;
interface IVAccelTable;
interface IEnumVAccelTable;
interface IVAccelTables;
interface IVUIObject;
interface IVHyperlink;
interface IVOLEObjects;
interface IVOLEObject;
interface IVPaths;
interface IVPath;
interface IVCurve;
interface IVExtender;
dispinterface IVDispExtender;
interface IVAmbients;

[
  uuid(00021A98-0000-0000-C000-000000000046),
  version(4.6),
  helpstring("Visio 5.0 Type Library"),
  helpfile("progref.hlp"),
  helpcontext(00000000)
]
library Visio
{
    // TLib : OLE Automation : {00020430-0000-0000-C000-000000000046}
    importlib("stdole2.tlb");
    import "stdole2.idl";

    typedef [public]
    IVApplication* LPVISIOAPPLICATION;

    typedef [public]
    IVCell* LPVISIOCELL;

    typedef [public]
    IVCharacters* LPVISIOCHARS;

    typedef [public]
    IVConnect* LPVISIOCONNECT;

    typedef [public]
    IVConnects* LPVISIOCONNECTS;

    typedef [public]
    IVDocument* LPVISIODOCUMENT;

    typedef [public]
    IVDocuments* LPVISIODOCUMENTS;

    typedef [public]
    IVMaster* LPVISIOMASTER;

    typedef [public]
    IVMasters* LPVISIOMASTERS;

    typedef [public]
    IVPage* LPVISIOPAGE;

    typedef [public]
    IVPages* LPVISIOPAGES;

    typedef [public]
    IVSelection* LPVISIOSELECTION;

    typedef [public]
    IVShape* LPVISIOSHAPE;

    typedef [public]
    IVShapes* LPVISIOSHAPES;

    typedef [public]
    IVStyle* LPVISIOSTYLE;

    typedef [public]
    IVStyles* LPVISIOSTYLES;

    typedef [public]
    IVWindow* LPVISIOWINDOW;

    typedef [public]
    IVWindows* LPVISIOWINDOWS;

    typedef [public]
    IVLayer* LPVISIOLAYER;

    typedef [public]
    IVLayers* LPVISIOLAYERS;

    typedef [public]
    IVFont* LPVISIOFONT;

    typedef [public]
    IVFonts* LPVISIOFONTS;

    typedef [public]
    IVColor* LPVISIOCOLOR;

    typedef [public]
    IVColors* LPVISIOCOLORS;

    typedef [public]
    IVAddon* LPVISIOADDON;

    typedef [public]
    IVAddons* LPVISIOADDONS;

    typedef [public]
    IVEvent* LPVISIOEVENT;

    typedef [public]
    IVEventList* LPVISIOEVENTS;

    typedef [public]
    IVMenuItem* LPVISIOMENUITEM;

    typedef [public]
    IVMenuItems* LPVISIOMENUITEMS;

    typedef [public]
    IVMenu* LPVISIOMENU;

    typedef [public]
    IVMenus* LPVISIOMENUS;

    typedef [public]
    IVMenuSet* LPVISIOMENUSET;

    typedef [public]
    IVMenuSets* LPVISIOMENUSETS;

    typedef [public]
    IVToolbarItem* LPVISIOTOOLBARITEM;

    typedef [public]
    IVToolbarItems* LPVISIOTOOLBARITEMS;

    typedef [public]
    IVToolbar* LPVISIOTOOLBAR;

    typedef [public]
    IVToolbars* LPVISIOTOOLBARS;

    typedef [public]
    IVToolbarSet* LPVISIOTOOLBARSET;

    typedef [public]
    IVToolbarSets* LPVISIOTOOLBARSETS;

    typedef [public]
    IVStatusBarItem* LPVISIOSTATUSBARITEM;

    typedef [public]
    IVStatusBarItems* LPVISIOSTATUSBARITEMS;

    typedef [public]
    IVStatusBar* LPVISIOSTATUSBAR;

    typedef [public]
    IVStatusBars* LPVISIOSTATUSBARS;

    typedef [public]
    IVAccelItem* LPVISIOACCELITEM;

    typedef [public]
    IVAccelItems* LPVISIOACCELITEMS;

    typedef [public]
    IVAccelTable* LPVISIOACCELTABLE;

    typedef [public]
    IVAccelTables* LPVISIOACCELTABLES;

    typedef [public]
    IVUIObject* LPVISIOUIOBJECT;

    typedef [public]
    IEnumVMenuItem* LPVISIOENUMVMENUITEM;

    typedef [public]
    IEnumVMenu* LPVISIOENUMVMENU;

    typedef [public]
    IEnumVMenuSet* LPVISIOENUMVMENUSET;

    typedef [public]
    IEnumVToolbarItem* LPVISIOENUMVTOOLBARITEM;

    typedef [public]
    IEnumVToolbar* LPVISIOENUMVTOOLBAR;

    typedef [public]
    IEnumVToolbarSet* LPVISIOENUMVTOOLBARSET;

    typedef [public]
    IEnumVStatusBarItem* LPVISIOENUMVSTATUSBARITEM;

    typedef [public]
    IEnumVStatusBar* LPVISIOENUMVSTATUSBAR;

    typedef [public]
    IEnumVAccelItem* LPVISIOENUMVACCELITEM;

    typedef [public]
    IEnumVAccelTable* LPVISIOENUMVACCELTABLE;

    typedef [uuid(000D0C00-0000-0000-C000-000000000046), helpstring("Unit codes to be used with cell.result and similar methods."), helpcontext(0x00001388)]
    enum {
        visNumber = 32,
        visDate = 40,
        visDurationUnits = 42,
        visElapsedWeek = 43,
        visElapsedDay = 44,
        visElapsedHour = 45,
        visElapsedMin = 46,
        visElapsedSec = 47,
        visTypeUnits = 48,
        visPoints = 50,
        visPicas = 51,
        visDidots = 53,
        visCiceros = 54,
        visPageUnits = 63,
        visDrawingUnits = 64,
        visInches = 65,
        visFeet = 66,
        visFeetAndInches = 67,
        visMiles = 68,
        visCentimeters = 69,
        visMillimeters = 70,
        visMeters = 71,
        visKilometers = 72,
        visInchFrac = 73,
        visMileFrac = 74,
        visYards = 75,
        visNautMiles = 76,
        visAngleUnits = 80,
        visDegrees = 81,
        visDegreeMinSec = 82,
        visRadians = 83,
        visMin = 84,
        visSec = 85,
        visCurrency = 111,
        visNoCast = 252
    } VisUnitCodes;

    typedef [uuid(000D0C01-0000-0000-C000-000000000046), helpstring("Type codes returned by window.type and subtype."), helpcontext(0x00001388)]
    enum {
        visWinOther = 0,
        visDrawing = 1,
        visStencil = 2,
        visSheet = 3,
        visIcon = 4,
        visPageWin = 128,
        visPageGroupWin = 160,
        visMasterWin = 64,
        visMasterGroupWin = 96
    } VisWinTypes;

    typedef [uuid(000D0C02-0000-0000-C000-000000000046), helpstring("Type codes returned by shape.type and foreigntype."), helpcontext(0x00001388)]
    enum {
        visTypePage = 1,
        visTypeGroup = 2,
        visTypeShape = 3,
        visTypeForeignObject = 4,
        visTypeGuide = 5,
        visTypeMetafile = 16,
        visTypeBitmap = 32,
        visTypeIsLinked = 256,
        visTypeIsEmbedded = 512,
        visTypeIsControl = 1024,
        visTypeIsOLE2 = 32768
    } VisShapeTypes;

    typedef [uuid(000D0C03-0000-0000-C000-000000000046), helpstring("Values related to IDs of Visio Shapes."), helpcontext(0x00001388)]
    enum {
        visInvalShapeID = -1,
        visPageSheetID = 0
    } VisShapeIDs;

    typedef [uuid(000D0C04-0000-0000-C000-000000000046), helpstring("Indices of sections in shape or style objects."), helpcontext(0x00001388)]
    enum {
        visSectionInval = 255,
        visSectionFirst = 0,
        visSectionLast = 252,
        visSectionNone = 255,
        visSectionObject = 1,
        visSectionMember = 2,
        visSectionCharacter = 3,
        visSectionParagraph = 4,
        visSectionTab = 5,
        visSectionScratch = 6,
        visSectionExport = 7,
        visSectionConnectionPts = 7,
        visSectionTextField = 8,
        visSectionControls = 9,
        visSectionFirstComponent = 10,
        visSectionLastComponent = 239,
        visSectionAction = 240,
        visSectionLayer = 241,
        visSectionUser = 242,
        visSectionProp = 243,
        visSectionLastReal = 243
    } VisSectionIndices;

    typedef [uuid(000D0C05-0000-0000-C000-000000000046), helpstring("Indices of rows in shape or style object sections."), helpcontext(0x00001388)]
    enum {
        visRowFirst = 0,
        visRowLast = -2,
        visRowNone = -1,
        visRowXFormOut = 1,
        visRowXFormIn = 1,
        visRowLine = 2,
        visRowFill = 3,
        visRowXForm1D = 4,
        visRowEvent = 5,
        visRowLayerMem = 6,
        visRowGuide = 7,
        visRowStyle = 8,
        visRowForeign = 9,
        visRowPage = 10,
        visRowText = 11,
        visRowTextXForm = 12,
        visRowAlign = 14,
        visRowLock = 15,
        visRowData123 = 16,
        visRowMisc = 17,
        visRowRulerGrid = 18,
        visRowHyperlink = 19,
        visRowComponent = 0,
        visRowVertex = 1,
        visRowMember = 0,
        visRowCharacter = 0,
        visRowParagraph = 0,
        visRowTab = 0,
        visRowScratch = 0,
        visRowExport = 0,
        visRowConnectionPts = 0,
        visRowField = 0,
        visRowControl = 0,
        visRowAction = 0,
        visRowLayer = 0,
        visRowUser = 0,
        visRowProp = 0,
        visRowFormat = 0
    } VisRowIndices;

    typedef [uuid(000D0C06-0000-0000-C000-000000000046), helpstring("Row tags to be used with shape.rowtype and similar methods."), helpcontext(0x00001388)]
    enum {
        visTagBase = 130,
        visTagRowVoid = 180,
        visTagInvalid = -1,
        visTagComponent = 137,
        visTagMoveTo = 138,
        visTagLineTo = 139,
        visTagArcTo = 140,
        visTagEllipticalArcTo = 144,
        visTagSplineBeg = 165,
        visTagSplineSpan = 166,
        visTagTab0 = 136,
        visTagTab2 = 150,
        visTagTab10 = 151,
        visTagCtlPt = 162,
        visTagCtlPtTip = 170,
        visTagCnnctPt = 153,
        visTagCnnctNamed = 185,
        visTagCnnctPtABCD = 186,
        visTagCnnctNamedABCD = 187
    } VisRowTags;

    typedef [uuid(000D0C07-0000-0000-C000-000000000046), helpstring("Indices of cells in shape or style object sections."), helpcontext(0x00001388)]
    enum {
        visXFormPinX = 0,
        visXFormPinY = 1,
        visXFormWidth = 2,
        visXFormHeight = 3,
        visXFormLocPinX = 4,
        visXFormLocPinY = 5,
        visXFormAngle = 6,
        visXFormFlipX = 7,
        visXFormFlipY = 8,
        visXFormResizeMode = 9,
        visLineWeight = 0,
        visLineColor = 1,
        visLinePattern = 2,
        visLineRounding = 3,
        visLineArrowSize = 4,
        visLineBeginArrow = 5,
        visLineEndArrow = 6,
        visLineEndCap = 7,
        visFillForegnd = 0,
        visFillBkgnd = 1,
        visFillPattern = 2,
        visFillShdwForegnd = 3,
        visFillShdwBkgnd = 4,
        visFillShdwPattern = 5,
        vis1DBeginX = 0,
        vis1DBeginY = 1,
        vis1DEndX = 2,
        vis1DEndY = 3,
        visEvtCellTheData = 0,
        visEvtCellTheText = 1,
        visEvtCellDblClick = 2,
        visEvtCellXFMod = 3,
        visEvtCellDrop = 4,
        visLayerMember = 0,
        visGuideFlags = 2,
        visStyleIncludesLine = 0,
        visStyleIncludesFill = 1,
        visStyleIncludesText = 2,
        visFrgnImgOffsetX = 0,
        visFrgnImgOffsetY = 1,
        visFrgnImgWidth = 2,
        visFrgnImgHeight = 3,
        visPageWidth = 0,
        visPageHeight = 1,
        visPageShdwOffsetX = 2,
        visPageShdwOffsetY = 3,
        visPageScale = 4,
        visPageDrawingScale = 5,
        visPageDrawSizeType = 6,
        visPageDrawScaleType = 7,
        visTxtBlkLeftMargin = 0,
        visTxtBlkRightMargin = 1,
        visTxtBlkTopMargin = 2,
        visTxtBlkBottomMargin = 3,
        visTxtBlkVerticalAlign = 4,
        visTxtBlkBkgnd = 5,
        visAlignLeft = 0,
        visAlignCenter = 1,
        visAlignRight = 2,
        visAlignTop = 3,
        visAlignMiddle = 4,
        visAlignBottom = 5,
        visLockWidth = 0,
        visLockHeight = 1,
        visLockMoveX = 2,
        visLockMoveY = 3,
        visLockAspect = 4,
        visLockDelete = 5,
        visLockBegin = 6,
        visLockEnd = 7,
        visLockRotate = 8,
        visLockCrop = 9,
        visLockVtxEdit = 10,
        visLockTextEdit = 11,
        visLockFormat = 12,
        visLockGroup = 13,
        visLockCalcWH = 14,
        visLockSelect = 15,
        visObjHelp = 0,
        visCopyRight = 1,
        visNoObjHandles = 0,
        visNonPrinting = 1,
        visNoCtlHandles = 2,
        visNoAlignBox = 3,
        visUpdateAlignBox = 4,
        visHideText = 5,
        visDynFeedback = 8,
        visGlueType = 9,
        visWalkPref = 10,
        visBegTrigger = 11,
        visEndTrigger = 12,
        visLOFlags = 13,
        visLOInteraction = 14,
        visLOBehavior = 15,
        visXRulerDensity = 0,
        visYRulerDensity = 1,
        visXRulerOrigin = 4,
        visYRulerOrigin = 5,
        visXGridDensity = 6,
        visYGridDensity = 7,
        visXGridSpacing = 8,
        visYGridSpacing = 9,
        visXGridOrigin = 10,
        visYGridOrigin = 11,
        visHLinkDescription = 0,
        visHLinkAddress = 1,
        visHLinkSubAddress = 2,
        visHLinkExtraInfo = 3,
        visHLinkFrame = 4,
        visHLinkNewWin = 5,
        visCompNoFill = 0,
        visCompNoShow = 2,
        visX = 0,
        visY = 1,
        visBow = 2,
        visControlX = 2,
        visControlY = 3,
        visEccentricityAngle = 4,
        visAspectRatio = 5,
        visSplineKnot = 2,
        visSplineKnot2 = 3,
        visSplineKnot3 = 4,
        visSplineDegree = 5,
        visFieldCell = 0,
        visCharacterFont = 0,
        visCharacterColor = 1,
        visCharacterStyle = 2,
        visCharacterCase = 3,
        visCharacterPos = 4,
        visCharacterSize = 7,
        visIndentFirst = 0,
        visIndentLeft = 1,
        visIndentRight = 2,
        visSpaceLine = 3,
        visSpaceBefore = 4,
        visSpaceAfter = 5,
        visHorzAlign = 6,
        visTabStopCount = 0,
        visTabPos = 1,
        visTabAlign = 2,
        visScratchX = 0,
        visScratchY = 1,
        visScratchA = 2,
        visScratchB = 3,
        visScratchC = 4,
        visScratchD = 5,
        visCnnctA = 2,
        visCnnctB = 3,
        visCnnctC = 4,
        visCnnctD = 5,
        visCtlX = 0,
        visCtlY = 1,
        visCtlXDyn = 2,
        visCtlYDyn = 3,
        visCtlXCon = 4,
        visCtlYCon = 5,
        visCtlGlue = 6,
        visCtlType = 7,
        visCtlTip = 8,
        visActionMenu = 0,
        visActionPrompt = 1,
        visActionHelp = 2,
        visActionAction = 3,
        visActionChecked = 4,
        visActionDisabled = 5,
        visLayerName = 0,
        visLayerColor = 2,
        visLayerStatus = 3,
        visLayerVisible = 4,
        visLayerPrint = 5,
        visLayerActive = 6,
        visLayerLock = 7,
        visLayerSnap = 8,
        visLayerGlue = 9,
        visUserValue = 0,
        visUserPrompt = 1,
        visCustPropsValue = 0,
        visCustPropsPrompt = 1,
        visCustPropsLabel = 2,
        visCustPropsFormat = 3,
        visCustPropsSortKey = 4,
        visCustPropsType = 5,
        visCustPropsInvis = 6,
        visCustPropsAsk = 7
    } VisCellIndices;

    typedef [uuid(000D0C08-0000-0000-C000-000000000046), helpstring("Symbolic values for certain cells."), helpcontext(0x00001388)]
    enum {
        visXFormResizeDontCare = 0,
        visXFormResizeSpread = 1,
        visXFormResizeScale = 2,
        visNoFill = 0,
        visSolid = 1,
        visWideUpDiagonal = 2,
        visWideCross = 3,
        visWideDiagonalCross = 4,
        visWideDownDiagonal = 5,
        visWideHorz = 6,
        visWideVert = 7,
        visBackDotsMini = 8,
        visHalfAndHalf = 9,
        visForeDotsMini = 10,
        visForeDotsNarrow = 11,
        visForeDotsWide = 12,
        visThickHorz = 13,
        visThickVertical = 14,
        visThickDownDiagonal = 15,
        visThickUpDiagonal = 16,
        visThickDiagonalCross = 17,
        visBackDotsWide = 18,
        visThinHorz = 19,
        visThinVert = 20,
        visThinDownDiagonal = 21,
        visThinUpDiagonal = 22,
        visThinCross = 23,
        visThinDiagonalCross = 24,
        visGuideXActive = 1024,
        visGuideYActive = 2048,
        visPrintSetup = 0,
        visTight = 1,
        visStandard = 2,
        visCustom = 3,
        visLogical = 4,
        visDSMetric = 5,
        visDSEngr = 6,
        visDSArch = 7,
        visNoScale = 0,
        visArchitectural = 1,
        visEngineering = 2,
        visScaleCustom = 3,
        visScaleMetric = 4,
        visScaleMechanical = 5,
        visVertTop = 0,
        visVertMiddle = 1,
        visVertBottom = 2,
        visTxtBlkOpaque = 255,
        visDynFBDefault = 0,
        visDynFBUCon3Leg = 1,
        visDynFBUCon5Leg = 2,
        visGlueTypeDefault = 0,
        visGlueTypeTrigger = 1,
        visGlueTypeWalking = 2,
        visWalkPrefBegNS = 1,
        visWalkPrefEndNS = 2,
        visLOFlagsVisDecides = 0,
        visLOFlagsPlacable = 1,
        visLOFlagsRoutable = 2,
        visLOFlagsDont = 4,
        visLOFlagsPNRGroup = 8,
        visLOIPlaceNormal = 0,
        visLOIRouteNormal = 0,
        visLOBPlaceNormal = 0,
        visLOBRouteNormal = 0,
        visLOBRouteRightAng = 1,
        visLOBRouteStraight = 2,
        visLOBRouteFlowNS = 5,
        visLOBRouteFlowWE = 6,
        visLOBRouteTreeNS = 7,
        visLOBRouteTreeWE = 8,
        visRulerFine = 32,
        visRulerNormal = 16,
        visRulerCoarse = 8,
        visRulerFixed = 0,
        visGridFine = 8,
        visGridNormal = 4,
        visGridCoarse = 2,
        visGridFixed = 0,
        visBold = 1,
        visItalic = 2,
        visUnderLine = 4,
        visSmallCaps = 8,
        visCaseNormal = 0,
        visCaseAllCaps = 1,
        visCaseInitialCaps = 2,
        visPosNormal = 0,
        visPosSuper = 1,
        visPosSub = 2,
        visHorzLeft = 0,
        visHorzCenter = 1,
        visHorzRight = 2,
        visHorzJustify = 3,
        visHorzForce = 4,
        visTabStopLeft = 0,
        visTabStopCenter = 1,
        visTabStopRight = 2,
        visTabStopDecimal = 3,
        visTabStopComma = 4,
        visCtlProportional = 0,
        visCtlLocked = 1,
        visCtlOffsetMin = 2,
        visCtlOffsetMid = 3,
        visCtlOffsetMax = 4,
        visCtlProportionalHidden = 5,
        visCtlLockedHidden = 6,
        visCtlOffsetMinHidden = 7,
        visCtlOffsetMidHidden = 8,
        visCtlOffsetMaxHidden = 9,
        visNoLayerColor = 255,
        visLayerValid = 0,
        visLayerDeleted = 1,
        visLayerAvailable = 2,
        visPropTypeString = 0,
        visPropTypeListFix = 1,
        visPropTypeNumber = 2,
        visPropTypeBool = 3,
        visPropTypeListVar = 4
    } VisCellVals;

    typedef [uuid(000D0C09-0000-0000-C000-000000000046), helpstring("Indices of colors (in default palette)."), helpcontext(0x00001388)]
    enum {
        visTransparent = 0,
        visBlack = 0,
        visWhite = 1,
        visRed = 2,
        visGreen = 3,
        visBlue = 4,
        visYellow = 5,
        visMagenta = 6,
        visCyan = 7,
        visDarkRed = 8,
        visDarkGreen = 9,
        visDarkBlue = 10,
        visDarkYellow = 11,
        visPurple = 12,
        visDarkCyan = 13,
        visGray = 14,
        visGray10 = 15,
        visGray20 = 16,
        visGray30 = 17,
        visGray40 = 18,
        visDarkGray = 19,
        visGray50 = 19,
        visGray60 = 20,
        visGray70 = 21,
        visGray80 = 22,
        visGray90 = 23
    } VisDefaultColors;

    typedef [uuid(000D0C0A-0000-0000-C000-000000000046), helpstring("Flags to be passed to OpenEx, SaveAsEx or SavePreviewMode."), helpcontext(0x00001388)]
    enum {
        visOpenCopy = 1,
        visOpenRO = 2,
        visOpenDocked = 4,
        visOpenDontList = 8,
        visSaveAsRO = 1,
        visSaveAsWS = 2,
        visSavePrevNone = 0,
        visSavePrevDraft1st = 1,
        visSavePrevDetailed1st = 2,
        visSavePrevDraftAll = 4,
        visSavePrevDetailedAll = 8
    } VisOpenSaveArgs;

    typedef [uuid(000D0C0B-0000-0000-C000-000000000046), helpstring("Flags to be passed to InsertObject or InsertFromFile."), helpcontext(0x00001388)]
    enum {
        visInsertLink = 8,
        visInsertIcon = 16,
        visInsertDontShow = 4096,
        visInsertAsControl = 8192,
        visInsertAsEmbed = 16384
    } VisInsertObjArgs;

    typedef [uuid(000D0C0C-0000-0000-C000-000000000046), helpstring("Flags to be passed to GetResults or SetFormulas/Results."), helpcontext(0x00001388)]
    enum {
        visGetFloats = 0,
        visGetTruncatedInts = 1,
        visGetRoundedInts = 2,
        visGetStrings = 3,
        visGetFormulas = 4,
        visSetFormulas = 1,
        visSetBlastGuards = 2,
        visSetTestCircular = 4
    } VisGetSetArgs;

    typedef [uuid(000D0C22-0000-0000-C000-000000000046), helpstring("Flags to be passed to BoundingBox."), helpcontext(0x00001388)]
    enum {
        visBBoxUprightWH = 1,
        visBBoxUprightText = 2,
        visBBoxExtents = 4,
        visBBoxIncludeGuides = 4096,
        visBBoxDrawingCoords = 8192,
        visBBoxNoNonPrint = 16384
    } VisBoundingBoxArgs;

    typedef [uuid(000D0C23-0000-0000-C000-000000000046), helpstring("Results returned from HitTest."), helpcontext(0x00001388)]
    enum {
        visHitOutside = 0,
        visHitOnBoundary = 1,
        visHitInside = 2
    } VisHitTestResults;

    typedef [uuid(000D0C0D-0000-0000-C000-000000000046), helpstring("Action codes used in conjunction with Select method."), helpcontext(0x00001388)]
    enum {
        visDeselect = 1,
        visSelect = 2,
        visSubSelect = 3,
        visSelectAll = 4,
        visDeselectAll = 256
    } VisSelectArgs;

    typedef [uuid(000D0C0E-0000-0000-C000-000000000046), helpstring("Action codes to be passed to Shape.UniqueID."), helpcontext(0x00001388)]
    enum {
        visGetGUID = 0,
        visGetOrMakeGUID = 1,
        visDeleteGUID = 2
    } VisUniqueIDArgs;

    typedef [uuid(000D0C0F-0000-0000-C000-000000000046), helpstring("Flag to be passed to Shape.SectionExists and similar methods."), helpcontext(0x00001388)]
    enum {
        visExistsLocally = 1,
        visExistsAnywhere = 0
    } VisExistsFlags;

    typedef [uuid(000D0C10-0000-0000-C000-000000000046), helpstring("Result codes returned by Cell.Error."), helpcontext(0x00001388)]
    enum {
        visErrorSuccess = 0,
        visErrorDivideByZero = 39,
        visErrorValue = 47,
        visErrorReference = 55,
        visErrorName = 61,
        visErrorNumber = 68,
        visErrorNotAvailable = 74
    } VisCellError;

    typedef [uuid(000D0C11-0000-0000-C000-000000000046), helpstring("Truncate vs Round arg passed to Cell.ResultInt."), helpcontext(0x00001388)]
    enum {
        visTruncate = 0,
        visRound = 1
    } VisRoundFlags;

    typedef [uuid(000D0C12-0000-0000-C000-000000000046), helpstring("Run types to be passed to Characters.RunBegin/End."), helpcontext(0x00001388)]
    enum {
        visCharPropRow = 1,
        visParaPropRow = 2,
        visTabPropRow = 3,
        visWordRun = 10,
        visParaRun = 11,
        visFieldRun = 20
    } VisRunTypes;

    typedef [uuid(000D0C13-0000-0000-C000-000000000046), helpstring("Bias to be passed to Characters.CharPropsRow, etc."), helpcontext(0x00001388)]
    enum {
        visBiasLetVisioChoose = 0,
        visBiasLeft = 1,
        visBiasRight = 2
    } VisCharsBias;

    typedef [uuid(000D0C14-0000-0000-C000-000000000046), helpstring("Values to be passed to ToolbarStyle."), helpcontext(0x00001388)]
    enum {
        visToolBarNone = -1,
        visToolBarOn = 0,
        visToolBarMSOffice = 0,
        visToolBarLotusSS = 0
    } VisToolbarFlavors;

    typedef [uuid(000D0C15-0000-0000-C000-000000000046), helpstring("Flags to pass to DrawSpline."), helpcontext(0x00001388)]
    enum {
        visSplinePeriodic = 1,
        visSplineDoCircles = 2,
        visSplineAbrupt = 4,
        visSpline1D = 8
    } VisDrawSplineFlags;

    typedef [uuid(000D0C16-0000-0000-C000-000000000046), helpstring("Type codes to be passed to Page.AddGuide."), helpcontext(0x00001388)]
    enum {
        visPoint = 1,
        visHorz = 2,
        visVert = 3
    } VisGuideTypes;

    typedef [uuid(000D0C17-0000-0000-C000-000000000046), helpstring("Attribute codes returned by Font.Attributes."), helpcontext(0x00001388)]
    enum {
        visFontRaster = 16,
        visFontDevice = 32,
        visFontScalable = 64,
        visFont0Alias = 128
    } VisFontAttributes;

    typedef [uuid(000D0C18-0000-0000-C000-000000000046), helpstring("Result codes returned by Stat method."), helpcontext(0x00001388)]
    enum {
        visStatNormal = 0,
        visStatAppHasShutdown = 1,
        visStatDeleted = 2,
        visStatTouched = 4,
        visStatClosed = 8,
        visStatSuspended = 16
    } VisStatCodes;

    typedef [uuid(000D0C19-0000-0000-C000-000000000046), helpstring("Codes of Visio events, event actions and event ids."), helpcontext(0x00001388)]
    enum {
        visEvtIDInval = -1,
        visEvtCodeInval = 0,
        visEvtCodeDocCreate = 1,
        visEvtCodeDocOpen = 2,
        visEvtCodeDocSave = 3,
        visEvtCodeDocSaveAs = 4,
        visEvtCodeDocRunning = 5,
        visEvtCodeDocDesign = 6,
        visEvtCodeBefDocSave = 7,
        visEvtCodeBefDocSaveAs = 8,
        visEvtCodeBefForcedFlush = 200,
        visEvtCodeAfterForcedFlush = 201,
        visEvtCodeWinSelChange = 701,
        visEvtCodeBefWinSelDel = 702,
        visEvtCodeBefWinPageTurn = 703,
        visEvtCodeWinPageTurn = 704,
        visEvtCodeShapeDelete = 801,
        visEvtCodeBefSelDel = 901,
        visEvtCodeSelAdded = 902,
        visEvtAdd = 32768,
        visEvtDel = 16384,
        visEvtMod = 8192,
        visEvtWindow = 1,
        visEvtDoc = 2,
        visEvtStyle = 4,
        visEvtMaster = 8,
        visEvtPage = 16,
        visEvtLayer = 32,
        visEvtShape = 64,
        visEvtText = 128,
        visEvtConnect = 256,
        visEvtSection = 512,
        visEvtRow = 1024,
        visEvtCell = 2048,
        visEvtFormula = 4096,
        visEvtApp = 4096,
        visEvtAppActivate = 1,
        visEvtAppDeactivate = 2,
        visEvtObjActivate = 4,
        visEvtObjDeactivate = 8,
        visEvtBeforeQuit = 16,
        visEvtBeforeModal = 32,
        visEvtAfterModal = 64,
        visEvtWinActivate = 128,
        visEvtMarker = 256,
        visEvtNonePending = 512,
        visEvtIdle = 1024,
        visEvtCode1stUser = 28672,
        visEvtCodeLastUser = 32767,
        visEvtCodeCreate = 1,
        visEvtCodeOpen = 2,
        visActCodeRunAddon = 1,
        visActCodeAdvise = 2,
        visEvtIdMostRecent = 0
    } VisEventCodes;

    typedef [uuid(000D0C1A-0000-0000-C000-000000000046), helpstring("Codes returned by object.ObjectType."), helpcontext(0x00001388)]
    enum {
        visObjTypeUnknown = 1,
        visObjTypeApp = 3,
        visObjTypeCell = 4,
        visObjTypeChars = 5,
        visObjTypeConnect = 8,
        visObjTypeConnects = 9,
        visObjTypeDoc = 10,
        visObjTypeDocs = 11,
        visObjTypeMaster = 12,
        visObjTypeMasters = 13,
        visObjTypePage = 14,
        visObjTypePages = 15,
        visObjTypeSelection = 16,
        visObjTypeShape = 17,
        visObjTypeShapes = 18,
        visObjTypeStyle = 19,
        visObjTypeStyles = 20,
        visObjTypeWindow = 21,
        visObjTypeWindows = 22,
        visObjTypeLayer = 25,
        visObjTypeLayers = 26,
        visObjTypeFont = 27,
        visObjTypeFonts = 28,
        visObjTypeColor = 29,
        visObjTypeColors = 30,
        visObjTypeAddon = 31,
        visObjTypeAddons = 32,
        visObjTypeEvent = 33,
        visObjTypeEventList = 34,
        visObjTypeGlobal = 36,
        visObjTypeHyperlink = 37,
        visObjTypeOLEObjects = 38,
        visObjTypeOLEObject = 39,
        visObjTypePaths = 40,
        visObjTypePath = 41,
        visObjTypeCurve = 42
    } VisObjectTypes;

    typedef [uuid(000D0C1B-0000-0000-C000-000000000046), helpstring("Text field categories."), helpcontext(0x00001388)]
    enum {
        visFCatCustom = 0,
        visFCatDateTime = 1,
        visFCatDocument = 2,
        visFCatGeometry = 3,
        visFCatObject = 4,
        visFCatPage = 5,
        visFCatNotes = 6
    } VisFieldCategories;

    typedef [uuid(000D0C1C-0000-0000-C000-000000000046), helpstring("Text field codes."), helpcontext(0x00001388)]
    enum {
        visFCodeCreateDate = 0,
        visFCodeCreateTime = 1,
        visFCodeCurrentDate = 2,
        visFCodeCurrentTime = 3,
        visFCodeEditDate = 4,
        visFCodeEditTime = 5,
        visFCodePrintDate = 6,
        visFCodePrintTime = 7,
        visFCodeCreator = 0,
        visFCodeDescription = 1,
        visFCodeDirectory = 2,
        visFCodeFileName = 3,
        visFCodeKeyWords = 4,
        visFCodeSubject = 5,
        visFCodeTitle = 6,
        visFCodeManager = 7,
        visFCodeCompany = 8,
        visFCodeCategory = 9,
        visFCodeHyperlinkBase = 10,
        visFCodeWidth = 0,
        visFCodeHeight = 1,
        visFCodeAngle = 2,
        visFCodeData1 = 0,
        visFCodeData2 = 1,
        visFCodeData3 = 2,
        visFCodeObjectID = 3,
        visFCodeMasterName = 4,
        visFCodeObjectName = 5,
        visFCodeObjectType = 6,
        visFCodeBackgroundName = 0,
        visFCodePageName = 1,
        visFCodeNumberOfPages = 2,
        visFCodePageNumber = 3
    } VisFieldCodes;

    typedef [uuid(000D0C1D-0000-0000-C000-000000000046), helpstring("Text field formats."), helpcontext(0x00001388)]
    enum {
        visFmtNumGenNoUnits = 0,
        visFmtNumGenDefUnits = 1,
        visFmt0PlNoUnits = 2,
        visFmt0PlDefUnits = 3,
        visFmt1PlNoUnits = 4,
        visFmt1PlDefUnits = 5,
        visFmt2PlNoUnits = 6,
        visFmt2PlDefUnits = 7,
        visFmt3PlNoUnits = 8,
        visFmt3PlDefUnits = 9,
        visFmtFeetAndInches = 10,
        visFmtRadians = 11,
        visFmtDegrees = 12,
        visFmtFeetAndInches1Pl = 13,
        visFmtFeetAndInches2Pl = 14,
        visFmtFraction1PlNoUnits = 15,
        visFmtFraction1PlDefUnits = 16,
        visFmtFraction2PlNoUnits = 17,
        visFmtFraction2PlDefUnits = 18,
        visFmtDateShort = 20,
        visFmtDateLong = 21,
        visFmtDateMDYY = 22,
        visFmtDateMMDDYY = 23,
        visFmtDateMmmDYYYY = 24,
        visFmtDateMmmmDYYYY = 25,
        visFmtDateDMYY = 26,
        visFmtDateDDMMYY = 27,
        visFmtDateDMMMYYYY = 28,
        visFmtDateDMMMMYYYY = 29,
        visFmtTimeGen = 30,
        visFmtTimeHMM = 31,
        visFmtTimeHHMM = 32,
        visFmtTimeHMM24 = 33,
        visFmtTimeHHMM24 = 34,
        visFmtTimeHMMAMPM = 35,
        visFmtTimeHHMMAMPM = 36,
        visFmtStrNormal = 37,
        visFmtStrLower = 38,
        visFmtStrUpper = 39,
        visFmtJDategggeXmXdXww = 40,
        visFmtJDateyyyyXmXdXww = 41,
        visFmtJDategggeXmXdX = 42,
        visFmtJDateyyyyXmXdX = 43,
        visFmtJDateyyyymd = 44,
        visFmtJDateyymmdd = 45,
        visFmtJDatehmmaxpx = 46,
        visFmtJDateaxpxhmm = 47,
        visFmtJDateaxpxhXmmX = 48,
        visFmtJDatehXmmX = 49,
        visFmtCDategggeXmmmmXdddd = 50,
        visFmtCDateggeXmmmmXdddd = 51,
        visFmtCDategeXmmmmXdddd = 52
    } VisFieldFormats;

    typedef [uuid(000D0C1E-0000-0000-C000-000000000046), helpstring("Document version codes."), helpcontext(0x00001388)]
    enum {
        visVersionUnsaved = 0,
        visVersion10 = 65571,
        visVersion20 = 131072,
        visVersion30 = 196611,
        visVersion40 = 262144,
        visVersion50 = 327680
    } VisDocVersions;

    typedef [uuid(000D0C1F-0000-0000-C000-000000000046), helpstring("Values for various properties of a Visio master."), helpcontext(0x00001388)]
    enum {
        visLeft = 1,
        visCenter = 2,
        visRight = 3,
        visIconFormatVisio = 0,
        visIconFormatBMP = 2,
        visNormal = 1,
        visTall = 2,
        visWide = 3,
        visDouble = 4,
        visAutomatic = 1,
        visManual = 0,
        visMasIsLinePat = 1,
        visMasIsLineEnd = 2,
        visMasIsFillPat = 4,
        visMasLPTileDeform = 0,
        visMasLPTile = 16,
        visMasLPStretch = 32,
        visMasLPAnnotate = 48,
        visMasLPScale = 64,
        visMasLEDefault = 0,
        visMasLEUpright = 256,
        visMasLEScale = 1024,
        visMasFPTile = 0,
        visMasFPCenter = 4096,
        visMasFPStretch = 8192,
        visMasFPScale = 16384
    } VisMasterProperties;

    typedef [uuid(000D0C20-0000-0000-C000-000000000046), helpstring("Codes returned by Connect.FromPart."), helpcontext(0x00001388)]
    enum {
        visConnectFromError = -1,
        visFromNone = 0,
        visLeftEdge = 1,
        visCenterEdge = 2,
        visRightEdge = 3,
        visBottomEdge = 4,
        visMiddleEdge = 5,
        visTopEdge = 6,
        visBeginX = 7,
        visBeginY = 8,
        visBegin = 9,
        visEndX = 10,
        visEndY = 11,
        visEnd = 12,
        visControlPoint = 100
    } VisFromParts;

    typedef [uuid(000D0C21-0000-0000-C000-000000000046), helpstring("Codes returned by Connect.ToPart."), helpcontext(0x00001388)]
    enum {
        visConnectToError = -1,
        visToNone = 0,
        visGuideX = 1,
        visGuideY = 2,
        visWholeShape = 3,
        visConnectionPoint = 100,
        visConnectError = -1,
        visNone = 0
    } VisToParts;

    typedef [uuid(000D0C80-0000-0000-C000-000000000046), helpstring("UI Object Set identifiers."), helpcontext(0x00001388)]
    enum {
        visUIObjSetNoDocument = 1,
        visUIObjSetDrawing = 2,
        visUIObjSetStencil = 3,
        visUIObjSetShapeSheet = 4,
        visUIObjSetIcon = 5,
        visUIObjSetInPlace = 6,
        visUIObjSetPrintPreview = 7,
        visUIObjSetText = 8,
        visUIObjSetCntx_DrawObjSel = 9,
        visUIObjSetCntx_DrawOleObjSel = 10,
        visUIObjSetCntx_DrawNoObjSel = 11,
        visUIObjSetCntx_InPlaceNoObj = 12,
        visUIObjSetCntx_TextEdit = 13,
        visUIObjSetCntx_StencilRO = 14,
        visUIObjSetCntx_ShapeSheet = 15,
        visUIObjSetCntx_Toolbar = 16,
        visUIObjSetCntx_FullScreen = 17,
        visUIObjSetBinderInPlace = 18,
        visUIObjSetCntx_Debug = 19,
        visUIObjSetCntx_StencilRW = 20,
        visUIObjSetCntx_StencilDocked = 21,
        visUIObjSetHostingInPlace = 22,
        visUIObjSetCntx_Hyperlink = 23,
        visUIObjSetPal_LineColors = 24,
        visUIObjSetPal_LineWeights = 25,
        visUIObjSetPal_LinePatterns = 26,
        visUIObjSetPal_FillColors = 27,
        visUIObjSetPal_FillPatterns = 28,
        visUIObjSetPal_TextColors = 29,
        visUIObjSetPal_AlignShapes = 30,
        visUIObjSetPal_DistributeShapes = 31,
        visUIObjSetPal_Shadow = 32,
        visUIObjSetPal_LineEnds = 33,
        visUIObjSetPal_CornerRounding = 34
    } VisUIObjSets;

    typedef [uuid(000D0C81-0000-0000-C000-000000000046), helpstring("Command numbers to be used with CmdNum property."), helpcontext(0x00001388)]
    enum {
        visCmdHierarchical = 200,
        visCmdFileNew = 1001,
        visCmdFileOpen = 1002,
        visCmdFileClose = 1003,
        visCmdFileSave = 1004,
        visCmdFileSaveAs = 1005,
        visCmdFileSaveWorkspace = 1006,
        visCmdFileImport = 1007,
        visCmdFileSummaryInfoDlg = 1009,
        visCmdFilePrint = 1010,
        visCmdFileExit = 1016,
        visCmdEditUndo = 1017,
        visCmdEditRedo = 1018,
        visCmdEditRepeat = 1019,
        visCmdUFEditCut = 1020,
        visCmdUFEditCopy = 1021,
        visCmdUFEditPaste = 1022,
        visCmdUFEditClear = 1023,
        visCmdUFEditDuplicate = 1024,
        visCmdUFEditSelectAll = 1025,
        visCmdEditSelectSpecial = 1026,
        visCmdEditPasteSpecial = 1027,
        visCmdEditOpenObject = 1029,
        visCmdEditLinks = 1030,
        visCmdEditInsertObject = 1031,
        visCmdEditInsertField = 1032,
        visCmdViewFitInWindow = 1033,
        visCmdView75 = 1034,
        visCmdView100 = 1035,
        visCmdView150 = 1036,
        visCmdView200 = 1037,
        visCmdViewCustom = 1038,
        visCmdViewRulers = 1039,
        visCmdViewGrid = 1040,
        visCmdViewGuides = 1041,
        visCmdViewConnections = 1042,
        visCmdEditFind = 1043,
        visCmdViewStatusBar = 1044,
        visCmdObjectBringForward = 1045,
        visCmdObjectBringToFront = 1046,
        visCmdObjectSendBackward = 1047,
        visCmdObjectSendToBack = 1048,
        visCmdObjectAlignObjects = 1049,
        visCmdObjectConnectObjects = 1050,
        visCmdObjectGroup = 1051,
        visCmdObjectUngroup = 1052,
        visCmdObjectAddToGroup = 1053,
        visCmdObjectRemoveFromGroup = 1054,
        visCmdObjectConvertToGroup = 1055,
        visCmdObjectRotate90 = 1056,
        visCmdObjectFlipVertical = 1057,
        visCmdObjectFlipHorizontal = 1058,
        visCmdObjectReverse = 1059,
        visCmdObjectUnion = 1060,
        visCmdObjectCombine = 1061,
        visCmdObjectFragment = 1062,
        visCmdFormatStyle = 1063,
        visCmdFormatDefineStyles = 1064,
        visCmdFormatLine = 1065,
        visCmdFormatFill = 1066,
        visCmdFormatText = 1067,
        visCmdFormatFont = 1067,
        visCmdFormatParagraph = 1068,
        visCmdFormatTabs = 1069,
        visCmdFormatBlock = 1070,
        visCmdFormatBehavior = 1071,
        visCmdFormatProtection = 1072,
        visCmdFormatSpecial = 1073,
        visCmdOptionsEditDrawing = 1074,
        visCmdOptionsEditBackground = 1075,
        visCmdOptionsPageSetup = 1076,
        visCmdOptionsGoToDrawing = 1077,
        visCmdOptionsNewPage = 1078,
        visCmdOptionsDeletePages = 1079,
        visCmdOptionsReorderPages = 1080,
        visCmdOptionsPreferences = 1081,
        visCmdOptionsColorPaletteDlg = 1082,
        visCmdOptionsProtectDocument = 1083,
        visCmdOptionsSnapGlueSetup = 1084,
        visCmdWindowNewWindow = 1085,
        visCmdWindowCascadeAll = 1086,
        visCmdWindowTileAll = 1087,
        visCmdWindowShowShapeSheet = 1088,
        visCmdWindowShowMasterObjects = 1089,
        visCmdRunAddOnMenu = 1090,
        visCmdWindowShowDrawPage = 1091,
        visCmdHelpContents = 1092,
        visCmdDecreaseIndent = 1093,
        visCmdIncreaseIndent = 1094,
        visCmdDecreaseParaSpacing = 1095,
        visCmdIncreaseParaSpacing = 1096,
        visCmdTextRotate90 = 1098,
        visCmdHelpAboutVisio = 1100,
        visCmdStenEditIcon = 1101,
        visCmdStenEditDrawing = 1102,
        visCmdStenNameMaster = 1103,
        visCmdStenNewMaster = 1104,
        visCmdStenImageMaster = 1105,
        visCmdStenCleanup = 1106,
        visCmdSWShowValues = 1107,
        visCmdSWShowFormulas = 1108,
        visCmdSWShowSectionsDlg = 1109,
        visCmdSWPasteNameDlg = 1110,
        visCmdSWPasteFunctionDlg = 1111,
        visCmdSWInsertRow = 1112,
        visCmdSWInsertRowAfter = 1113,
        visCmdSWChangeRowTypeDlg = 1114,
        visCmdSWDeleteRow = 1115,
        visCmdSWAddSectionDlg = 1116,
        visCmdSWDeleteSection = 1117,
        visCmdFormatDoubleClick = 1118,
        visCmdDrawLineStyle = 1122,
        visCmdDrawFillStyle = 1123,
        visCmdDrawSnap = 1124,
        visCmdDrawGlue = 1125,
        visCmdDrawZoom = 1126,
        visCmdTextStyle = 1128,
        visCmdTextFont = 1129,
        visCmdTextSize = 1130,
        visCmdTextBold = 1131,
        visCmdTextItalic = 1132,
        visCmdTextSmallCaps = 1133,
        visCmdTextSuperscript = 1134,
        visCmdTextSubscript = 1135,
        visCmdTextUline = 1136,
        visCmdSWCancel = 1139,
        visCmdSWAccept = 1140,
        visCmdSWFormula = 1141,
        visCmdSWShowToggle = 1142,
        visCmdIconLeftColor = 1143,
        visCmdIconPencilTool = 1145,
        visCmdRecalcObjectWH = 1146,
        visCmdTurnToPrevPage = 1147,
        visCmdTurnToNextPage = 1148,
        visCmdEditReplace = 1179,
        visCmdAlignObjectLeft = 1196,
        visCmdAlignObjectCenter = 1197,
        visCmdAlignObjectRight = 1198,
        visCmdAlignObjectTop = 1199,
        visCmdAlignObjectMiddle = 1200,
        visCmdAlignObjectBottom = 1201,
        visCmdCenterDrawing = 1202,
        visCmdDeselectAll = 1213,
        visCmdTextEditState = 1214,
        visCmdZoomIn = 1216,
        visCmdZoomOut = 1217,
        visCmdDRPointerTool = 1219,
        visCmdDRPencilTool = 1220,
        visCmdDRLineTool = 1221,
        visCmdDRQtrArcTool = 1222,
        visCmdDRRectTool = 1223,
        visCmdDROvalTool = 1224,
        visCmdDRConnectorTool = 1225,
        visCmdDRConnectionTool = 1226,
        visCmdDRTextTool = 1227,
        visCmdDRRotateTool = 1228,
        visCmdObjectDistributeDlg = 1230,
        visCmdDistributeHSpace = 1231,
        visCmdDistributeCenter = 1233,
        visCmdDistributeVSpace = 1235,
        visCmdDistributeMiddle = 1237,
        visCmdDlgLotusNotesFields = 1245,
        visCmdToolsSpelling = 1270,
        visCmdFormatPainter = 1271,
        visCmdStenFloating = 1274,
        visCmdView50 = 1279,
        visCmdView400 = 1280,
        visCmdSendAsMail = 1292,
        visCmdShapeActions = 1309,
        visCmdDRSplineTool = 1311,
        visCmdFormatCustPropEdit = 1312,
        visCmdRulerGridDlg = 1318,
        visCmdFormatShadow = 1333,
        visCmdFormatCorners = 1334,
        visCmdToolsInventory = 1335,
        visCmdPageSizeScale = 1076,
        visCmdStenSwitchSides = 1342,
        visCmdToolsArrayShapesAddOn = 1354,
        visCmdSetLineWeight = 1355,
        visCmdSetLinePattern = 1356,
        visCmdSetLineEnds = 1357,
        visCmdSetLineCornerStyle = 1358,
        visCmdSetLineColor = 1359,
        visCmdCloseWindow = 1361,
        visCmdSetFillShadow = 1379,
        visCmdSetFillColor = 1385,
        visCmdHelpMode = 1386,
        visCmdOffsetDlg = 1387,
        visCmdDesignMode = 1388,
        visCmdShapeExplorer = 1389,
        visCmdSetFillPattern = 1399,
        visCmdSetCharColor = 1404,
        visCmdSetCharSizeUp = 1405,
        visCmdSetCharSizeDown = 1406,
        visCmdTextHAlignLeft = 1407,
        visCmdTextHAlignCenter = 1408,
        visCmdTextHAlignRight = 1409,
        visCmdTextHAlignJustify = 1412,
        visCmdTextVAlignTop = 1413,
        visCmdTextVAlignMiddle = 1414,
        visCmdTextVAlignBottom = 1422,
        visCmdStampTool = 1424,
        visCmdObjectInfoDlg = 1425,
        visCmdObjectHelp = 1428,
        visCmdFileOpenStencil = 1442,
        visCmdPrintPage = 1443,
        visCmdSWShapeActionDlg = 1444,
        visCmdLayerDlg = 1446,
        visCmdLayerSetupDlg = 1448,
        visCmdCropTool = 1449,
        visCmdTextBlockTool = 1451,
        visCmdStenClose = 1452,
        visCmdIntersect = 1453,
        visCmdSubtract = 1454,
        visCmdStenActivate = 1458,
        visCmdStenIconAndName = 1480,
        visCmdStenIconOnly = 1481,
        visCmdStenNameOnly = 1482,
        visCmdStenAutoArrange = 1483,
        visCmdPrintPreview = 1490,
        visCmdOpenInVisio = 1491,
        visCmdFullScreenMode = 1492,
        visCmdRotate90Clockwise = 1494,
        visCmdZoomLast = 1495,
        visCmdZoomPageWidth = 1496,
        visCmdToolbarsDlg = 1500,
        visCmdINETAddToFavorites = 1506,
        visCmdViewPageBreaks = 1509,
        visCmdZoomSingleTile = 1512,
        visCmdPreviousTile = 1513,
        visCmdNextTile = 1514,
        visCmdFirstTile = 1515,
        visCmdLastTile = 1516,
        visCmdInsertAutoCADAddOn = 1521,
        visCmdInsertControlDlg = 1522,
        visCmdJoin = 1533,
        visCmdTrim = 1534,
        visCmdDlgCustomFit = 1536,
        visCmdFitCurve = 1538,
        visCmdIconBucketTool = 1543,
        visCmdIconLassoTool = 1544,
        visCmdIconSelectNet = 1545,
        visCmdToolsLayoutShapesDlg = 1574,
        visCmdToolsRunVBE = 1576,
        visCmdToolsMacroDlg = 1577,
        visCmdFileNewBlankDrawing = 1579,
        visCmdFileNewBlankStencil = 1582,
        visCmdProgRefHelp = 1584,
        visCmdInsertHyperLink = 1585,
        visCmdHelpTemplates = 1586,
        visCmdEmailRouting = 1588,
        visCmdSendToExchange = 1589,
        visCmdINETUserSearchPage = 1595,
        visCmdINETVisioHomePage = 1596,
        visCmdINETGoForward = 1598,
        visCmdINETGoBack = 1599,
        visCmdOpenActiveObject = 1601,
        visCmdCancelInPlaceEditing = 1602,
        visCmdINETVisioSolutionsLibrary = 1604,
        visCmdINETKnowledgeBase = 1605,
        visCmdINETDiagrammingResources = 1606,
        visCmdINETOpenHlink = 1607,
        visCmdINETOpenHlinkNewWnd = 1608,
        visCmdINETCopyHyperlink = 1610,
        visCmdHyperlinkHier = 1611,
        visCmdINETEditHyperlink = 1619,
        visCmdINETPasteAsHyperlink = 1620,
        visCmdBullets = 1633,
        visCmdShapeLayerToolbar = 1634,
        visCmdGoToPageToolbar = 1635,
        visCmdFormatAllTextProps = 1642,
        visCmdBrowseSampleDrawings = 1645
    } VisUICmds;

    typedef [uuid(000D0C82-0000-0000-C000-000000000046), helpstring("Toolbar and Status Bar constants for CtrlType property."), helpcontext(0x00001388)]
    enum {
        visCtrlTypeEND = 0,
        visCtrlTypeSTATE = 1,
        visCtrlTypeBUTTON = 2,
        visCtrlTypeSTATE_BUTTON = 3,
        visCtrlTypePALETTEBUTTON = 16,
        visCtrlTypeHIERBUTTON = 4,
        visCtrlTypeSTATE_HIERBUTTON = 5,
        visCtrlTypeDROPBUTTON = 8,
        visCtrlTypeSTATE_DROPBUTTON = 9,
        visCtrlTypeSPINBUTTON = 16,
        visCtrlTypePUSHBUTTON = 32,
        visCtrlTypeOWNERDRAW_BUTTON = 33,
        visCtrlTypeEDITBOX = 64,
        visCtrlTypeCOMBOBOX = 128,
        visCtrlTypeCOMBODRAW = 256,
        visCtrlTypeLISTBOX = 512,
        visCtrlTypeLISTBOXDRAW = 513,
        visCtrlTypeCOLORBOX = 1024,
        visCtrlTypeLABEL = 2048,
        visCtrlTypeMESSAGE = 4096,
        visCtrlTypeSPACER = 16384
    } VisUICtrlTypes;

    typedef [uuid(000D0C83-0000-0000-C000-000000000046), helpstring("Toolbar and Status Bar constants for Spacing property."), helpcontext(0x00001388)]
    enum {
        visCtrlSpacingNONE = 0,
        visCtrlSpacingVARIABLE_BEFORE = 1,
        visCtrlSpacingVARIABLE_AFTER = 2,
        visCtrlSpacingFIXED_BEFORE = 4,
        visCtrlSpacingFIXED_AFTER = 8,
        visCtrlSpacingNEW_ROW = 16,
        visCtrlSpacingTB_NOTFIXED = 32,
        visCtrlSpacingPALETTERIGHT = 64,
        visCtrlSpacingNEW_ROW_PALETTERIGHT = 80
    } VisUISpacingTypes;

    typedef [uuid(000D0C84-0000-0000-C000-000000000046), helpstring("Toolbar and Status Bar constants for control alignment."), helpcontext(0x00001388)]
    enum {
        visCtrlAlignmentLEFT = 1,
        visCtrlAlignmentCENTER = 2,
        visCtrlAlignmentRIGHT = 4,
        visCtrlAlignmentBOX = 128,
        visCtrlAlignmentLEFTBOX = 129,
        visCtrlAlignmentCENTERBOX = 130,
        visCtrlAlignmentRIGHTBOX = 132
    } VisUICtrlAtts;

    typedef [uuid(000D0C85-0000-0000-C000-000000000046), helpstring("Toolbar and Status Bar constants for CntrlID property."), helpcontext(0x00001388)]
    enum {
        visCtrlIDNEW = 8383,
        visCtrlIDOPEN = 1,
        visCtrlIDOPENSTEN = 2,
        visCtrlIDSAVE = 3,
        visCtrlIDPRINT = 4,
        visCtrlIDPREVIEW = 5,
        visCtrlIDCUT = 6,
        visCtrlIDCOPY = 7,
        visCtrlIDPASTE = 8,
        visCtrlIDCLEAR = 9,
        visCtrlIDUNDO = 10,
        visCtrlIDREDO = 11,
        visCtrlIDREPEAT = 12,
        visCtrlIDPREVIOUSPAGE = 13,
        visCtrlIDNEXTPAGE = 14,
        visCtrlIDZOOMOUT = 15,
        visCtrlIDZOOMIN = 16,
        visCtrlIDZOOM100 = 17,
        visCtrlIDFLIPHORZ = 18,
        visCtrlIDFLIPVERT = 19,
        visCtrlIDPOINTERTOOL = 20,
        visCtrlIDPENCILTOOL = 21,
        visCtrlIDLINETOOL = 22,
        visCtrlIDQTRARCTOOL = 23,
        visCtrlIDRECTTOOL = 24,
        visCtrlIDOVALTOOL = 25,
        visCtrlIDSTAMPTOOL = 26,
        visCtrlIDTEXTTOOL = 27,
        visCtrlIDROTATETOOL = 28,
        visCtrlIDCROPTOOL = 29,
        visCtrlIDCONNECTIONPTTOOL = 30,
        visCtrlIDSNAP = 31,
        visCtrlIDGLUE = 32,
        visCtrlIDRULER = 33,
        visCtrlIDGRID = 34,
        visCtrlIDGUIDE = 35,
        visCtrlIDCONNECT = 36,
        visCtrlIDROTATECLOCKWISE = 37,
        visCtrlIDROTATECOUNTER = 38,
        visCtrlIDNEWWINDOW = 39,
        visCtrlIDCORNERSTYLE = 40,
        visCtrlIDLINEEND = 41,
        visCtrlIDSHADOWSTYLE = 42,
        visCtrlIDFILLCOLOR = 43,
        visCtrlIDLINECOLOR = 44,
        visCtrlIDLINEWEIGHT = 45,
        visCtrlIDLINEPATTERN = 46,
        visCtrlIDFILLPATTERN = 47,
        visCtrlIDPOINTSIZEDOWN = 48,
        visCtrlIDPOINTSIZEUP = 49,
        visCtrlIDBOLD = 50,
        visCtrlIDITALIC = 51,
        visCtrlIDULINE = 52,
        visCtrlIDSUPERSCRIPT = 53,
        visCtrlIDSUBSCRIPT = 54,
        visCtrlIDTEXTCOLOR = 55,
        visCtrlIDTEXTLEFT = 56,
        visCtrlIDTEXTCENTER = 57,
        visCtrlIDTEXTRIGHT = 58,
        visCtrlIDTEXTJUSTIFY = 59,
        visCtrlIDTEXTTOP = 60,
        visCtrlIDTEXTMIDDLE = 61,
        visCtrlIDTEXTBOTTOM = 62,
        visCtrlIDALIGN = 63,
        visCtrlIDALIGNLEFT = 64,
        visCtrlIDALIGNCENTER = 65,
        visCtrlIDALIGNRIGHT = 66,
        visCtrlIDALIGNTOP = 67,
        visCtrlIDALIGNMIDDLE = 68,
        visCtrlIDALIGNBOTTOM = 69,
        visCtrlIDDISTRIBUTE = 70,
        visCtrlIDDHORZ_EQSPACE = 71,
        visCtrlIDDHORZ_CENTER = 72,
        visCtrlIDDVERT_EQSPACE = 73,
        visCtrlIDDVERT_MIDDLE = 74,
        visCtrlIDCONNECTSHAPES = 75,
        visCtrlIDFIRSTPAGE = 76,
        visCtrlIDLASTPAGE = 77,
        visCtrlIDPAGEBREAKS = 78,
        visCtrlIDICONNAME = 80,
        visCtrlIDICONONLY = 81,
        visCtrlIDNAMEONLY = 82,
        visCtrlIDARRANGEICONS = 83,
        visCtrlIDCANCELFORMULA = 84,
        visCtrlIDACCEPTFORMULA = 85,
        visCtrlIDICONPENCIL = 86,
        visCtrlIDICONBUCKET = 87,
        visCtrlIDICONLASSO = 88,
        visCtrlIDICONSELNET = 89,
        visCtrlIDBRINGFRONT = 90,
        visCtrlIDSENDBACK = 91,
        visCtrlIDGROUP = 92,
        visCtrlIDUNGROUP = 93,
        visCtrlIDCASCADE = 94,
        visCtrlIDTILE = 95,
        visCtrlIDCONNECTORTOOL = 96,
        visCtrlIDTEXTBLOCKTOOL = 97,
        visCtrlIDWHOLEPAGE = 98,
        visCtrlIDSINGLETILE = 99,
        visCtrlIDFORMULA = 190,
        visCtrlIDSPACER = 191,
        visCtrlIDALLSTYLESCOMBO = 200,
        visCtrlIDTEXTSTYLECOMBO = 201,
        visCtrlIDLINESTYLECOMBO = 202,
        visCtrlIDFILLSTYLECOMBO = 203,
        visCtrlIDZOOMCOMBO = 204,
        visCtrlIDFONTCOMBO = 205,
        visCtrlIDPOINTSIZECOMBO = 206,
        visCtrlIDALLSTYLESLIST = 220,
        visCtrlIDTEXTSTYLELIST = 221,
        visCtrlIDLINESTYLELIST = 222,
        visCtrlIDFILLSTYLELIST = 223,
        visCtrlIDZOOMLIST = 224,
        visCtrlIDFONTLIST = 225,
        visCtrlIDPOINTSIZELIST = 226,
        visCtrlIDGOTOPAGELIST = 227,
        visCtrlIDCLOSE = 240,
        visCtrlIDLEFTCOLORBOX = 300,
        visCtrlIDRIGHTCOLORBOX = 301,
        visCtrlIDCOLOR1 = 302,
        visCtrlIDCOLOR2 = 303,
        visCtrlIDCOLOR3 = 304,
        visCtrlIDCOLOR4 = 305,
        visCtrlIDCOLOR5 = 306,
        visCtrlIDCOLOR6 = 307,
        visCtrlIDCOLOR7 = 308,
        visCtrlIDCOLOR8 = 309,
        visCtrlIDCOLOR9 = 310,
        visCtrlIDCOLOR10 = 311,
        visCtrlIDCOLOR11 = 312,
        visCtrlIDCOLOR12 = 313,
        visCtrlIDCOLOR13 = 314,
        visCtrlIDCOLOR14 = 315,
        visCtrlIDCOLOR15 = 316,
        visCtrlIDCOLOR16 = 317,
        visCtrlIDTRANSPARENT = 318,
        visCtrlIDALLSTYLESLABEL = 400,
        visCtrlIDTEXTSTYLELABEL = 401,
        visCtrlIDLINESTYLELABEL = 402,
        visCtrlIDFILLSTYLELABEL = 403,
        visCtrlIDZOOMLABEL = 404,
        visCtrlIDFONTLABEL = 405,
        visCtrlIDPOINTSIZELABEL = 406,
        visCtrlIDLEFTCOLORLABEL = 407,
        visCtrlIDRIGHTCOLORLABEL = 408,
        visCtrlIDSTATUSLABEL = 409,
        visCtrlIDPREVIEWLABEL = 410,
        visCtrlIDSTATUSREADOUT = 500,
        visCtrlIDSTATUSMSG_1 = 501,
        visCtrlIDSTATUSMSG_2 = 502,
        visCtrlIDSTATUSMSG_3 = 503,
        visCtrlIDSTATUSMSG_4 = 504,
        visCtrlIDSTATUSMSG_5 = 505,
        visCtrlIDSTATUSMSG_6 = 506,
        visCtrlIDSTATUSMSG_7 = 507,
        visCtrlIDSTATUSMSG_8 = 508,
        visCtrlIDSTATUSMSG_9 = 509,
        visCtrlIDSPLINETOOL = 79,
        visCtrlIDSPELLING = 100,
        visCtrlIDFORMATPAINTER = 101,
        visCtrlIDHELPMODE = 102,
        visCtrlIDLAYERPROPERTIES = 103,
        visCtrlIDLAYOUTSHAPES = 104,
        visCtrlIDINSERTHYPERLINK = 105,
        visCtrlIDSEARCHTHEWEB = 106,
        visCtrlIDGOBACK = 107,
        visCtrlIDGOFORWARD = 108,
        visCtrlIDWEBTOOLBAR = 109,
        visCtrlIDSHAPEEXPL = 110,
        visCtrlIDCUSTPROP = 111,
        visCtrlIDROTATETEXT = 112,
        visCtrlIDBULLETS = 113,
        visCtrlIDDECRINDENT = 114,
        visCtrlIDINCRINDENT = 115,
        visCtrlIDDECRPARA = 116,
        visCtrlIDINCRPARA = 117,
        visCtrlIDINSERTCONTROL = 118,
        visCtrlIDDESIGNMODE = 119,
        visCtrlIDSHAPESHEET = 120,
        visCtrlIDSHAPELAYER = 247,
        visCtrlIDGOTOPAGE = 207,
        visCtrlIDLINECOLORS = 241,
        visCtrlIDLINEWEIGHTS = 242,
        visCtrlIDLINEPATTERNS = 243,
        visCtrlIDFILLCOLORS = 244,
        visCtrlIDFILLPATTERNS = 245,
        visCtrlIDTEXTCOLORS = 246,
        visCtrlIDMACROS = 121,
        visCtrlIDVBEDITOR = 122,
        visCtrlIDSHAPELAYERCOMBO = 208,
        visCtrlIDSHAPELAYERLIST = 228,
        visCtrlIDALIGNSHAPES = 260,
        visCtrlIDDISTRIBUTESHAPES = 261,
        visCtrlIDMSG_PAGES = 510
    } VisUICtrlIDs;

    typedef [uuid(000D0C86-0000-0000-C000-000000000046), helpstring("Toolbar and Status Bar icon identifiers."), helpcontext(0x00001388)]
    enum {
        visIconIXNEW = 0,
        visIconIXOPEN = 1,
        visIconIXOPENSTENCIL = 2,
        visIconIXSAVE = 3,
        visIconIXPRINT = 4,
        visIconIXPRINTPREVIEW = 5,
        visIconIXCUT = 6,
        visIconIXCOPY = 7,
        visIconIXPASTE = 8,
        visIconIXCLEAR = 9,
        visIconIXUNDO = 10,
        visIconIXREDO = 11,
        visIconIXREPEAT = 12,
        visIconIXPREVIOUSPAGE = 13,
        visIconIXNEXTPAGE = 14,
        visIconIXZOOMOUT = 15,
        visIconIXZOOMIN = 16,
        visIconIXZOOM100 = 17,
        visIconIXFLIPHORIZONTAL = 18,
        visIconIXFLIPVERTICAL = 19,
        visIconIXPOINTERTOOL = 20,
        visIconIXPENCILTOOL = 21,
        visIconIXLINETOOL = 22,
        visIconIXQTRARCTOOL = 23,
        visIconIXRECTANGLETOOL = 24,
        visIconIXOVALTOOL = 25,
        visIconIXSTAMPTOOL = 26,
        visIconIXTEXTOOL = 27,
        visIconIXROTATETOOL = 28,
        visIconIXCROP = 29,
        visIconIXCONNECTIONPTTOOL = 30,
        visIconIXSNAP = 31,
        visIconIXGLUE = 32,
        visIconIXRULER = 33,
        visIconIXGRID = 34,
        visIconIXGUIDE = 35,
        visIconIXCONNECTIONPOINTS = 36,
        visIconIXROTATECLOCKWISE = 37,
        visIconIXROTATECOUNTERCLOCKWISE = 38,
        visIconIXNEWWINDOW = 39,
        visIconIXCORNERSTYLE = 40,
        visIconIXLINEEND = 41,
        visIconIXSHADOWSTYLE = 42,
        visIconIXFILLCOLOR = 43,
        visIconIXLINECOLOR = 44,
        visIconIXLINEWEIGHT = 45,
        visIconIXLINEPATTERN = 46,
        visIconIXFILLPATTERN = 47,
        visIconIXPOINTSIZEDOWN = 48,
        visIconIXPOINTSIZEUP = 49,
        visIconIXBOLD = 50,
        visIconIXITALIC = 51,
        visIconIXUNDERLINE = 52,
        visIconIXSUPERSCRIPT = 53,
        visIconIXSUBSCRIPT = 54,
        visIconIXTEXTCOLOR = 55,
        visIconIXTEXTALIGNLEFT = 56,
        visIconIXTEXTALIGNCENTER = 57,
        visIconIXTEXTALIGNRIGHT = 58,
        visIconIXTEXTALIGNJUSTIFY = 59,
        visIconIXTEXTALIGNTOP = 60,
        visIconIXTEXTALIGNMIDDLE = 61,
        visIconIXTEXTALIGNBOTTOM = 62,
        visIconIXALIGN = 63,
        visIconIXALIGNLEFT = 64,
        visIconIXALIGNCENTER = 65,
        visIconIXALIGNRIGHT = 66,
        visIconIXALIGNTOP = 67,
        visIconIXALIGNMIDDLE = 68,
        visIconIXALIGNBOTTOM = 69,
        visIconIXDISTRIBUTE = 70,
        visIconIXDHORZ_EQSPACE = 71,
        visIconIXDHORZ_CENTER = 72,
        visIconIXDVERT_EQSPACE = 73,
        visIconIXDVERT_MIDDLE = 74,
        visIconIXCONNECTSHAPES = 75,
        visIconIXFIRSTPAGE = 76,
        visIconIXLASTPAGE = 77,
        visIconIXPAGEBREAKS = 78,
        visIconIXSPLINETOOL = 79,
        visIconIXICONNAME = 80,
        visIconIXICONONLY = 81,
        visIconIXNAMEONLY = 82,
        visIconIXARRANGE = 83,
        visIconIXCANCEL = 84,
        visIconIXACCEPT = 85,
        visIconIXICONPENCIL = 86,
        visIconIXICONBUCKET = 87,
        visIconIXICONLASSO = 88,
        visIconIXICONSELNET = 89,
        visIconIXBRINGFRONT = 90,
        visIconIXSENDBACK = 91,
        visIconIXGROUP = 92,
        visIconIXUNGROUP = 93,
        visIconIXCASCADE = 94,
        visIconIXTILE = 95,
        visIconIXCONNECTORTOOL = 96,
        visIconIXTEXTBLOCKTOOL = 97,
        visIconIXWHOLEPAGE = 98,
        visIconIXSINGLETILE = 99,
        visIconIXSPELLING = 100,
        visIconIXFORMATPAINTER = 101,
        visIconIXHELPMODE = 102,
        visIconIXLAYERPROPERTIES = 103,
        visIconIXLAYOUTSHAPES = 104,
        visIconIXINSERTHYPERLINK = 105,
        visIconIXSEARCHTHEWEB = 106,
        visIconIXGOBACK = 107,
        visIconIXGOFORWARD = 108,
        visIconIXWEBTOOLBAR = 109,
        visIconIXSHAPEEXPL = 110,
        visIconIXCUSTPROP = 111,
        visIconIXROTATETEXT = 112,
        visIconIXBULLETS = 113,
        visIconIXDECRINDENT = 114,
        visIconIXINCRINDENT = 115,
        visIconIXDECRPARA = 116,
        visIconIXINCRPARA = 117,
        visIconIXINSERTCONTROL = 118,
        visIconIXDESIGNMODE = 119,
        visIconIXSHAPESHEET = 120,
        visIconIXMACROS = 121,
        visIconIXVBEDITOR = 122
    } VisUIIconIDs;

    typedef [uuid(000D0C87-0000-0000-C000-000000000046), helpstring("Toolbar and Status Bar string identifiers."), helpcontext(0x00001388)]
    enum {
        visStrIDBASESTRINGID = 2000,
        visStrIDALLSTYLES = 2000,
        visStrIDTEXTSTYLE = 2001,
        visStrIDLINESTYLE = 2002,
        visStrIDFILLSTYLE = 2003,
        visStrIDZOOM = 2004,
        visStrIDFONT = 2005,
        visStrIDPOINTSIZE = 2006,
        visStrIDLEFTCOLOR = 2007,
        visStrIDRIGHTCOLOR = 2008,
        visStrIDSTATUS = 2009,
        visStrIDPRINTPREVIEW = 2010,
        visStrIDTEXTEDIT = 2011,
        visStrIDCLOSE = 2050,
        visStrIDNONE = 2300,
        visStrIDCHANGE = 2301,
        visStrIDSPACE = 2302,
        visStrIDREADY = 2320,
        visStrIDWAIT = 2321,
        visStrIDDRAG = 2322,
        visStrIDDRAW = 2323,
        visStrIDEDIT = 2324,
        visStrIDMOVE = 2325,
        visStrIDSIZE = 2326,
        visStrIDROTATE = 2327,
        visStrIDCROP = 2328,
        visStrIDSCROLL = 2329,
        visStrIDADD = 2330,
        visStrIDEXTEND = 2331,
        visStrIDCOPY = 2332,
        visStrIDLINECOLORS = 2051,
        visStrIDLINEWEIGHTS = 2052,
        visStrIDLINEPATTERNS = 2053,
        visStrIDFILLCOLORS = 2054,
        visStrIDFILLPATTERNS = 2055,
        visStrIDTEXTCOLORS = 2056,
        visStrIDSHADOWS = 2057,
        visStrIDLINEENDS = 2058,
        visStrIDCORNERS = 2059,
        visStrIDNOSHADOW = 2060
    } VisUIStringIDs;

    [
      odl,
      uuid(000D0700-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVApplication : IDispatch {
        [id(00000000), propget, helpcontext(0x00000007)]
        HRESULT _stdcall ActiveDocument([out, retval] IVDocument** lpdispRet);
        [id(0x00000001), propget, helpcontext(0x00000008)]
        HRESULT _stdcall ActivePage([out, retval] IVPage** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000009)]
        HRESULT _stdcall ActiveWindow([out, retval] IVWindow** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000004), propget, helpcontext(0x00000088)]
        HRESULT _stdcall Documents([out, retval] IVDocuments** lpdispRet);
        [id(0x00000005), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000006), propget, helpcontext(0x00000113)]
        HRESULT _stdcall OnDataChangeDelay([out, retval] long* lpi4Ret);
        [id(0x00000006), propput, helpcontext(0x00000113)]
        HRESULT _stdcall OnDataChangeDelay([in] long lpi4Ret);
        [id(0x00000007), propget, helpcontext(0x0000013f)]
        HRESULT _stdcall ProcessID([out, retval] long* lpi4Ret);
        [id(0x00000009), helpcontext(0x00000147)]
        HRESULT _stdcall Quit();
        [id(0x0000000a), helpcontext(0x0000014b)]
        HRESULT _stdcall Redo();
        [id(0x0000000b), propget, helpcontext(0x0000016a)]
        HRESULT _stdcall ScreenUpdating([out, retval] short* lpi2Ret);
        [id(0x0000000b), propput, helpcontext(0x0000016a)]
        HRESULT _stdcall ScreenUpdating([in] short lpi2Ret);
        [id(0x0000000c), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x0000000d), helpcontext(0x000001b8)]
        HRESULT _stdcall Undo();
        [id(0x0000000e), propget, helpcontext(0x000001c5)]
        HRESULT _stdcall Version([out, retval] BSTR* lpbstrRet);
        [id(0x0000000f), propget, helpcontext(0x000001c8)]
        HRESULT _stdcall WindowHandle([out, retval] short* lpi2Ret);
        [id(0x00000010), propget, helpcontext(0x000001cb)]
        HRESULT _stdcall Windows([out, retval] IVWindows** lpdispRet);
        [id(0x00000008), propget, helpcontext(0x000000ee)]
        HRESULT _stdcall Language([out, retval] long* lpi4Ret);
        [id(0x00000011), propget, helpcontext(0x000000e6)]
        HRESULT _stdcall IsVisio16([out, retval] short* lpi2Ret);
        [id(0x00000012), propget, helpcontext(0x000000e7)]
        HRESULT _stdcall IsVisio32([out, retval] short* lpi2Ret);
        [id(0x00000013), propget, helpcontext(0x000001c9)]
        HRESULT _stdcall WindowHandle32([out, retval] long* lpi4Ret);
        [id(0x00000014), propget, helpcontext(0x000000de)]
        HRESULT _stdcall InstanceHandle([out, retval] short* lpi2Ret);
        [id(0x00000015), propget, helpcontext(0x000000df)]
        HRESULT _stdcall InstanceHandle32([out, retval] long* lpi4Ret);
        [id(0x00000016), propget, helpcontext(0x00000044)]
        HRESULT _stdcall BuiltInMenus([out, retval] IVUIObject** lpdispRet);
        [id(0x00000017), propget, helpcontext(0x00000045)]
        HRESULT _stdcall BuiltInToolbars(
                        [in] short fIgnored, 
                        [out, retval] IVUIObject** lpdispRet);
        [id(0x00000018), propget, helpcontext(0x0000006d)]
        HRESULT _stdcall CustomMenus([out, retval] IVUIObject** lpdispRet);
        [id(0x00000019), helpcontext(0x00000176)]
        HRESULT _stdcall SetCustomMenus([in] IVUIObject* MenusObject);
        [id(0x0000001a), propget, helpcontext(0x0000006e)]
        HRESULT _stdcall CustomMenusFile([out, retval] BSTR* lpbstrRet);
        [id(0x0000001a), propput, helpcontext(0x0000006e)]
        HRESULT _stdcall CustomMenusFile([in] BSTR lpbstrRet);
        [id(0x0000001b), helpcontext(0x00000055)]
        HRESULT _stdcall ClearCustomMenus();
        [id(0x0000001c), propget, helpcontext(0x0000006f)]
        HRESULT _stdcall CustomToolbars([out, retval] IVUIObject** lpdispRet);
        [id(0x0000001d), helpcontext(0x00000177)]
        HRESULT _stdcall SetCustomToolbars([in] IVUIObject* ToolbarsObject);
        [id(0x0000001e), propget, helpcontext(0x00000070)]
        HRESULT _stdcall CustomToolbarsFile([out, retval] BSTR* lpbstrRet);
        [id(0x0000001e), propput, helpcontext(0x00000070)]
        HRESULT _stdcall CustomToolbarsFile([in] BSTR lpbstrRet);
        [id(0x0000001f), helpcontext(0x00000056)]
        HRESULT _stdcall ClearCustomToolbars();
        [id(0x00000020), propget, helpcontext(0x00000015)]
        HRESULT _stdcall AddonPaths([out, retval] BSTR* lpbstrRet);
        [id(0x00000020), propput, helpcontext(0x00000015)]
        HRESULT _stdcall AddonPaths([in] BSTR lpbstrRet);
        [id(0x00000021), propget, helpcontext(0x0000008c)]
        HRESULT _stdcall DrawingPaths([out, retval] BSTR* lpbstrRet);
        [id(0x00000021), propput, helpcontext(0x0000008c)]
        HRESULT _stdcall DrawingPaths([in] BSTR lpbstrRet);
        [id(0x00000022), propget, helpcontext(0x000000ab)]
        HRESULT _stdcall FilterPaths([out, retval] BSTR* lpbstrRet);
        [id(0x00000022), propput, helpcontext(0x000000ab)]
        HRESULT _stdcall FilterPaths([in] BSTR lpbstrRet);
        [id(0x00000023), propget, helpcontext(0x000000cd)]
        HRESULT _stdcall HelpPaths([out, retval] BSTR* lpbstrRet);
        [id(0x00000023), propput, helpcontext(0x000000cd)]
        HRESULT _stdcall HelpPaths([in] BSTR lpbstrRet);
        [id(0x00000024), propget, helpcontext(0x0000018e)]
        HRESULT _stdcall StartupPaths([out, retval] BSTR* lpbstrRet);
        [id(0x00000024), propput, helpcontext(0x0000018e)]
        HRESULT _stdcall StartupPaths([in] BSTR lpbstrRet);
        [id(0x00000025), propget, helpcontext(0x00000192)]
        HRESULT _stdcall StencilPaths([out, retval] BSTR* lpbstrRet);
        [id(0x00000025), propput, helpcontext(0x00000192)]
        HRESULT _stdcall StencilPaths([in] BSTR lpbstrRet);
        [id(0x00000026), propget, helpcontext(0x000001a2)]
        HRESULT _stdcall TemplatePaths([out, retval] BSTR* lpbstrRet);
        [id(0x00000026), propput, helpcontext(0x000001a2)]
        HRESULT _stdcall TemplatePaths([in] BSTR lpbstrRet);
        [id(0x00000027), propget, helpcontext(0x000001be)]
        HRESULT _stdcall UserName([out, retval] BSTR* lpbstrRet);
        [id(0x00000027), propput, helpcontext(0x000001be)]
        HRESULT _stdcall UserName([in] BSTR lpbstrRet);
        [id(0x00000028), propget, helpcontext(0x00000143)]
        HRESULT _stdcall PromptForSummary([out, retval] short* lpi2Ret);
        [id(0x00000028), propput, helpcontext(0x00000143)]
        HRESULT _stdcall PromptForSummary([in] short lpi2Ret);
        [id(0x00000029), propget, helpcontext(0x00000016)]
        HRESULT _stdcall Addons([out, retval] IVAddons** lpdispRet);
        [id(0x0000002a), helpcontext(0x00000169)]
        HRESULT _stdcall SaveWorkspaceAs([in] BSTR FileName);
        [id(0x0000002b), helpcontext(0x00000082)]
        HRESULT _stdcall DoCmd([in] short CommandID);
        [id(0x0000002c), propget, helpcontext(0x00000140)]
        HRESULT _stdcall ProfileName([out, retval] BSTR* lpbstrRet);
        [id(0x0000002d), propget, helpcontext(0x0000009d)]
        HRESULT _stdcall EventInfo(
                        [in] long reservedPass0, 
                        [out, retval] BSTR* lpbstrRet);
        [id(0x0000002e), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x0000002f), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpi2Ret);
        [id(0x00000030), propget, helpcontext(0x00000006)]
        HRESULT _stdcall Active([out, retval] short* lpi2Ret);
        [id(0x00000031), propget, helpcontext(0x0000007a)]
        HRESULT _stdcall DeferRecalc([out, retval] short* lpi2Ret);
        [id(0x00000031), propput, helpcontext(0x0000007a)]
        HRESULT _stdcall DeferRecalc([in] short lpi2Ret);
        [id(0x00000032), propget, helpcontext(0x0000001e)]
        HRESULT _stdcall AlertResponse([out, retval] short* lpi2Ret);
        [id(0x00000032), propput, helpcontext(0x0000001e)]
        HRESULT _stdcall AlertResponse([in] short lpi2Ret);
        [id(0x00000033), propget, helpcontext(0x00000188)]
        HRESULT _stdcall ShowProgress([out, retval] short* lpi2Ret);
        [id(0x00000033), propput, helpcontext(0x00000188)]
        HRESULT _stdcall ShowProgress([in] short lpi2Ret);
        [id(0x00000034), propget, helpcontext(0x000001c0)]
        HRESULT _stdcall Vbe([out, retval] IDispatch** lpdispRet);
        [id(0x00000035), propget, helpcontext(0x00000186)]
        HRESULT _stdcall ShowMenus([out, retval] short* lpi2Ret);
        [id(0x00000035), propput, helpcontext(0x00000186)]
        HRESULT _stdcall ShowMenus([in] short lpi2Ret);
        [id(0x00000036), propget, helpcontext(0x000001ae)]
        HRESULT _stdcall ToolbarStyle([out, retval] short* lpi2Ret);
        [id(0x00000036), propput, helpcontext(0x000001ae)]
        HRESULT _stdcall ToolbarStyle([in] short lpi2Ret);
        [id(0x00000037), propget, helpcontext(0x0000018a)]
        HRESULT _stdcall ShowStatusBar([out, retval] short* lpi2Ret);
        [id(0x00000037), propput, helpcontext(0x0000018a)]
        HRESULT _stdcall ShowStatusBar([in] short lpi2Ret);
        [id(0x00000038), propget, helpcontext(0x0000009f)]
        HRESULT _stdcall EventsEnabled([out, retval] short* lpi2Ret);
        [id(0x00000038), propput, helpcontext(0x0000009f)]
        HRESULT _stdcall EventsEnabled([in] short lpi2Ret);
        [id(0x00000039), helpcontext(0x000000b5)]
        HRESULT _stdcall FormatResult(
                        [in] VARIANT StringOrNumber, 
                        [in] VARIANT UnitsIn, 
                        [in] VARIANT UnitsOut, 
                        [in] BSTR Format, 
                        [out, retval] BSTR* lpbstrRet);
        [id(0x0000003a), helpcontext(0x00000067)]
        HRESULT _stdcall ConvertResult(
                        [in] VARIANT StringOrNumber, 
                        [in] VARIANT UnitsIn, 
                        [in] VARIANT UnitsOut, 
                        [out, retval] double* lpr8Ret);
        [id(0x0000003b), propget, helpcontext(0x0000012b)]
        HRESULT _stdcall Path([out, retval] BSTR* lpbstrRet);
        [id(0x0000003c), helpcontext(0x0000009a)]
        HRESULT _stdcall EnumDirectories(
                        [in] BSTR PathsString, 
                        [out] SAFEARRAY(BSTR)* NameArray);
        [id(0x0000003d), propget, helpcontext(0x000001b2)]
        HRESULT _stdcall TraceFlags([out, retval] long* lpi4Ret);
        [id(0x0000003d), propput, helpcontext(0x000001b2)]
        HRESULT _stdcall TraceFlags([in] long lpi4Ret);
        [id(0x0000003e), helpcontext(0x00000144)]
        HRESULT _stdcall PurgeUndo();
        [id(0x0000003f), helpcontext(0x00000146)]
        HRESULT _stdcall QueueMarkerEvent(
                        [in] BSTR ContextString, 
                        [out, retval] long* lpi4Ret);
        [id(0x00000040), propget, helpcontext(0x0000018b)]
        HRESULT _stdcall ShowToolbar([out, retval] short* lpi2Ret);
        [id(0x00000040), propput, helpcontext(0x0000018b)]
        HRESULT _stdcall ShowToolbar([in] short lpi2Ret);
    };

    [
      odl,
      uuid(000D0701-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVCell : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000003), propget, helpcontext(0x0000009b)]
        HRESULT _stdcall Error([out, retval] short* lpi2Ret);
        [id(0x00000004), propget, helpcontext(0x000000b6)]
        HRESULT _stdcall Formula([out, retval] BSTR* lpbstrRet);
        [id(0x00000004), propput, helpcontext(0x000000b6)]
        HRESULT _stdcall Formula([in] BSTR lpbstrRet);
        [id(0x00000005), propput, helpcontext(0x000000b8)]
        HRESULT _stdcall FormulaForce([in] BSTR rhs);
        [id(0x00000006), helpcontext(0x000000c4)]
        HRESULT _stdcall GlueTo([in] IVCell* CellObject);
        [id(0x00000007), helpcontext(0x000000c5)]
        HRESULT _stdcall GlueToPos(
                        [in] IVShape* SheetObject, 
                        [in] double xPercent, 
                        [in] double yPercent);
        [id(0x00000008), propget, helpcontext(0x0000014e)]
        HRESULT _stdcall Result(
                        [in] VARIANT UnitsNameOrCode, 
                        [out, retval] double* lpr8Ret);
        [id(0x00000008), propput, helpcontext(0x0000014e)]
        HRESULT _stdcall Result(
                        [in] VARIANT UnitsNameOrCode, 
                        [in] double lpr8Ret);
        [id(0x00000009), propput, helpcontext(0x0000014f)]
        HRESULT _stdcall ResultForce(
                        [in] VARIANT UnitsNameOrCode, 
                        [in] double rhs);
        [id(00000000), propget, helpcontext(0x00000153)]
        HRESULT _stdcall ResultIU([out, retval] double* lpr8Ret);
        [id(00000000), propput, helpcontext(0x00000153)]
        HRESULT _stdcall ResultIU([in] double lpr8Ret);
        [id(0x0000000a), propput, helpcontext(0x00000154)]
        HRESULT _stdcall ResultIUForce([in] double rhs);
        [id(0x0000000b), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x0000000c), propget, helpcontext(0x000001bc)]
        HRESULT _stdcall Units([out, retval] short* lpi2Ret);
        [id(0x0000000d), propget, helpcontext(0x0000010b)]
        HRESULT _stdcall Name([out, retval] BSTR* lpbstrRet);
        [id(0x0000000e), propget, helpcontext(0x000000fa)]
        HRESULT _stdcall LocalName([out, retval] BSTR* lpbstrRet);
        [id(0x0000000f), propput, helpcontext(0x0000015c)]
        HRESULT _stdcall RowName([in] BSTR lpbstrRet);
        [id(0x00000010), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000011), propget, helpcontext(0x0000017c)]
        HRESULT _stdcall Shape([out, retval] IVShape** lpdispRet);
        [id(0x00000012), propget, helpcontext(0x00000194)]
        HRESULT _stdcall Style([out, retval] IVStyle** lpdispRet);
        [id(0x00000013), propget, helpcontext(0x0000016b)]
        HRESULT _stdcall Section([out, retval] short* lpi2Ret);
        [id(0x00000014), propget, helpcontext(0x00000159)]
        HRESULT _stdcall Row([out, retval] short* lpi2Ret);
        [id(0x00000015), propget, helpcontext(0x0000005d)]
        HRESULT _stdcall Column([out, retval] short* lpi2Ret);
        [id(0x00000016), propget, helpcontext(0x000000e1)]
        HRESULT _stdcall IsConstant([out, retval] short* lpi2Ret);
        [id(0x00000017), propget, helpcontext(0x000000e4)]
        HRESULT _stdcall IsInherited([out, retval] short* lpi2Ret);
        [id(0x00000018), propget, helpcontext(0x00000152)]
        HRESULT _stdcall ResultInt(
                        [in] VARIANT UnitsNameOrCode, 
                        [in] short fRound, 
                        [out, retval] long* lpi4Ret);
        [id(0x000009c3), propput, helpcontext(0x00000150)]
        HRESULT _stdcall ResultFromInt(
                        [in] VARIANT UnitsNameOrCode, 
                        [in] long rhs);
        [id(0x00000019), propput, helpcontext(0x00000151)]
        HRESULT _stdcall ResultFromIntForce(
                        [in] VARIANT UnitsNameOrCode, 
                        [in] long rhs);
        [id(0x0000001a), propget, helpcontext(0x00000155)]
        HRESULT _stdcall ResultStr(
                        [in] VARIANT UnitsNameOrCode, 
                        [out, retval] BSTR* lpbstrRet);
        [id(0x0000001b), helpcontext(0x000001b3)]
        HRESULT _stdcall Trigger();
        [id(0x0000000f), propget, helpcontext(0x0000015c)]
        HRESULT _stdcall RowName([out, retval] BSTR* lpbstrRet);
        [id(0x0000001c), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x0000001d), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
    };

    [
      odl,
      uuid(000D0702-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVCharacters : IDispatch {
        [id(0x00000001), helpcontext(0x0000000e)]
        HRESULT _stdcall AddCustomField(
                        [in] BSTR Formula, 
                        [in] short Format);
        [id(0x00000002), helpcontext(0x0000000f)]
        HRESULT _stdcall AddField(
                        [in] short Category, 
                        [in] short Code, 
                        [in] short Format);
        [id(0x00000003), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000004), propget, helpcontext(0x0000003b)]
        HRESULT _stdcall Begin([out, retval] long* lpi4Ret);
        [id(0x00000004), propput, helpcontext(0x0000003b)]
        HRESULT _stdcall Begin([in] long lpi4Ret);
        [id(0x00000005), propget, helpcontext(0x00000050)]
        HRESULT _stdcall CharCount([out, retval] long* lpi4Ret);
        [id(0x00000015), propput, helpcontext(0x00000051)]
        HRESULT _stdcall CharProps(
                        [in] short CellIndex, 
                        [in] short rhs);
        [id(0x00000010), propget, helpcontext(0x00000052)]
        HRESULT _stdcall CharPropsRow(
                        [in] short BiasLorR, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000006), helpcontext(0x00000069)]
        HRESULT _stdcall Copy();
        [id(0x00000007), helpcontext(0x00000071)]
        HRESULT _stdcall Cut();
        [id(0x00000008), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000009), propget, helpcontext(0x00000096)]
        HRESULT _stdcall End([out, retval] long* lpi4Ret);
        [id(0x00000009), propput, helpcontext(0x00000096)]
        HRESULT _stdcall End([in] long lpi4Ret);
        [id(0x0000000a), propget, helpcontext(0x000000a4)]
        HRESULT _stdcall FieldCategory([out, retval] short* lpi2Ret);
        [id(0x0000000b), propget, helpcontext(0x000000a5)]
        HRESULT _stdcall FieldCode([out, retval] short* lpi2Ret);
        [id(0x0000000c), propget, helpcontext(0x000000a6)]
        HRESULT _stdcall FieldFormat([out, retval] short* lpi2Ret);
        [id(0x0000000d), propget, helpcontext(0x000000a7)]
        HRESULT _stdcall FieldFormula([out, retval] BSTR* lpbstrRet);
        [id(0x0000000e), propget, helpcontext(0x000000e2)]
        HRESULT _stdcall IsField([out, retval] short* lpi2Ret);
        [id(0x00000016), propput, helpcontext(0x00000126)]
        HRESULT _stdcall ParaProps(
                        [in] short CellIndex, 
                        [in] short rhs);
        [id(0x00000011), propget, helpcontext(0x00000127)]
        HRESULT _stdcall ParaPropsRow(
                        [in] short BiasLorR, 
                        [out, retval] short* lpi2Ret);
        [id(0x0000000f), helpcontext(0x0000012a)]
        HRESULT _stdcall Paste();
        [id(0x00000012), propget, helpcontext(0x0000019e)]
        HRESULT _stdcall TabPropsRow(
                        [in] short BiasLorR, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000013), propget, helpcontext(0x00000160)]
        HRESULT _stdcall RunBegin(
                        [in] short RunType, 
                        [out, retval] long* lpi4Ret);
        [id(0x00000014), propget, helpcontext(0x00000161)]
        HRESULT _stdcall RunEnd(
                        [in] short RunType, 
                        [out, retval] long* lpi4Ret);
        [id(0x00000017), propget, helpcontext(0x0000017c)]
        HRESULT _stdcall Shape([out, retval] IVShape** lpdispRet);
        [id(0x00000018), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x00000063), propget, helpcontext(0x000001a4)]
        HRESULT _stdcall TextAsString([out, retval] BSTR* lpbstrRet);
        [id(00000000), propput, helpcontext(0x000001a3)]
        HRESULT _stdcall Text([in] VARIANT lpvarRet);
        [id(0x00000019), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x0000001a), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x0000001b), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
        [id(00000000), propget, helpcontext(0x000001a3)]
        HRESULT _stdcall Text([out, retval] VARIANT* lpvarRet);
    };

    [
      odl,
      uuid(000D0703-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVConnect : IDispatch {
        [id(0x00000006), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000007), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x000000be)]
        HRESULT _stdcall FromSheet([out, retval] IVShape** lpdispRet);
        [id(0x00000001), propget, helpcontext(0x000001b1)]
        HRESULT _stdcall ToSheet([out, retval] IVShape** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x000000bb)]
        HRESULT _stdcall FromCell([out, retval] IVCell** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x000001aa)]
        HRESULT _stdcall ToCell([out, retval] IVCell** lpdispRet);
        [id(0x00000004), propget, helpcontext(0x000000bd)]
        HRESULT _stdcall FromPart([out, retval] short* lpi2Ret);
        [id(0x00000005), propget, helpcontext(0x000001af)]
        HRESULT _stdcall ToPart([out, retval] short* lpi2Ret);
        [id(0x00000008), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000009), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] short* lpi2Ret);
        [id(0x0000000a), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
    };

    [
      odl,
      uuid(000D0704-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVConnects : IDispatch {
        [id(0x00000004), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] short Index, 
                        [out, retval] IVConnect** lpdispRet);
        [id(0x00000001), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] short* lpi2Ret);
        [id(0x00000002), propget, helpcontext(0x000000be)]
        HRESULT _stdcall FromSheet([out, retval] IVShape** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000005), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000006), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x00000007), propget, helpcontext(0x000001b1)]
        HRESULT _stdcall ToSheet([out, retval] IVShape** lpdispRet);
    };

    [
      odl,
      uuid(000D0705-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVDocument : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x00000003), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000005), propget, helpcontext(0x000000db)]
        HRESULT _stdcall InPlace([out, retval] short* lpi2Ret);
        [id(0x00000006), propget, helpcontext(0x00000101)]
        HRESULT _stdcall Masters([out, retval] IVMasters** lpdispRet);
        [id(0x00000007), propget, helpcontext(0x00000120)]
        HRESULT _stdcall Pages([out, retval] IVPages** lpdispRet);
        [id(0x00000008), propget, helpcontext(0x00000198)]
        HRESULT _stdcall Styles([out, retval] IVStyles** lpdispRet);
        [id(00000000), propget, helpcontext(0x0000010b)]
        HRESULT _stdcall Name([out, retval] BSTR* lpbstrRet);
        [id(0x00000014), propget, helpcontext(0x0000012b)]
        HRESULT _stdcall Path([out, retval] BSTR* lpbstrRet);
        [id(0x00000015), propget, helpcontext(0x000000bf)]
        HRESULT _stdcall FullName([out, retval] BSTR* lpbstrRet);
        [id(0x00000009), helpcontext(0x00000092)]
        HRESULT _stdcall Drop(
                        [in] IUnknown* ObjectToDrop, 
                        [in] short xPos, 
                        [in] short yPos, 
                        [out, retval] IVMaster** lpdispRet);
        [id(0x00000004), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] short* lpi2Ret);
        [id(0x0000000a), propget, helpcontext(0x00000166)]
        HRESULT _stdcall Saved([out, retval] short* lpi2Ret);
        [id(0x0000000a), propput, helpcontext(0x00000166)]
        HRESULT _stdcall Saved([in] short lpi2Ret);
        [id(0x0000000b), propget, helpcontext(0x00000148)]
        HRESULT _stdcall ReadOnly([out, retval] short* lpi2Ret);
        [id(0x0000000c), helpcontext(0x00000163)]
        HRESULT _stdcall Save([out, retval] short* lpi2Ret);
        [id(0x0000000d), helpcontext(0x00000164)]
        HRESULT _stdcall SaveAs(
                        [in] BSTR FileName, 
                        [out, retval] short* lpi2Ret);
        [id(0x0000000e), propget, helpcontext(0x000001c5)]
        HRESULT _stdcall Version([out, retval] long* lpi4Ret);
        [id(0x0000000e), propput, helpcontext(0x000001c5)]
        HRESULT _stdcall Version([in] long lpi4Ret);
        [id(0x0000000f), propget, helpcontext(0x000001a9)]
        HRESULT _stdcall Title([out, retval] BSTR* lpbstrRet);
        [id(0x0000000f), propput, helpcontext(0x000001a9)]
        HRESULT _stdcall Title([in] BSTR lpbstrRet);
        [id(0x00000010), propget, helpcontext(0x0000019a)]
        HRESULT _stdcall Subject([out, retval] BSTR* lpbstrRet);
        [id(0x00000010), propput, helpcontext(0x0000019a)]
        HRESULT _stdcall Subject([in] BSTR lpbstrRet);
        [id(0x00000011), propget, helpcontext(0x0000006c)]
        HRESULT _stdcall Creator([out, retval] BSTR* lpbstrRet);
        [id(0x00000011), propput, helpcontext(0x0000006c)]
        HRESULT _stdcall Creator([in] BSTR lpbstrRet);
        [id(0x00000012), propget, helpcontext(0x000000ed)]
        HRESULT _stdcall Keywords([out, retval] BSTR* lpbstrRet);
        [id(0x00000012), propput, helpcontext(0x000000ed)]
        HRESULT _stdcall Keywords([in] BSTR lpbstrRet);
        [id(0x00000013), propget, helpcontext(0x0000007e)]
        HRESULT _stdcall Description([out, retval] BSTR* lpbstrRet);
        [id(0x00000013), propput, helpcontext(0x0000007e)]
        HRESULT _stdcall Description([in] BSTR lpbstrRet);
        [id(0x00000016), helpcontext(0x00000136)]
        HRESULT _stdcall Print();
        [id(0x00000017), helpcontext(0x00000057)]
        HRESULT _stdcall Close();
        [id(0x00000018), propget, helpcontext(0x0000006d)]
        HRESULT _stdcall CustomMenus([out, retval] IVUIObject** lpdispRet);
        [id(0x00000019), helpcontext(0x00000176)]
        HRESULT _stdcall SetCustomMenus([in] IVUIObject* MenusObject);
        [id(0x0000001a), propget, helpcontext(0x0000006e)]
        HRESULT _stdcall CustomMenusFile([out, retval] BSTR* lpbstrRet);
        [id(0x0000001a), propput, helpcontext(0x0000006e)]
        HRESULT _stdcall CustomMenusFile([in] BSTR lpbstrRet);
        [id(0x0000001b), helpcontext(0x00000055)]
        HRESULT _stdcall ClearCustomMenus();
        [id(0x0000001c), propget, helpcontext(0x0000006f)]
        HRESULT _stdcall CustomToolbars([out, retval] IVUIObject** lpdispRet);
        [id(0x0000001d), helpcontext(0x00000177)]
        HRESULT _stdcall SetCustomToolbars([in] IVUIObject* ToolbarsObject);
        [id(0x0000001e), propget, helpcontext(0x00000070)]
        HRESULT _stdcall CustomToolbarsFile([out, retval] BSTR* lpbstrRet);
        [id(0x0000001e), propput, helpcontext(0x00000070)]
        HRESULT _stdcall CustomToolbarsFile([in] BSTR lpbstrRet);
        [id(0x0000001f), helpcontext(0x00000056)]
        HRESULT _stdcall ClearCustomToolbars();
        [id(0x00000020), propget, helpcontext(0x000000b3)]
        HRESULT _stdcall Fonts([out, retval] IVFonts** lpdispRet);
        [id(0x00000021), propget, helpcontext(0x0000005c)]
        HRESULT _stdcall Colors([out, retval] IVColors** lpdispRet);
        [id(0x00000022), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x00000023), propget, helpcontext(0x000001a1)]
        HRESULT _stdcall Template([out, retval] BSTR* lpbstrRet);
        [id(0x00000024), helpcontext(0x00000165)]
        HRESULT _stdcall SaveAsEx(
                        [in] BSTR FileName, 
                        [in] short SaveFlags);
        [id(0x00000025), propget, helpcontext(0x00000167)]
        HRESULT _stdcall SavePreviewMode([out, retval] short* lpi2Ret);
        [id(0x00000025), propput, helpcontext(0x00000167)]
        HRESULT _stdcall SavePreviewMode([in] short lpi2Ret);
        [id(0x00000026), hidden, helpcontext(0x00001388)]
        HRESULT _stdcall GetIcon(
                        [in] short ID, 
                        [in] BSTR FileName);
        [id(0x00000027), hidden, helpcontext(0x00001388)]
        HRESULT _stdcall SetIcon(
                        [in] short ID, 
                        [in] short Index, 
                        [in] BSTR FileName);
        [id(0x00000028), propget, helpcontext(0x000000f4)]
        HRESULT _stdcall LeftMargin(
                        [in] VARIANT UnitsNameOrCode, 
                        [out, retval] double* lpr8Ret);
        [id(0x00000028), propput, helpcontext(0x000000f4)]
        HRESULT _stdcall LeftMargin(
                        [in] VARIANT UnitsNameOrCode, 
                        [in] double lpr8Ret);
        [id(0x00000029), propget, helpcontext(0x00000157)]
        HRESULT _stdcall RightMargin(
                        [in] VARIANT UnitsNameOrCode, 
                        [out, retval] double* lpr8Ret);
        [id(0x00000029), propput, helpcontext(0x00000157)]
        HRESULT _stdcall RightMargin(
                        [in] VARIANT UnitsNameOrCode, 
                        [in] double lpr8Ret);
        [id(0x0000002a), propget, helpcontext(0x000001b0)]
        HRESULT _stdcall TopMargin(
                        [in] VARIANT UnitsNameOrCode, 
                        [out, retval] double* lpr8Ret);
        [id(0x0000002a), propput, helpcontext(0x000001b0)]
        HRESULT _stdcall TopMargin(
                        [in] VARIANT UnitsNameOrCode, 
                        [in] double lpr8Ret);
        [id(0x0000002b), propget, helpcontext(0x00000040)]
        HRESULT _stdcall BottomMargin(
                        [in] VARIANT UnitsNameOrCode, 
                        [out, retval] double* lpr8Ret);
        [id(0x0000002b), propput, helpcontext(0x00000040)]
        HRESULT _stdcall BottomMargin(
                        [in] VARIANT UnitsNameOrCode, 
                        [in] double lpr8Ret);
        [id(0x0000002c), propget, helpcontext(0x0000013a)]
        HRESULT _stdcall PrintLandscape([out, retval] short* lpi2Ret);
        [id(0x0000002c), propput, helpcontext(0x0000013a)]
        HRESULT _stdcall PrintLandscape([in] short lpi2Ret);
        [id(0x0000002d), propget, helpcontext(0x00000137)]
        HRESULT _stdcall PrintCenteredH([out, retval] short* lpi2Ret);
        [id(0x0000002d), propput, helpcontext(0x00000137)]
        HRESULT _stdcall PrintCenteredH([in] short lpi2Ret);
        [id(0x0000002e), propget, helpcontext(0x00000138)]
        HRESULT _stdcall PrintCenteredV([out, retval] short* lpi2Ret);
        [id(0x0000002e), propput, helpcontext(0x00000138)]
        HRESULT _stdcall PrintCenteredV([in] short lpi2Ret);
        [id(0x0000002f), propget, helpcontext(0x0000013d)]
        HRESULT _stdcall PrintScale([out, retval] double* lpr8Ret);
        [id(0x0000002f), propput, helpcontext(0x0000013d)]
        HRESULT _stdcall PrintScale([in] double lpr8Ret);
        [id(0x00000030), propget, helpcontext(0x00000139)]
        HRESULT _stdcall PrintFitOnPages([out, retval] short* lpi2Ret);
        [id(0x00000030), propput, helpcontext(0x00000139)]
        HRESULT _stdcall PrintFitOnPages([in] short lpi2Ret);
        [id(0x00000031), propget, helpcontext(0x0000013b)]
        HRESULT _stdcall PrintPagesAcross([out, retval] short* lpi2Ret);
        [id(0x00000031), propput, helpcontext(0x0000013b)]
        HRESULT _stdcall PrintPagesAcross([in] short lpi2Ret);
        [id(0x00000032), propget, helpcontext(0x0000013c)]
        HRESULT _stdcall PrintPagesDown([out, retval] short* lpi2Ret);
        [id(0x00000032), propput, helpcontext(0x0000013c)]
        HRESULT _stdcall PrintPagesDown([in] short lpi2Ret);
        [id(0x00000033), propget, helpcontext(0x00000077)]
        HRESULT _stdcall DefaultStyle([out, retval] BSTR* lpbstrRet);
        [id(0x00000033), propput, helpcontext(0x00000077)]
        HRESULT _stdcall DefaultStyle([in] BSTR lpbstrRet);
        [id(0x00000034), propget, helpcontext(0x00000076)]
        HRESULT _stdcall DefaultLineStyle([out, retval] BSTR* lpbstrRet);
        [id(0x00000034), propput, helpcontext(0x00000076)]
        HRESULT _stdcall DefaultLineStyle([in] BSTR lpbstrRet);
        [id(0x00000035), propget, helpcontext(0x00000075)]
        HRESULT _stdcall DefaultFillStyle([out, retval] BSTR* lpbstrRet);
        [id(0x00000035), propput, helpcontext(0x00000075)]
        HRESULT _stdcall DefaultFillStyle([in] BSTR lpbstrRet);
        [id(0x00000036), propget, helpcontext(0x00000078)]
        HRESULT _stdcall DefaultTextStyle([out, retval] BSTR* lpbstrRet);
        [id(0x00000036), propput, helpcontext(0x00000078)]
        HRESULT _stdcall DefaultTextStyle([in] BSTR lpbstrRet);
        [id(0x00000037), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
        [id(0x00000038), helpcontext(0x0000011a)]
        HRESULT _stdcall OpenStencilWindow([out, retval] IVWindow** lpdispRet);
        [id(0x00000039), helpcontext(0x00000129)]
        HRESULT _stdcall ParseLine([in] BSTR Line);
        [id(0x0000003a), helpcontext(0x000000a0)]
        HRESULT _stdcall ExecuteLine([in] BSTR Line);
        [id(0x0000003b), propget, helpcontext(0x000001c1)]
        HRESULT _stdcall VBProject([out, retval] IDispatch** lpdispRet);
        [id(0x0000003c), propget, helpcontext(0x00000125)]
        HRESULT _stdcall PaperWidth(
                        [in] VARIANT UnitsNameOrCode, 
                        [out, retval] double* lpr8Ret);
        [id(0x0000003d), propget, helpcontext(0x00000123)]
        HRESULT _stdcall PaperHeight(
                        [in] VARIANT UnitsNameOrCode, 
                        [out, retval] double* lpr8Ret);
        [id(0x0000003e), propget, helpcontext(0x00000124)]
        HRESULT _stdcall PaperSize([out, retval] short* lpi2Ret);
        [id(0x0000003e), propput, helpcontext(0x00000124)]
        HRESULT _stdcall PaperSize([in] short lpi2Ret);
        [id(0x0000003f), hidden, helpcontext(0x00001388)]
        HRESULT _stdcall FollowHyperlink45(
                        [in] BSTR Target, 
                        [in] BSTR Location);
        [id(0x80010000), propget, hidden]
        HRESULT _stdcall CodeName([out, retval] BSTR* lpbstrRet);
        [id(0x00000040), propget, helpcontext(0x00000108)]
        HRESULT _stdcall Mode([out, retval] short* lpi2Ret);
        [id(0x00000040), propput, helpcontext(0x00000108)]
        HRESULT _stdcall Mode([in] short lpi2Ret);
        [id(0x00000041), propget, helpcontext(0x00000112)]
        HRESULT _stdcall OLEObjects([out, retval] IVOLEObjects** lpdispRet);
        [id(0x00000042), helpcontext(0x000000b2)]
        HRESULT _stdcall FollowHyperlink(
                        [in] BSTR Address, 
                        [in] BSTR SubAddress, 
                        [in, optional] VARIANT ExtraInfo, 
                        [in, optional] VARIANT Frame, 
                        [in, optional] VARIANT NewWindow, 
                        [in, optional] VARIANT res1, 
                        [in, optional] VARIANT res2, 
                        [in, optional] VARIANT res3);
        [id(0x00000043), propget, helpcontext(0x000000fc)]
        HRESULT _stdcall Manager([out, retval] BSTR* lpbstrRet);
        [id(0x00000043), propput, helpcontext(0x000000fc)]
        HRESULT _stdcall Manager([in] BSTR lpbstrRet);
        [id(0x00000044), propget, helpcontext(0x0000005f)]
        HRESULT _stdcall Company([out, retval] BSTR* lpbstrRet);
        [id(0x00000044), propput, helpcontext(0x0000005f)]
        HRESULT _stdcall Company([in] BSTR lpbstrRet);
        [id(0x00000045), propget, helpcontext(0x00000047)]
        HRESULT _stdcall Category([out, retval] BSTR* lpbstrRet);
        [id(0x00000045), propput, helpcontext(0x00000047)]
        HRESULT _stdcall Category([in] BSTR lpbstrRet);
        [id(0x00000046), propget, helpcontext(0x000000d0)]
        HRESULT _stdcall HyperlinkBase([out, retval] BSTR* lpbstrRet);
        [id(0x00000046), propput, helpcontext(0x000000d0)]
        HRESULT _stdcall HyperlinkBase([in] BSTR lpbstrRet);
    };

    [
      odl,
      uuid(000D0706-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVDocuments : IDispatch {
        [id(0x00000004), helpcontext(0x0000000a)]
        HRESULT _stdcall Add(
                        [in] BSTR FileName, 
                        [out, retval] IVDocument** lpdispRet);
        [id(0x00000005), helpcontext(0x00000115)]
        HRESULT _stdcall Open(
                        [in] BSTR FileName, 
                        [out, retval] IVDocument** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] VARIANT NameOrIndex, 
                        [out, retval] IVDocument** lpdispRet);
        [id(0x00000001), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] short* lpi2Ret);
        [id(0x00000006), helpcontext(0x00000117)]
        HRESULT _stdcall OpenEx(
                        [in] BSTR FileName, 
                        [in] short Flags, 
                        [out, retval] IVDocument** lpdispRet);
        [id(0x00000007), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x00000008), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
        [id(0x00000009), helpcontext(0x000000c2)]
        HRESULT _stdcall GetNames([out] SAFEARRAY(BSTR)* NameArray);
    };

    [
      odl,
      uuid(000D0707-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVMaster : IDispatch {
        [id(0x00000002), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000006), propget, helpcontext(0x00000142)]
        HRESULT _stdcall Prompt([out, retval] BSTR* lpbstrRet);
        [id(0x00000006), propput, helpcontext(0x00000142)]
        HRESULT _stdcall Prompt([in] BSTR lpbstrRet);
        [id(0x00000007), propget, helpcontext(0x0000001f)]
        HRESULT _stdcall AlignName([out, retval] short* lpi2Ret);
        [id(0x00000007), propput, helpcontext(0x0000001f)]
        HRESULT _stdcall AlignName([in] short lpi2Ret);
        [id(0x00000008), propget, helpcontext(0x000000d2)]
        HRESULT _stdcall IconSize([out, retval] short* lpi2Ret);
        [id(0x00000008), propput, helpcontext(0x000000d2)]
        HRESULT _stdcall IconSize([in] short lpi2Ret);
        [id(0x00000009), propget, helpcontext(0x000000d3)]
        HRESULT _stdcall IconUpdate([out, retval] short* lpi2Ret);
        [id(0x00000009), propput, helpcontext(0x000000d3)]
        HRESULT _stdcall IconUpdate([in] short lpi2Ret);
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000004), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x00000005), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x0000010b)]
        HRESULT _stdcall Name([out, retval] BSTR* lpbstrRet);
        [id(00000000), propput, helpcontext(0x0000010b)]
        HRESULT _stdcall Name([in] BSTR lpbstrRet);
        [id(0x00000003), propget, helpcontext(0x0000017f)]
        HRESULT _stdcall Shapes([out, retval] IVShapes** lpdispRet);
        [id(0x0000000a), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] short* lpi2Ret);
        [id(0x0000000b), propget, helpcontext(0x00000114)]
        HRESULT _stdcall OneD([out, retval] short* lpi2Ret);
        [id(0x0000000c), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x0000000d), propget, helpcontext(0x000001bb)]
        HRESULT _stdcall UniqueID([out, retval] BSTR* lpbstrRet);
        [id(0x0000000e), propget, helpcontext(0x000000f2)]
        HRESULT _stdcall Layers([out, retval] IVLayers** lpdispRet);
        [id(0x0000000f), propget, helpcontext(0x00000121)]
        HRESULT _stdcall PageSheet([out, retval] IVShape** lpdispRet);
        [id(0x00000010), helpcontext(0x00000092)]
        HRESULT _stdcall Drop(
                        [in] IUnknown* ObjectToDrop, 
                        [in] double xPos, 
                        [in] double yPos, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000011), helpcontext(0x0000004e)]
        HRESULT _stdcall CenterDrawing();
        [id(0x00000012), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x00000013), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
        [id(0x00000014), helpcontext(0x0000008d)]
        HRESULT _stdcall DrawLine(
                        [in] double xLeft, 
                        [in] double yTop, 
                        [in] double xRight, 
                        [in] double yBottom, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000015), helpcontext(0x00000090)]
        HRESULT _stdcall DrawRectangle(
                        [in] double xLeft, 
                        [in] double yTop, 
                        [in] double xRight, 
                        [in] double yBottom, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000016), helpcontext(0x0000008e)]
        HRESULT _stdcall DrawOval(
                        [in] double xLeft, 
                        [in] double yTop, 
                        [in] double xRight, 
                        [in] double yBottom, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000017), helpcontext(0x00000091)]
        HRESULT _stdcall DrawSpline(
                        [in] SAFEARRAY(double)* xyArray, 
                        [in] double Tolerance, 
                        [in] short Flags, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000018), helpcontext(0x0000008b)]
        HRESULT _stdcall DrawBezier(
                        [in] SAFEARRAY(double)* xyArray, 
                        [in] short degree, 
                        [in] short Flags, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000019), helpcontext(0x0000008f)]
        HRESULT _stdcall DrawPolyline(
                        [in] SAFEARRAY(double)* xyArray, 
                        [in] short Flags, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x0000001a), helpcontext(0x000000d5)]
        HRESULT _stdcall Import(
                        [in] BSTR FileName, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x0000001b), helpcontext(0x000000a1)]
        HRESULT _stdcall Export([in] BSTR FileName);
        [id(0x0000001c), helpcontext(0x000000dc)]
        HRESULT _stdcall InsertFromFile(
                        [in] BSTR FileName, 
                        [in] short Flags, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x0000001d), helpcontext(0x000000dd)]
        HRESULT _stdcall InsertObject(
                        [in] BSTR ClassOrProgID, 
                        [in] short Flags, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x0000001e), helpcontext(0x00000116)]
        HRESULT _stdcall OpenDrawWindow([out, retval] IVWindow** lpdispRet);
        [id(0x0000001f), helpcontext(0x00000118)]
        HRESULT _stdcall OpenIconWindow([out, retval] IVWindow** lpdispRet);
        [id(0x00000020), helpcontext(0x00000115)]
        HRESULT _stdcall Open([out, retval] IVMaster** lpdispRet);
        [id(0x00000021), helpcontext(0x00000057)]
        HRESULT _stdcall Close();
        [id(0x00000022), helpcontext(0x00000093)]
        HRESULT _stdcall DropMany(
                        [in] SAFEARRAY(VARIANT)* ObjectsToInstance, 
                        [in] SAFEARRAY(double)* xyArray, 
                        [out] SAFEARRAY(short)* IDArray, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000023), helpcontext(0x000000c1)]
        HRESULT _stdcall GetFormulas(
                        [in] SAFEARRAY(short)* SID_SRCStream, 
                        [out] SAFEARRAY(VARIANT)* formulaArray);
        [id(0x00000024), helpcontext(0x000000c3)]
        HRESULT _stdcall GetResults(
                        [in] SAFEARRAY(short)* SID_SRCStream, 
                        [in] short Flags, 
                        [in] SAFEARRAY(VARIANT)* UnitsNamesOrCodes, 
                        [out] SAFEARRAY(VARIANT)* resultArray);
        [id(0x00000025), helpcontext(0x00000179)]
        HRESULT _stdcall SetFormulas(
                        [in] SAFEARRAY(short)* SID_SRCStream, 
                        [in] SAFEARRAY(VARIANT)* formulaArray, 
                        [in] short Flags, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000026), helpcontext(0x0000017b)]
        HRESULT _stdcall SetResults(
                        [in] SAFEARRAY(short)* SID_SRCStream, 
                        [in] SAFEARRAY(VARIANT)* UnitsNamesOrCodes, 
                        [in] SAFEARRAY(VARIANT)* resultArray, 
                        [in] short Flags, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000027), propget, helpcontext(0x00000062)]
        HRESULT _stdcall Connects([out, retval] IVConnects** lpdispRet);
        [id(0x00000028), helpcontext(0x000000d6)]
        HRESULT _stdcall ImportIcon([in] BSTR FileName);
        [id(0x00000029), helpcontext(0x000000a2)]
        HRESULT _stdcall ExportIcon(
                        [in] BSTR FileName, 
                        [in] short Flags);
        [id(0x0000002a), helpcontext(0x000000f3)]
        HRESULT _stdcall Layout();
        [id(0x0000002b), helpcontext(0x00000041)]
        HRESULT _stdcall BoundingBox(
                        [in] short Flags, 
                        [out] double* lpr8Left, 
                        [out] double* lpr8Bottom, 
                        [out] double* lpr8Right, 
                        [out] double* lpr8Top);
        [id(0x0000002c), propget, helpcontext(0x000000d4)]
        HRESULT _stdcall ID([out, retval] short* lpi2Ret);
        [id(0x0000002d), propget, helpcontext(0x00000112)]
        HRESULT _stdcall OLEObjects([out, retval] IVOLEObjects** lpdispRet);
        [id(0x0000002e), propget, helpcontext(0x0000012e)]
        HRESULT _stdcall PatternFlags([out, retval] short* lpi2Ret);
        [id(0x0000002e), propput, helpcontext(0x0000012e)]
        HRESULT _stdcall PatternFlags([in] short lpi2Ret);
        [id(0x0000002f), propget, helpcontext(0x00000102)]
        HRESULT _stdcall MatchByName([out, retval] short* lpi2Ret);
        [id(0x0000002f), propput, helpcontext(0x00000102)]
        HRESULT _stdcall MatchByName([in] short lpi2Ret);
    };

    [
      odl,
      uuid(000D0708-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVMasters : IDispatch {
        [id(0x00000003), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] VARIANT NameUIDOrIndex, 
                        [out, retval] IVMaster** lpdispRet);
        [id(0x00000001), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] short* lpi2Ret);
        [id(0x00000004), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000005), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x00000006), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x00000007), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
        [id(0x00000008), helpcontext(0x0000000a)]
        HRESULT _stdcall Add([out, retval] IVMaster** lpdispRet);
        [id(0x00000009), helpcontext(0x000000c2)]
        HRESULT _stdcall GetNames([out] SAFEARRAY(BSTR)* NameArray);
    };

    [
      odl,
      uuid(000D0709-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVPage : IDispatch {
        [id(0x0000000d), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x0000000b), propget, helpcontext(0x00000029)]
        HRESULT _stdcall Background([out, retval] short* lpi2Ret);
        [id(0x0000000b), propput, helpcontext(0x00000029)]
        HRESULT _stdcall Background([in] short lpi2Ret);
        [id(0x0000000a), helpcontext(0x0000012a)]
        HRESULT _stdcall Paste();
        [id(0x00000010), hidden, helpcontext(0x00001388)]
        HRESULT _stdcall PasteSpecial([in] short Format);
        [id(0x00000003), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000006), helpcontext(0x0000008d)]
        HRESULT _stdcall DrawLine(
                        [in] double xLeft, 
                        [in] double yTop, 
                        [in] double xRight, 
                        [in] double yBottom, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000007), helpcontext(0x00000090)]
        HRESULT _stdcall DrawRectangle(
                        [in] double xLeft, 
                        [in] double yTop, 
                        [in] double xRight, 
                        [in] double yBottom, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000008), helpcontext(0x0000008e)]
        HRESULT _stdcall DrawOval(
                        [in] double xLeft, 
                        [in] double yTop, 
                        [in] double xRight, 
                        [in] double yBottom, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000004), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x0000010b)]
        HRESULT _stdcall Name([out, retval] BSTR* lpbstrRet);
        [id(00000000), propput, helpcontext(0x0000010b)]
        HRESULT _stdcall Name([in] BSTR lpbstrRet);
        [id(0x00000005), propget, helpcontext(0x0000017f)]
        HRESULT _stdcall Shapes([out, retval] IVShapes** lpdispRet);
        [id(0x00000009), helpcontext(0x00000092)]
        HRESULT _stdcall Drop(
                        [in] IUnknown* ObjectToDrop, 
                        [in] double xPos, 
                        [in] double yPos, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x0000000c), helpcontext(0x00000010)]
        HRESULT _stdcall AddGuide(
                        [in] short Type, 
                        [in] double xPos, 
                        [in] double yPos, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x0000000e), propget, helpcontext(0x0000002b)]
        HRESULT _stdcall BackPageAsObj([out, retval] IVPage** lpdispRet);
        [id(0x000005db), propput, helpcontext(0x0000002c)]
        HRESULT _stdcall BackPageFromName([in] BSTR rhs);
        [id(0x0000000f), helpcontext(0x00000136)]
        HRESULT _stdcall Print();
        [id(0x00000011), helpcontext(0x000000d5)]
        HRESULT _stdcall Import(
                        [in] BSTR FileName, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000012), helpcontext(0x000000a1)]
        HRESULT _stdcall Export([in] BSTR FileName);
        [id(0x00000013), propget, helpcontext(0x000000f2)]
        HRESULT _stdcall Layers([out, retval] IVLayers** lpdispRet);
        [id(0x00000014), propget, helpcontext(0x00000121)]
        HRESULT _stdcall PageSheet([out, retval] IVShape** lpdispRet);
        [id(0x00000015), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete([in] short fRenumberPages);
        [id(0x00000016), helpcontext(0x0000004e)]
        HRESULT _stdcall CenterDrawing();
        [id(0x00000017), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x00000018), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
        [id(0x00000019), helpcontext(0x00000091)]
        HRESULT _stdcall DrawSpline(
                        [in] SAFEARRAY(double)* xyArray, 
                        [in] double Tolerance, 
                        [in] short Flags, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x0000001a), helpcontext(0x0000008b)]
        HRESULT _stdcall DrawBezier(
                        [in] SAFEARRAY(double)* xyArray, 
                        [in] short degree, 
                        [in] short Flags, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x0000001b), helpcontext(0x0000008f)]
        HRESULT _stdcall DrawPolyline(
                        [in] SAFEARRAY(double)* xyArray, 
                        [in] short Flags, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x0000001c), helpcontext(0x000000dc)]
        HRESULT _stdcall InsertFromFile(
                        [in] BSTR FileName, 
                        [in] short Flags, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x0000001d), helpcontext(0x000000dd)]
        HRESULT _stdcall InsertObject(
                        [in] BSTR ClassOrProgID, 
                        [in] short Flags, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x0000001e), helpcontext(0x00000116)]
        HRESULT _stdcall OpenDrawWindow([out, retval] IVWindow** lpdispRet);
        [id(0x0000001f), helpcontext(0x00000093)]
        HRESULT _stdcall DropMany(
                        [in] SAFEARRAY(VARIANT)* ObjectsToInstance, 
                        [in] SAFEARRAY(double)* xyArray, 
                        [out] SAFEARRAY(short)* IDArray, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000020), helpcontext(0x000000c1)]
        HRESULT _stdcall GetFormulas(
                        [in] SAFEARRAY(short)* SID_SRCStream, 
                        [out] SAFEARRAY(VARIANT)* formulaArray);
        [id(0x00000021), helpcontext(0x000000c3)]
        HRESULT _stdcall GetResults(
                        [in] SAFEARRAY(short)* SID_SRCStream, 
                        [in] short Flags, 
                        [in] SAFEARRAY(VARIANT)* UnitsNamesOrCodes, 
                        [out] SAFEARRAY(VARIANT)* resultArray);
        [id(0x00000022), helpcontext(0x00000179)]
        HRESULT _stdcall SetFormulas(
                        [in] SAFEARRAY(short)* SID_SRCStream, 
                        [in] SAFEARRAY(VARIANT)* formulaArray, 
                        [in] short Flags, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000023), helpcontext(0x0000017b)]
        HRESULT _stdcall SetResults(
                        [in] SAFEARRAY(short)* SID_SRCStream, 
                        [in] SAFEARRAY(VARIANT)* UnitsNamesOrCodes, 
                        [in] SAFEARRAY(VARIANT)* resultArray, 
                        [in] short Flags, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000024), propget, helpcontext(0x00000062)]
        HRESULT _stdcall Connects([out, retval] IVConnects** lpdispRet);
        [id(0x00000025), propget, helpcontext(0x0000002a)]
        HRESULT _stdcall BackPage([out, retval] VARIANT* lpobjRet);
        [id(0x00000025), propput, helpcontext(0x0000002a)]
        HRESULT _stdcall BackPage([in] VARIANT lpobjRet);
        [id(0x00000026), helpcontext(0x000000f3)]
        HRESULT _stdcall Layout();
        [id(0x00000027), helpcontext(0x00000041)]
        HRESULT _stdcall BoundingBox(
                        [in] short Flags, 
                        [out] double* lpr8Left, 
                        [out] double* lpr8Bottom, 
                        [out] double* lpr8Right, 
                        [out] double* lpr8Top);
        [id(0x00000028), propget, helpcontext(0x000000d4)]
        HRESULT _stdcall ID([out, retval] short* lpi2Ret);
        [id(0x00000029), propget, helpcontext(0x00000112)]
        HRESULT _stdcall OLEObjects([out, retval] IVOLEObjects** lpdispRet);
    };

    [
      odl,
      uuid(000D070A-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVPages : IDispatch {
        [id(0x00000003), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] VARIANT NameOrIndex, 
                        [out, retval] IVPage** lpdispRet);
        [id(0x00000001), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] short* lpi2Ret);
        [id(0x00000004), helpcontext(0x0000000a)]
        HRESULT _stdcall Add([out, retval] IVPage** lpdispRet);
        [id(0x00000005), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000006), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x00000007), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x00000008), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
        [id(0x00000009), helpcontext(0x000000c2)]
        HRESULT _stdcall GetNames([out] SAFEARRAY(BSTR)* NameArray);
    };

    [
      odl,
      uuid(000D070B-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVSelection : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x00000003), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] short Index, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000004), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] short* lpi2Ret);
        [id(0x00000005), helpcontext(0x000000a1)]
        HRESULT _stdcall Export([in] BSTR FileName);
        [id(0x00000006), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000007), propget, helpcontext(0x00000064)]
        HRESULT _stdcall ContainingPage([out, retval] IVPage** lpdispRet);
        [id(0x00000008), propget, helpcontext(0x00000063)]
        HRESULT _stdcall ContainingMaster([out, retval] IVMaster** lpdispRet);
        [id(0x00000009), propget, helpcontext(0x00000065)]
        HRESULT _stdcall ContainingShape([out, retval] IVShape** lpdispRet);
        [id(0x0000000a), helpcontext(0x00000042)]
        HRESULT _stdcall BringForward();
        [id(0x0000000b), helpcontext(0x00000043)]
        HRESULT _stdcall BringToFront();
        [id(0x0000000c), helpcontext(0x00000172)]
        HRESULT _stdcall SendBackward();
        [id(0x0000000d), helpcontext(0x00000173)]
        HRESULT _stdcall SendToBack();
        [id(0x0000000e), propget, helpcontext(0x00000194)]
        HRESULT _stdcall Style([out, retval] BSTR* lpbstrRet);
        [id(0x0000000e), propput, helpcontext(0x00000194)]
        HRESULT _stdcall Style([in] BSTR lpbstrRet);
        [id(0x0000000f), propput, helpcontext(0x00000197)]
        HRESULT _stdcall StyleKeepFmt([in] BSTR rhs);
        [id(0x00000010), propget, helpcontext(0x000000f7)]
        HRESULT _stdcall LineStyle([out, retval] BSTR* lpbstrRet);
        [id(0x00000010), propput, helpcontext(0x000000f7)]
        HRESULT _stdcall LineStyle([in] BSTR lpbstrRet);
        [id(0x00000011), propput, helpcontext(0x000000f8)]
        HRESULT _stdcall LineStyleKeepFmt([in] BSTR rhs);
        [id(0x00000012), propget, helpcontext(0x000000a9)]
        HRESULT _stdcall FillStyle([out, retval] BSTR* lpbstrRet);
        [id(0x00000012), propput, helpcontext(0x000000a9)]
        HRESULT _stdcall FillStyle([in] BSTR lpbstrRet);
        [id(0x00000013), propput, helpcontext(0x000000aa)]
        HRESULT _stdcall FillStyleKeepFmt([in] BSTR rhs);
        [id(0x00000014), propget, helpcontext(0x000001a7)]
        HRESULT _stdcall TextStyle([out, retval] BSTR* lpbstrRet);
        [id(0x00000014), propput, helpcontext(0x000001a7)]
        HRESULT _stdcall TextStyle([in] BSTR lpbstrRet);
        [id(0x00000015), propput, helpcontext(0x000001a8)]
        HRESULT _stdcall TextStyleKeepFmt([in] BSTR rhs);
        [id(0x00000016), helpcontext(0x0000005e)]
        HRESULT _stdcall Combine();
        [id(0x00000017), helpcontext(0x000000b9)]
        HRESULT _stdcall Fragment();
        [id(0x00000018), helpcontext(0x000000e0)]
        HRESULT _stdcall Intersect();
        [id(0x00000019), helpcontext(0x0000019b)]
        HRESULT _stdcall Subtract();
        [id(0x0000001a), helpcontext(0x000001ba)]
        HRESULT _stdcall Union();
        [id(0x0000001b), helpcontext(0x000000af)]
        HRESULT _stdcall FlipHorizontal();
        [id(0x0000001c), helpcontext(0x000000b0)]
        HRESULT _stdcall FlipVertical();
        [id(0x0000001d), helpcontext(0x00000156)]
        HRESULT _stdcall ReverseEnds();
        [id(0x0000001e), helpcontext(0x00000158)]
        HRESULT _stdcall Rotate90();
        [id(0x0000001f), helpcontext(0x00000069)]
        HRESULT _stdcall Copy();
        [id(0x00000020), helpcontext(0x00000071)]
        HRESULT _stdcall Cut();
        [id(0x00000021), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x00000022), helpcontext(0x00000094)]
        HRESULT _stdcall Duplicate();
        [id(0x00000023), helpcontext(0x000000c7)]
        HRESULT _stdcall Group();
        [id(0x00000024), helpcontext(0x00000068)]
        HRESULT _stdcall ConvertToGroup();
        [id(0x00000025), helpcontext(0x000001b9)]
        HRESULT _stdcall Ungroup();
        [id(0x00000026), helpcontext(0x0000016e)]
        HRESULT _stdcall SelectAll();
        [id(0x00000027), helpcontext(0x0000007f)]
        HRESULT _stdcall DeselectAll();
        [id(0x00000028), helpcontext(0x0000016d)]
        HRESULT _stdcall Select(
                        [in] IVShape* SheetObject, 
                        [in] short SelectAction);
        [id(0x00000029), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x0000002a), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
        [id(0x0000002b), helpcontext(0x000001b4)]
        HRESULT _stdcall Trim();
        [id(0x0000002c), helpcontext(0x000000eb)]
        HRESULT _stdcall Join();
        [id(0x0000002d), helpcontext(0x000000ac)]
        HRESULT _stdcall FitCurve(
                        [in] double Tolerance, 
                        [in] short Flags);
        [id(0x0000002e), helpcontext(0x000000f3)]
        HRESULT _stdcall Layout();
        [id(0x0000002f), helpcontext(0x00000041)]
        HRESULT _stdcall BoundingBox(
                        [in] short Flags, 
                        [out] double* lpr8Left, 
                        [out] double* lpr8Bottom, 
                        [out] double* lpr8Right, 
                        [out] double* lpr8Top);
    };

    [
      odl,
      uuid(000D070C-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVShape : IDispatch {
        [id(0x0000002d), helpcontext(0x000000c7)]
        HRESULT _stdcall Group();
        [id(0x0000002e), helpcontext(0x00000042)]
        HRESULT _stdcall BringForward();
        [id(0x0000002f), helpcontext(0x00000043)]
        HRESULT _stdcall BringToFront();
        [id(0x00000030), helpcontext(0x00000068)]
        HRESULT _stdcall ConvertToGroup();
        [id(0x00000031), helpcontext(0x000000af)]
        HRESULT _stdcall FlipHorizontal();
        [id(0x00000032), helpcontext(0x000000b0)]
        HRESULT _stdcall FlipVertical();
        [id(0x00000033), helpcontext(0x00000156)]
        HRESULT _stdcall ReverseEnds();
        [id(0x00000034), helpcontext(0x00000172)]
        HRESULT _stdcall SendBackward();
        [id(0x00000035), helpcontext(0x00000173)]
        HRESULT _stdcall SendToBack();
        [id(0x00000036), helpcontext(0x00000158)]
        HRESULT _stdcall Rotate90();
        [id(0x00000037), helpcontext(0x000001b9)]
        HRESULT _stdcall Ungroup();
        [id(0x0000002c), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000038), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IDispatch** lpdispRet);
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x00000015), propget, helpcontext(0x000000fe)]
        HRESULT _stdcall Master([out, retval] IVMaster** lpdispRet);
        [id(0x00000014), propget, helpcontext(0x000001b5)]
        HRESULT _stdcall Type([out, retval] short* lpi2Ret);
        [id(0x00000003), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x0000000d), propget, helpcontext(0x0000004a)]
        HRESULT _stdcall Cells(
                        [in] BSTR CellName, 
                        [out, retval] IVCell** lpdispRet);
        [id(0x0000000e), propget, helpcontext(0x0000004c)]
        HRESULT _stdcall CellsSRC(
                        [in] short Section, 
                        [in] short Row, 
                        [in] short Column, 
                        [out, retval] IVCell** lpdispRet);
        [id(0x00000005), propget, helpcontext(0x0000017f)]
        HRESULT _stdcall Shapes([out, retval] IVShapes** lpdispRet);
        [id(0x0000000f), propget, helpcontext(0x00000072)]
        HRESULT _stdcall Data1([out, retval] BSTR* lpbstrRet);
        [id(0x0000000f), propput, helpcontext(0x00000072)]
        HRESULT _stdcall Data1([in] BSTR lpbstrRet);
        [id(0x00000010), propget, helpcontext(0x00000073)]
        HRESULT _stdcall Data2([out, retval] BSTR* lpbstrRet);
        [id(0x00000010), propput, helpcontext(0x00000073)]
        HRESULT _stdcall Data2([in] BSTR lpbstrRet);
        [id(0x00000011), propget, helpcontext(0x00000074)]
        HRESULT _stdcall Data3([out, retval] BSTR* lpbstrRet);
        [id(0x00000011), propput, helpcontext(0x00000074)]
        HRESULT _stdcall Data3([in] BSTR lpbstrRet);
        [id(0x00000012), propget, helpcontext(0x000000ca)]
        HRESULT _stdcall Help([out, retval] BSTR* lpbstrRet);
        [id(0x00000012), propput, helpcontext(0x000000ca)]
        HRESULT _stdcall Help([in] BSTR lpbstrRet);
        [id(0x00000004), propget, helpcontext(0x0000010c)]
        HRESULT _stdcall NameID([out, retval] BSTR* lpbstrRet);
        [id(00000000), propget, helpcontext(0x0000010b)]
        HRESULT _stdcall Name([out, retval] BSTR* lpbstrRet);
        [id(00000000), propput, helpcontext(0x0000010b)]
        HRESULT _stdcall Name([in] BSTR lpbstrRet);
        [id(0x00000006), propget, helpcontext(0x000001a3)]
        HRESULT _stdcall Text([out, retval] BSTR* lpbstrRet);
        [id(0x00000006), propput, helpcontext(0x000001a3)]
        HRESULT _stdcall Text([in] BSTR lpbstrRet);
        [id(0x00000007), propget, helpcontext(0x00000050)]
        HRESULT _stdcall CharCount([out, retval] long* lpi4Ret);
        [id(0x00000008), propget, helpcontext(0x0000004f)]
        HRESULT _stdcall Characters([out, retval] IVCharacters** lpdispRet);
        [id(0x00000009), helpcontext(0x00000069)]
        HRESULT _stdcall Copy();
        [id(0x0000000a), helpcontext(0x00000071)]
        HRESULT _stdcall Cut();
        [id(0x0000000b), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x0000000c), helpcontext(0x00000094)]
        HRESULT _stdcall Duplicate();
        [id(0x00000013), helpcontext(0x00000092)]
        HRESULT _stdcall Drop(
                        [in] IUnknown* ObjectToDrop, 
                        [in] double xPos, 
                        [in] double yPos, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000016), propget, helpcontext(0x00000114)]
        HRESULT _stdcall OneD([out, retval] short* lpi2Ret);
        [id(0x00000016), propput, helpcontext(0x00000114)]
        HRESULT _stdcall OneD([in] short lpi2Ret);
        [id(0x00000017), propget, helpcontext(0x000000c0)]
        HRESULT _stdcall GeometryCount([out, retval] short* lpi2Ret);
        [id(0x00000018), propget, helpcontext(0x0000015a)]
        HRESULT _stdcall RowCount(
                        [in] short Section, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000019), helpcontext(0x0000001a)]
        HRESULT _stdcall AddSection(
                        [in] short Section, 
                        [out, retval] short* lpi2Ret);
        [id(0x0000001a), helpcontext(0x0000007d)]
        HRESULT _stdcall DeleteSection([in] short Section);
        [id(0x0000001b), helpcontext(0x00000018)]
        HRESULT _stdcall AddRow(
                        [in] short Section, 
                        [in] short Row, 
                        [in] short RowTag, 
                        [out, retval] short* lpi2Ret);
        [id(0x0000001c), helpcontext(0x0000007c)]
        HRESULT _stdcall DeleteRow(
                        [in] short Section, 
                        [in] short Row);
        [id(0x0000001d), propget, helpcontext(0x0000015d)]
        HRESULT _stdcall RowsCellCount(
                        [in] short Section, 
                        [in] short Row, 
                        [out, retval] short* lpi2Ret);
        [id(0x0000001e), propget, helpcontext(0x0000015e)]
        HRESULT _stdcall RowType(
                        [in] short Section, 
                        [in] short Row, 
                        [out, retval] short* lpi2Ret);
        [id(0x0000001e), propput, helpcontext(0x0000015e)]
        HRESULT _stdcall RowType(
                        [in] short Section, 
                        [in] short Row, 
                        [in] short lpi2Ret);
        [id(0x0000001f), helpcontext(0x00000175)]
        HRESULT _stdcall SetCenter(
                        [in] double xPos, 
                        [in] double yPos);
        [id(0x00000020), helpcontext(0x00000174)]
        HRESULT _stdcall SetBegin(
                        [in] double xPos, 
                        [in] double yPos);
        [id(0x00000021), helpcontext(0x00000178)]
        HRESULT _stdcall SetEnd(
                        [in] double xPos, 
                        [in] double yPos);
        [id(0x00000022), propget, helpcontext(0x00000062)]
        HRESULT _stdcall Connects([out, retval] IVConnects** lpdispRet);
        [id(0x00000023), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] short* lpi2Ret);
        [id(0x00000024), propget, helpcontext(0x00000194)]
        HRESULT _stdcall Style([out, retval] BSTR* lpbstrRet);
        [id(0x00000024), propput, helpcontext(0x00000194)]
        HRESULT _stdcall Style([in] BSTR lpbstrRet);
        [id(0x00000028), propput, helpcontext(0x00000197)]
        HRESULT _stdcall StyleKeepFmt([in] BSTR rhs);
        [id(0x00000025), propget, helpcontext(0x000000f7)]
        HRESULT _stdcall LineStyle([out, retval] BSTR* lpbstrRet);
        [id(0x00000025), propput, helpcontext(0x000000f7)]
        HRESULT _stdcall LineStyle([in] BSTR lpbstrRet);
        [id(0x00000029), propput, helpcontext(0x000000f8)]
        HRESULT _stdcall LineStyleKeepFmt([in] BSTR rhs);
        [id(0x00000026), propget, helpcontext(0x000000a9)]
        HRESULT _stdcall FillStyle([out, retval] BSTR* lpbstrRet);
        [id(0x00000026), propput, helpcontext(0x000000a9)]
        HRESULT _stdcall FillStyle([in] BSTR lpbstrRet);
        [id(0x0000002a), propput, helpcontext(0x000000aa)]
        HRESULT _stdcall FillStyleKeepFmt([in] BSTR rhs);
        [id(0x00000027), propget, helpcontext(0x000001a7)]
        HRESULT _stdcall TextStyle([out, retval] BSTR* lpbstrRet);
        [id(0x00000027), propput, helpcontext(0x000001a7)]
        HRESULT _stdcall TextStyle([in] BSTR lpbstrRet);
        [id(0x0000002b), propput, helpcontext(0x000001a8)]
        HRESULT _stdcall TextStyleKeepFmt([in] BSTR rhs);
        [id(0x00000039), helpcontext(0x000000a1)]
        HRESULT _stdcall Export([in] BSTR FileName);
        [id(0x0000003a), propget, helpcontext(0x00000026)]
        HRESULT _stdcall AreaIU([out, retval] double* lpr8Ret);
        [id(0x0000003b), propget, helpcontext(0x000000f5)]
        HRESULT _stdcall LengthIU([out, retval] double* lpr8Ret);
        [id(0x0000003c), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall GeomExIf(
                        [in] short fFill, 
                        [in] double LineRes, 
                        [out, retval] IUnknown** lpunkRet);
        [id(0x0000003d), propget, helpcontext(0x000001bb)]
        HRESULT _stdcall UniqueID(
                        [in] short fUniqueID, 
                        [out, retval] BSTR* lpbstrRet);
        [id(0x0000003e), propget, helpcontext(0x00000064)]
        HRESULT _stdcall ContainingPage([out, retval] IVPage** lpdispRet);
        [id(0x0000003f), propget, helpcontext(0x00000063)]
        HRESULT _stdcall ContainingMaster([out, retval] IVMaster** lpdispRet);
        [id(0x00000040), propget, helpcontext(0x00000065)]
        HRESULT _stdcall ContainingShape([out, retval] IVShape** lpdispRet);
        [id(0x00000041), propget, helpcontext(0x0000016c)]
        HRESULT _stdcall SectionExists(
                        [in] short Section, 
                        [in] short fLocalExists, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000042), propget, helpcontext(0x0000015b)]
        HRESULT _stdcall RowExists(
                        [in] short Section, 
                        [in] short Row, 
                        [in] short fLocalExists, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000043), propget, helpcontext(0x00000049)]
        HRESULT _stdcall CellExists(
                        [in] BSTR CellName, 
                        [in] short fLocalExists, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000044), propget, helpcontext(0x0000004d)]
        HRESULT _stdcall CellsSRCExists(
                        [in] short Section, 
                        [in] short Row, 
                        [in] short Column, 
                        [in] short fLocalExists, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000045), propget, helpcontext(0x000000f0)]
        HRESULT _stdcall LayerCount([out, retval] short* lpi2Ret);
        [id(0x00000046), propget, helpcontext(0x000000ef)]
        HRESULT _stdcall Layer(
                        [in] short Index, 
                        [out, retval] IVLayer** lpdispRet);
        [id(0x00000047), helpcontext(0x00000012)]
        HRESULT _stdcall AddNamedRow(
                        [in] short Section, 
                        [in] BSTR RowName, 
                        [in] short RowTag, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000048), helpcontext(0x00000019)]
        HRESULT _stdcall AddRows(
                        [in] short Section, 
                        [in] short Row, 
                        [in] short RowTag, 
                        [in] short RowCount, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000049), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x0000004a), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
        [id(0x0000004b), helpcontext(0x0000008d)]
        HRESULT _stdcall DrawLine(
                        [in] double xLeft, 
                        [in] double yTop, 
                        [in] double xRight, 
                        [in] double yBottom, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x0000004c), helpcontext(0x00000090)]
        HRESULT _stdcall DrawRectangle(
                        [in] double xLeft, 
                        [in] double yTop, 
                        [in] double xRight, 
                        [in] double yBottom, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x0000004d), helpcontext(0x0000008e)]
        HRESULT _stdcall DrawOval(
                        [in] double xLeft, 
                        [in] double yTop, 
                        [in] double xRight, 
                        [in] double yBottom, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x0000004e), helpcontext(0x00000091)]
        HRESULT _stdcall DrawSpline(
                        [in] SAFEARRAY(double)* xyArray, 
                        [in] double Tolerance, 
                        [in] short Flags, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x0000004f), helpcontext(0x0000008b)]
        HRESULT _stdcall DrawBezier(
                        [in] SAFEARRAY(double)* xyArray, 
                        [in] short degree, 
                        [in] short Flags, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000050), helpcontext(0x0000008f)]
        HRESULT _stdcall DrawPolyline(
                        [in] SAFEARRAY(double)* xyArray, 
                        [in] short Flags, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000051), helpcontext(0x000000ac)]
        HRESULT _stdcall FitCurve(
                        [in] double Tolerance, 
                        [in] short Flags);
        [id(0x00000052), helpcontext(0x000000d5)]
        HRESULT _stdcall Import(
                        [in] BSTR FileName, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000053), helpcontext(0x0000004e)]
        HRESULT _stdcall CenterDrawing();
        [id(0x00000054), helpcontext(0x000000dc)]
        HRESULT _stdcall InsertFromFile(
                        [in] BSTR FileName, 
                        [in] short Flags, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000055), helpcontext(0x000000dd)]
        HRESULT _stdcall InsertObject(
                        [in] BSTR ClassOrProgID, 
                        [in] short Flags, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000056), propget, helpcontext(0x00000054)]
        HRESULT _stdcall ClassID([out, retval] BSTR* lpbstrRet);
        [id(0x00000057), propget, helpcontext(0x000000b4)]
        HRESULT _stdcall ForeignType([out, retval] short* lpi2Ret);
        [id(0x00000058), propget, helpcontext(0x0000010f)]
        HRESULT _stdcall Object([out, retval] IDispatch** lpdispRet);
        [id(0x00000059), helpcontext(0x00000116)]
        HRESULT _stdcall OpenDrawWindow([out, retval] IVWindow** lpdispRet);
        [id(0x0000005a), helpcontext(0x00000119)]
        HRESULT _stdcall OpenSheetWindow([out, retval] IVWindow** lpdispRet);
        [id(0x0000005b), propget, helpcontext(0x000000d4)]
        HRESULT _stdcall ID([out, retval] short* lpi2Ret);
        [id(0x0000005c), helpcontext(0x00000093)]
        HRESULT _stdcall DropMany(
                        [in] SAFEARRAY(VARIANT)* ObjectsToInstance, 
                        [in] SAFEARRAY(double)* xyArray, 
                        [out] SAFEARRAY(short)* IDArray, 
                        [out, retval] short* lpi2Ret);
        [id(0x0000005d), helpcontext(0x000000c1)]
        HRESULT _stdcall GetFormulas(
                        [in] SAFEARRAY(short)* SRCStream, 
                        [out] SAFEARRAY(VARIANT)* formulaArray);
        [id(0x0000005e), helpcontext(0x000000c3)]
        HRESULT _stdcall GetResults(
                        [in] SAFEARRAY(short)* SRCStream, 
                        [in] short Flags, 
                        [in] SAFEARRAY(VARIANT)* UnitsNamesOrCodes, 
                        [out] SAFEARRAY(VARIANT)* resultArray);
        [id(0x0000005f), helpcontext(0x00000179)]
        HRESULT _stdcall SetFormulas(
                        [in] SAFEARRAY(short)* SRCStream, 
                        [in] SAFEARRAY(VARIANT)* formulaArray, 
                        [in] short Flags, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000060), helpcontext(0x0000017b)]
        HRESULT _stdcall SetResults(
                        [in] SAFEARRAY(short)* SRCStream, 
                        [in] SAFEARRAY(VARIANT)* UnitsNamesOrCodes, 
                        [in] SAFEARRAY(VARIANT)* resultArray, 
                        [in] short Flags, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000061), propget, helpcontext(0x000000bc)]
        HRESULT _stdcall FromConnects([out, retval] IVConnects** lpdispRet);
        [id(0x00000062), helpcontext(0x000000f3)]
        HRESULT _stdcall Layout();
        [id(0x00000063), helpcontext(0x00000041)]
        HRESULT _stdcall BoundingBox(
                        [in] short Flags, 
                        [out] double* lpr8Left, 
                        [out] double* lpr8Bottom, 
                        [out] double* lpr8Right, 
                        [out] double* lpr8Top);
        [id(0x00000064), helpcontext(0x000000ce)]
        HRESULT _stdcall HitTest(
                        [in] double xPos, 
                        [in] double yPos, 
                        [in] double Tolerance, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000065), propget, helpcontext(0x000000cf)]
        HRESULT _stdcall Hyperlink([out, retval] IVHyperlink** lpdispRet);
        [id(0x00000066), propget, helpcontext(0x00000141)]
        HRESULT _stdcall ProgID([out, retval] BSTR* lpbstrRet);
        [id(0x00000067), propget, helpcontext(0x00000110)]
        HRESULT _stdcall ObjectIsInherited([out, retval] short* lpboolRet);
        [id(0x00000068), propget, helpcontext(0x0000012c)]
        HRESULT _stdcall Paths([out, retval] IVPaths** lpdispRet);
        [id(0x00000069), propget, helpcontext(0x0000012d)]
        HRESULT _stdcall PathsLocal([out, retval] IVPaths** lpdispRet);
        [id(0x0000006a), helpcontext(0x00000011)]
        HRESULT _stdcall AddHyperlink([out, retval] IVHyperlink** lpdispRet);
    };

    [
      odl,
      uuid(000D070D-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVShapes : IDispatch {
        [id(0x00000003), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] VARIANT NameUIDOrIndex, 
                        [out, retval] IVShape** lpdispRet);
        [id(0x00000001), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] short* lpi2Ret);
        [id(0x00000004), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000005), propget, helpcontext(0x00000064)]
        HRESULT _stdcall ContainingPage([out, retval] IVPage** lpdispRet);
        [id(0x00000006), propget, helpcontext(0x00000063)]
        HRESULT _stdcall ContainingMaster([out, retval] IVMaster** lpdispRet);
        [id(0x00000007), propget, helpcontext(0x00000065)]
        HRESULT _stdcall ContainingShape([out, retval] IVShape** lpdispRet);
        [id(0x00000008), helpcontext(0x0000004e)]
        HRESULT _stdcall CenterDrawing();
        [id(0x00000009), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x0000000a), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x0000000b), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
        [id(0x0000000c), propget, helpcontext(0x000000ea)]
        HRESULT _stdcall ItemFromID(
                        [in] short ObjectID, 
                        [out, retval] IVShape** lpdispRet);
    };

    [
      odl,
      uuid(000D070E-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVStyle : IDispatch {
        [id(0x00000002), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x00000001), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x0000010b)]
        HRESULT _stdcall Name([out, retval] BSTR* lpbstrRet);
        [id(00000000), propput, helpcontext(0x0000010b)]
        HRESULT _stdcall Name([in] BSTR lpbstrRet);
        [id(0x00000004), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] short* lpi2Ret);
        [id(0x00000005), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000006), propget, helpcontext(0x0000002d)]
        HRESULT _stdcall BasedOn([out, retval] BSTR* lpbstrRet);
        [id(0x00000006), propput, helpcontext(0x0000002d)]
        HRESULT _stdcall BasedOn([in] BSTR lpbstrRet);
        [id(0x00000007), propget, helpcontext(0x000001a5)]
        HRESULT _stdcall TextBasedOn([out, retval] BSTR* lpbstrRet);
        [id(0x00000007), propput, helpcontext(0x000001a5)]
        HRESULT _stdcall TextBasedOn([in] BSTR lpbstrRet);
        [id(0x00000008), propget, helpcontext(0x000000f6)]
        HRESULT _stdcall LineBasedOn([out, retval] BSTR* lpbstrRet);
        [id(0x00000008), propput, helpcontext(0x000000f6)]
        HRESULT _stdcall LineBasedOn([in] BSTR lpbstrRet);
        [id(0x00000009), propget, helpcontext(0x000000a8)]
        HRESULT _stdcall FillBasedOn([out, retval] BSTR* lpbstrRet);
        [id(0x00000009), propput, helpcontext(0x000000a8)]
        HRESULT _stdcall FillBasedOn([in] BSTR lpbstrRet);
        [id(0x0000000a), propget, helpcontext(0x000000d9)]
        HRESULT _stdcall IncludesText([out, retval] short* lpi2Ret);
        [id(0x0000000a), propput, helpcontext(0x000000d9)]
        HRESULT _stdcall IncludesText([in] short lpi2Ret);
        [id(0x0000000b), propget, helpcontext(0x000000d8)]
        HRESULT _stdcall IncludesLine([out, retval] short* lpi2Ret);
        [id(0x0000000b), propput, helpcontext(0x000000d8)]
        HRESULT _stdcall IncludesLine([in] short lpi2Ret);
        [id(0x0000000c), propget, helpcontext(0x000000d7)]
        HRESULT _stdcall IncludesFill([out, retval] short* lpi2Ret);
        [id(0x0000000c), propput, helpcontext(0x000000d7)]
        HRESULT _stdcall IncludesFill([in] short lpi2Ret);
        [id(0x0000000d), propget, helpcontext(0x0000004a)]
        HRESULT _stdcall Cells(
                        [in] BSTR CellName, 
                        [out, retval] IVCell** lpdispRet);
        [id(0x0000000e), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x0000000f), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x00000010), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
        [id(0x00000011), propget, helpcontext(0x000000d4)]
        HRESULT _stdcall ID([out, retval] short* lpi2Ret);
        [id(0x00000012), helpcontext(0x000000c1)]
        HRESULT _stdcall GetFormulas(
                        [in] SAFEARRAY(short)* SRCStream, 
                        [out] SAFEARRAY(VARIANT)* formulaArray);
        [id(0x00000013), helpcontext(0x000000c3)]
        HRESULT _stdcall GetResults(
                        [in] SAFEARRAY(short)* SRCStream, 
                        [in] short Flags, 
                        [in] SAFEARRAY(VARIANT)* UnitsNamesOrCodes, 
                        [out] SAFEARRAY(VARIANT)* resultArray);
        [id(0x00000014), helpcontext(0x00000179)]
        HRESULT _stdcall SetFormulas(
                        [in] SAFEARRAY(short)* SRCStream, 
                        [in] SAFEARRAY(VARIANT)* formulaArray, 
                        [in] short Flags, 
                        [out, retval] short* lpi2Ret);
        [id(0x00000015), helpcontext(0x0000017b)]
        HRESULT _stdcall SetResults(
                        [in] SAFEARRAY(short)* SRCStream, 
                        [in] SAFEARRAY(VARIANT)* UnitsNamesOrCodes, 
                        [in] SAFEARRAY(VARIANT)* resultArray, 
                        [in] short Flags, 
                        [out, retval] short* lpi2Ret);
    };

    [
      odl,
      uuid(000D070F-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVStyles : IDispatch {
        [id(0x00000003), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] VARIANT NameOrIndex, 
                        [out, retval] IVStyle** lpdispRet);
        [id(0x00000001), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] short* lpi2Ret);
        [id(0x00000004), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000005), helpcontext(0x0000000a)]
        HRESULT _stdcall Add(
                        [in] BSTR StyleName, 
                        [in] BSTR BasedOn, 
                        [in] short fIncludesText, 
                        [in] short fIncludesLine, 
                        [in] short fIncludesFill, 
                        [out, retval] IVStyle** lpdispRet);
        [id(0x00000006), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x00000007), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x00000008), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
        [id(0x00000009), propget, helpcontext(0x000000ea)]
        HRESULT _stdcall ItemFromID(
                        [in] short ObjectID, 
                        [out, retval] IVStyle** lpdispRet);
        [id(0x0000000a), helpcontext(0x000000c2)]
        HRESULT _stdcall GetNames([out] SAFEARRAY(BSTR)* NameArray);
    };

    [
      odl,
      uuid(000D0710-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVWindow : IDispatch {
        [id(00000000), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000001), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x00000002), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000003), helpcontext(0x00000005)]
        HRESULT _stdcall Activate();
        [id(0x00000004), propget, helpcontext(0x000001b5)]
        HRESULT _stdcall Type([out, retval] short* lpi2Ret);
        [id(0x00000005), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000006), propget, helpcontext(0x0000011d)]
        HRESULT _stdcall PageAsObj([out, retval] IVPage** lpdispRet);
        [id(0x000002bb), propput, helpcontext(0x0000011f)]
        HRESULT _stdcall PageFromName([in] BSTR rhs);
        [id(0x00000007), propget, helpcontext(0x000001cd)]
        HRESULT _stdcall Zoom([out, retval] double* lpr8Ret);
        [id(0x00000007), propput, helpcontext(0x000001cd)]
        HRESULT _stdcall Zoom([in] double lpr8Ret);
        [id(0x00000008), helpcontext(0x00000057)]
        HRESULT _stdcall Close();
        [id(0x00000009), helpcontext(0x0000016e)]
        HRESULT _stdcall SelectAll();
        [id(0x0000000a), helpcontext(0x0000007f)]
        HRESULT _stdcall DeselectAll();
        [id(0x0000000b), propget, helpcontext(0x0000016f)]
        HRESULT _stdcall Selection([out, retval] IVSelection** lpdispRet);
        [id(0x0000000c), helpcontext(0x0000016d)]
        HRESULT _stdcall Select(
                        [in] IVShape* SheetObject, 
                        [in] short SelectAction);
        [id(0x0000000d), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] short* lpi2Ret);
        [id(0x0000000e), helpcontext(0x00000071)]
        HRESULT _stdcall Cut();
        [id(0x0000000f), helpcontext(0x00000069)]
        HRESULT _stdcall Copy();
        [id(0x00000010), helpcontext(0x0000012a)]
        HRESULT _stdcall Paste();
        [id(0x00000011), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x00000012), helpcontext(0x00000094)]
        HRESULT _stdcall Duplicate();
        [id(0x00000013), helpcontext(0x000000c7)]
        HRESULT _stdcall Group();
        [id(0x00000014), helpcontext(0x000001ba)]
        HRESULT _stdcall Union();
        [id(0x00000015), helpcontext(0x0000005e)]
        HRESULT _stdcall Combine();
        [id(0x00000016), helpcontext(0x000000b9)]
        HRESULT _stdcall Fragment();
        [id(0x00000017), helpcontext(0x0000001c)]
        HRESULT _stdcall AddToGroup();
        [id(0x00000018), helpcontext(0x0000014d)]
        HRESULT _stdcall RemoveFromGroup();
        [id(0x00000019), propget, helpcontext(0x0000019c)]
        HRESULT _stdcall SubType([out, retval] short* lpi2Ret);
        [id(0x0000001a), helpcontext(0x000000e0)]
        HRESULT _stdcall Intersect();
        [id(0x0000001b), helpcontext(0x0000019b)]
        HRESULT _stdcall Subtract();
        [id(0x0000001c), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x0000001d), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
        [id(0x0000001e), propget, helpcontext(0x000001c8)]
        HRESULT _stdcall WindowHandle([out, retval] short* lpi2Ret);
        [id(0x0000001f), propget, helpcontext(0x000001c9)]
        HRESULT _stdcall WindowHandle32([out, retval] long* lpi4Ret);
        [id(0x00000020), helpcontext(0x000001b4)]
        HRESULT _stdcall Trim();
        [id(0x00000021), helpcontext(0x000000eb)]
        HRESULT _stdcall Join();
        [id(0x00000022), propget, helpcontext(0x00000189)]
        HRESULT _stdcall ShowRulers([out, retval] short* lpi2Ret);
        [id(0x00000022), propput, helpcontext(0x00000189)]
        HRESULT _stdcall ShowRulers([in] short lpi2Ret);
        [id(0x00000023), propget, helpcontext(0x00000184)]
        HRESULT _stdcall ShowGrid([out, retval] short* lpi2Ret);
        [id(0x00000023), propput, helpcontext(0x00000184)]
        HRESULT _stdcall ShowGrid([in] short lpi2Ret);
        [id(0x00000024), propget, helpcontext(0x00000185)]
        HRESULT _stdcall ShowGuides([out, retval] short* lpi2Ret);
        [id(0x00000024), propput, helpcontext(0x00000185)]
        HRESULT _stdcall ShowGuides([in] short lpi2Ret);
        [id(0x00000025), propget, helpcontext(0x00000183)]
        HRESULT _stdcall ShowConnectPoints([out, retval] short* lpi2Ret);
        [id(0x00000025), propput, helpcontext(0x00000183)]
        HRESULT _stdcall ShowConnectPoints([in] short lpi2Ret);
        [id(0x00000026), propget, helpcontext(0x00000187)]
        HRESULT _stdcall ShowPageBreaks([out, retval] short* lpi2Ret);
        [id(0x00000026), propput, helpcontext(0x00000187)]
        HRESULT _stdcall ShowPageBreaks([in] short lpi2Ret);
        [id(0x00000027), propget, helpcontext(0x0000011b)]
        HRESULT _stdcall Page([out, retval] VARIANT* lpobjRet);
        [id(0x00000027), propput, helpcontext(0x0000011b)]
        HRESULT _stdcall Page([in] VARIANT lpobjRet);
        [id(0x00000028), helpcontext(0x00000081)]
        HRESULT _stdcall DockedStencils([out] SAFEARRAY(BSTR)* NameArray);
        [id(0x00000029), propget, helpcontext(0x000000fe)]
        HRESULT _stdcall Master([out, retval] VARIANT* lpobjRet);
        [id(0x0000002a), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall ShowScrollBars([out, retval] short* lpi2Ret);
        [id(0x0000002a), propput, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall ShowScrollBars([in] short lpi2Ret);
    };

    [
      odl,
      uuid(000D0711-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVWindows : IDispatch {
        [id(0x00000003), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] short Index, 
                        [out, retval] IVWindow** lpdispRet);
        [id(0x00000001), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] short* lpi2Ret);
        [id(0x00000004), helpcontext(0x00000027)]
        HRESULT _stdcall Arrange();
        [id(0x00000005), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x00000006), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
    };

    [
      odl,
      uuid(000D0712-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVLayer : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x0000011b)]
        HRESULT _stdcall Page([out, retval] IVPage** lpdispRet);
        [id(0x00000004), propget, helpcontext(0x000000fe)]
        HRESULT _stdcall Master([out, retval] IVMaster** lpdispRet);
        [id(0x00000005), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] short* lpi2Ret);
        [id(0x00000006), propget, helpcontext(0x00000159)]
        HRESULT _stdcall Row([out, retval] short* lpi2Ret);
        [id(0x00000007), helpcontext(0x0000000a)]
        HRESULT _stdcall Add(
                        [in] IVShape* SheetObject, 
                        [in] short fPresMems);
        [id(0x00000008), helpcontext(0x0000014c)]
        HRESULT _stdcall Remove(
                        [in] IVShape* SheetObject, 
                        [in] short fPresMems);
        [id(0x00000009), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete([in] short fDeleteShapes);
        [id(00000000), propget, helpcontext(0x0000010b)]
        HRESULT _stdcall Name([out, retval] BSTR* lpbstrRet);
        [id(00000000), propput, helpcontext(0x0000010b)]
        HRESULT _stdcall Name([in] BSTR lpbstrRet);
        [id(0x0000000a), propget, helpcontext(0x0000004b)]
        HRESULT _stdcall CellsC(
                        [in] short Column, 
                        [out, retval] IVCell** lpdispRet);
        [id(0x0000000b), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x0000000c), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x0000000d), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x0000000e), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
    };

    [
      odl,
      uuid(000D0713-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVLayers : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x0000011b)]
        HRESULT _stdcall Page([out, retval] IVPage** lpdispRet);
        [id(0x00000004), propget, helpcontext(0x000000fe)]
        HRESULT _stdcall Master([out, retval] IVMaster** lpdispRet);
        [id(0x00000005), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] VARIANT NameOrIndex, 
                        [out, retval] IVLayer** lpdispRet);
        [id(0x00000006), helpcontext(0x0000000a)]
        HRESULT _stdcall Add(
                        [in] BSTR LayerName, 
                        [out, retval] IVLayer** lpdispRet);
        [id(0x00000007), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000008), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x00000009), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x0000000a), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
    };

    [
      odl,
      uuid(000D0714-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVFont : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x0000010b)]
        HRESULT _stdcall Name([out, retval] BSTR* lpbstrRet);
        [id(0x00000004), propget, helpcontext(0x000000d4)]
        HRESULT _stdcall ID([out, retval] short* lpi2Ret);
        [id(0x00000005), propget, helpcontext(0x00000028)]
        HRESULT _stdcall Attributes([out, retval] short* lpi2Ret);
        [id(0x00000006), propget, helpcontext(0x00000053)]
        HRESULT _stdcall CharSet([out, retval] short* lpi2Ret);
        [id(0x00000007), propget, helpcontext(0x00000132)]
        HRESULT _stdcall PitchAndFamily([out, retval] short* lpi2Ret);
        [id(0x00000008), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000009), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
    };

    [
      odl,
      uuid(000D0715-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVFonts : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] VARIANT NameOrIndex, 
                        [out, retval] IVFont** lpdispRet);
        [id(0x00000004), propget, helpcontext(0x000000ea)]
        HRESULT _stdcall ItemFromID(
                        [in] long ObjectID, 
                        [out, retval] IVFont** lpdispRet);
        [id(0x00000005), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000006), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
    };

    [
      odl,
      uuid(000D0716-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVColor : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] short* lpi2Ret);
        [id(0x00000004), propget, helpcontext(0x0000014a)]
        HRESULT _stdcall Red([out, retval] short* lpi2Ret);
        [id(0x00000004), propput, helpcontext(0x0000014a)]
        HRESULT _stdcall Red([in] short lpi2Ret);
        [id(0x00000005), propget, helpcontext(0x000000c6)]
        HRESULT _stdcall Green([out, retval] short* lpi2Ret);
        [id(0x00000005), propput, helpcontext(0x000000c6)]
        HRESULT _stdcall Green([in] short lpi2Ret);
        [id(0x00000006), propget, helpcontext(0x0000003f)]
        HRESULT _stdcall Blue([out, retval] short* lpi2Ret);
        [id(0x00000006), propput, helpcontext(0x0000003f)]
        HRESULT _stdcall Blue([in] short lpi2Ret);
        [id(0x00000007), propget, helpcontext(0x000000ad)]
        HRESULT _stdcall Flags([out, retval] short* lpi2Ret);
        [id(0x00000007), propput, helpcontext(0x000000ad)]
        HRESULT _stdcall Flags([in] short lpi2Ret);
        [id(00000000), propget, helpcontext(0x00000122)]
        HRESULT _stdcall PaletteEntry([out, retval] long* lpi4Ret);
        [id(00000000), propput, helpcontext(0x00000122)]
        HRESULT _stdcall PaletteEntry([in] long lpi4Ret);
        [id(0x00000008), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000009), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
    };

    [
      odl,
      uuid(000D0717-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVColors : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] short Index, 
                        [out, retval] IVColor** lpdispRet);
        [id(0x00000004), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000005), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
    };

    [
      odl,
      uuid(000D0718-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVAddon : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x0000010b)]
        HRESULT _stdcall Name([out, retval] BSTR* lpbstrRet);
        [id(0x00000003), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] short* lpi2Ret);
        [id(0x00000004), propget, helpcontext(0x00000095)]
        HRESULT _stdcall Enabled([out, retval] short* lpi2Ret);
        [id(0x00000005), helpcontext(0x0000015f)]
        HRESULT _stdcall Run([in] BSTR ArgString);
    };

    [
      odl,
      uuid(000D0719-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVAddons : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] VARIANT NameOrIndex, 
                        [out, retval] IVAddon** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] short* lpi2Ret);
        [id(0x00000004), helpcontext(0x0000000a)]
        HRESULT _stdcall Add(
                        [in] BSTR FileName, 
                        [out, retval] IVAddon** lpdispRet);
        [id(0x00000005), helpcontext(0x000000c2)]
        HRESULT _stdcall GetNames([out] SAFEARRAY(BSTR)* NameArray);
    };

    [
      odl,
      uuid(000D071A-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVEvent : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x0000009c)]
        HRESULT _stdcall Event([out, retval] short* lpi2Ret);
        [id(00000000), propput, helpcontext(0x0000009c)]
        HRESULT _stdcall Event([in] short lpi2Ret);
        [id(0x00000004), propget, helpcontext(0x00000003)]
        HRESULT _stdcall Action([out, retval] short* lpi2Ret);
        [id(0x00000004), propput, helpcontext(0x00000003)]
        HRESULT _stdcall Action([in] short lpi2Ret);
        [id(0x00000005), propget, helpcontext(0x0000019f)]
        HRESULT _stdcall Target([out, retval] BSTR* lpbstrRet);
        [id(0x00000005), propput, helpcontext(0x0000019f)]
        HRESULT _stdcall Target([in] BSTR lpbstrRet);
        [id(0x00000006), propget, helpcontext(0x000001a0)]
        HRESULT _stdcall TargetArgs([out, retval] BSTR* lpbstrRet);
        [id(0x00000006), propput, helpcontext(0x000001a0)]
        HRESULT _stdcall TargetArgs([in] BSTR lpbstrRet);
        [id(0x00000007), helpcontext(0x000001b3)]
        HRESULT _stdcall Trigger([in] BSTR ContextString);
        [id(0x00000008), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x00000009), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x0000000a), propget, helpcontext(0x000000d4)]
        HRESULT _stdcall ID([out, retval] long* lpi4Ret);
        [id(0x0000000b), propget, helpcontext(0x00000095)]
        HRESULT _stdcall Enabled([out, retval] short* lpi2Ret);
        [id(0x0000000b), propput, helpcontext(0x00000095)]
        HRESULT _stdcall Enabled([in] short lpi2Ret);
        [id(0x0000000c), propget, helpcontext(0x0000012f)]
        HRESULT _stdcall Persistable([out, retval] short* lpi2Ret);
        [id(0x0000000d), propget, helpcontext(0x00000130)]
        HRESULT _stdcall Persistent([out, retval] short* lpi2Ret);
        [id(0x0000000d), propput, helpcontext(0x00000130)]
        HRESULT _stdcall Persistent([in] short lpi2Ret);
    };

    [
      odl,
      uuid(000D071B-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVEventList : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] short Index, 
                        [out, retval] IVEvent** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] short* lpi2Ret);
        [id(0x00000004), helpcontext(0x0000000a)]
        HRESULT _stdcall Add(
                        [in] short EventCode, 
                        [in] short Action, 
                        [in] BSTR Target, 
                        [in] BSTR TargetArgs, 
                        [out, retval] IVEvent** lpdispRet);
        [id(0x00000005), helpcontext(0x0000000b)]
        HRESULT _stdcall AddAdvise(
                        [in] short EventCode, 
                        [in] VARIANT SinkIUnkOrIDisp, 
                        [in] BSTR IIDSink, 
                        [in] BSTR TargetArgs, 
                        [out, retval] IVEvent** lpdispRet);
        [id(0x00000006), propget, helpcontext(0x000000ea)]
        HRESULT _stdcall ItemFromID(
                        [in] long ObjectID, 
                        [out, retval] IVEvent** lpdispRet);
    };

    [
      odl,
      uuid(000D071C-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVGlobal : IDispatch {
        [id(00000000), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000001), propget, helpcontext(0x00000007)]
        HRESULT _stdcall ActiveDocument([out, retval] IVDocument** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000008)]
        HRESULT _stdcall ActivePage([out, retval] IVPage** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x00000009)]
        HRESULT _stdcall ActiveWindow([out, retval] IVWindow** lpdispRet);
        [id(0x00000004), propget, helpcontext(0x00000088)]
        HRESULT _stdcall Documents([out, retval] IVDocuments** lpdispRet);
        [id(0x00000005), propget, helpcontext(0x000001cb)]
        HRESULT _stdcall Windows([out, retval] IVWindows** lpdispRet);
        [id(0x00000006), propget, helpcontext(0x00000016)]
        HRESULT _stdcall Addons([out, retval] IVAddons** lpdispRet);
        [id(0x00000007), propget, helpcontext(0x000001c0)]
        HRESULT _stdcall Vbe([out, retval] IDispatch** lpdispRet);
    };

    [
      uuid(000D0750-0000-0000-C000-000000000046),
      helpstring("Visio Document Event Interface"),
      helpcontext(0x00001388),
      hidden
    ]
    dispinterface EDocument {
        properties:
        methods:
            [id(0x00000002), helpcontext(0x00000087)]
            void DocumentOpened([in] IVDocument* doc);
            [id(0x00000001), helpcontext(0x00000086)]
            void DocumentCreated([in] IVDocument* doc);
            [id(0x00000003), helpcontext(0x00000089)]
            void DocumentSaved([in] IVDocument* doc);
            [id(0x00000004), helpcontext(0x0000008a)]
            void DocumentSavedAs([in] IVDocument* doc);
            [id(0x00002002), helpcontext(0x00000085)]
            void DocumentChanged([in] IVDocument* doc);
            [id(0x00004002), helpcontext(0x0000002e)]
            void BeforeDocumentClose([in] IVDocument* doc);
            [id(0x00008004), helpcontext(0x00000195)]
            void StyleAdded([in] IVStyle* Style);
            [id(0x00002004), helpcontext(0x00000196)]
            void StyleChanged([in] IVStyle* Style);
            [id(0x00004004), helpcontext(0x00000037)]
            void BeforeStyleDelete([in] IVStyle* Style);
            [id(0x00008008), helpcontext(0x000000ff)]
            void MasterAdded([in] IVMaster* Master);
            [id(0x00002008), helpcontext(0x00000100)]
            void MasterChanged([in] IVMaster* Master);
            [id(0x00004008), helpcontext(0x00000031)]
            void BeforeMasterDelete([in] IVMaster* Master);
            [id(0x00008010), helpcontext(0x0000011c)]
            void PageAdded([in] IVPage* Page);
            [id(0x00002010), helpcontext(0x0000011e)]
            void PageChanged([in] IVPage* Page);
            [id(0x00004010), helpcontext(0x00000033)]
            void BeforePageDelete([in] IVPage* Page);
            [id(0x00008040), helpcontext(0x0000017d)]
            void ShapeAdded([in] IVShape* Shape);
            [id(0x00000385), helpcontext(0x00000035)]
            void BeforeSelectionDelete([in] IVSelection* Selection);
            [id(0x00000005), helpcontext(0x00000162)]
            void RunModeEntered([in] IVDocument* doc);
            [id(0x00000006), helpcontext(0x00000080)]
            void DesignModeEntered([in] IVDocument* doc);
            [id(0x00000007), helpcontext(0x0000002f)]
            void BeforeDocumentSave([in] IVDocument* doc);
            [id(0x00000008), helpcontext(0x00000030)]
            void BeforeDocumentSaveAs([in] IVDocument* doc);
    };

    [
      uuid(000D0B00-0000-0000-C000-000000000046),
      helpstring("Visio Application Event Interface"),
      helpcontext(0x00001388),
      hidden
    ]
    dispinterface EApplication {
        properties:
        methods:
            [id(0x00001001), helpcontext(0x00000021)]
            void AppActivated([in] IVApplication* app);
            [id(0x00001002), helpcontext(0x00000022)]
            void AppDeactivated([in] IVApplication* app);
            [id(0x00001004), helpcontext(0x00000024)]
            void AppObjActivated([in] IVApplication* app);
            [id(0x00001008), helpcontext(0x00000025)]
            void AppObjDeactivated([in] IVApplication* app);
            [id(0x00001010), helpcontext(0x00000034)]
            void BeforeQuit([in] IVApplication* app);
            [id(0x00001020), helpcontext(0x00000032)]
            void BeforeModal([in] IVApplication* app);
            [id(0x00001040), helpcontext(0x0000001d)]
            void AfterModal([in] IVApplication* app);
            [id(0x00008001), helpcontext(0x000001ca)]
            void WindowOpened([in] IVWindow* Window);
            [id(0x000002bd), helpcontext(0x00000171)]
            void SelectionChanged([in] IVWindow* Window);
            [id(0x00004001), helpcontext(0x00000038)]
            void BeforeWindowClosed([in] IVWindow* Window);
            [id(0x00001080), helpcontext(0x000001c7)]
            void WindowActivated([in] IVWindow* Window);
            [id(0x000002be), helpcontext(0x0000003a)]
            void BeforeWindowSelDelete([in] IVWindow* Window);
            [id(0x000002bf), helpcontext(0x00000039)]
            void BeforeWindowPageTurn([in] IVWindow* Window);
            [id(0x000002c0), helpcontext(0x000001cc)]
            void WindowTurnedToPage([in] IVWindow* Window);
            [id(0x00000002), helpcontext(0x00000087)]
            void DocumentOpened([in] IVDocument* doc);
            [id(0x00000001), helpcontext(0x00000086)]
            void DocumentCreated([in] IVDocument* doc);
            [id(0x00000003), helpcontext(0x00000089)]
            void DocumentSaved([in] IVDocument* doc);
            [id(0x00000004), helpcontext(0x0000008a)]
            void DocumentSavedAs([in] IVDocument* doc);
            [id(0x00002002), helpcontext(0x00000085)]
            void DocumentChanged([in] IVDocument* doc);
            [id(0x00004002), helpcontext(0x0000002e)]
            void BeforeDocumentClose([in] IVDocument* doc);
            [id(0x00008004), helpcontext(0x00000195)]
            void StyleAdded([in] IVStyle* Style);
            [id(0x00002004), helpcontext(0x00000196)]
            void StyleChanged([in] IVStyle* Style);
            [id(0x00004004), helpcontext(0x00000037)]
            void BeforeStyleDelete([in] IVStyle* Style);
            [id(0x00008008), helpcontext(0x000000ff)]
            void MasterAdded([in] IVMaster* Master);
            [id(0x00002008), helpcontext(0x00000100)]
            void MasterChanged([in] IVMaster* Master);
            [id(0x00004008), helpcontext(0x00000031)]
            void BeforeMasterDelete([in] IVMaster* Master);
            [id(0x00008010), helpcontext(0x0000011c)]
            void PageAdded([in] IVPage* Page);
            [id(0x00002010), helpcontext(0x0000011e)]
            void PageChanged([in] IVPage* Page);
            [id(0x00004010), helpcontext(0x00000033)]
            void BeforePageDelete([in] IVPage* Page);
            [id(0x00008040), helpcontext(0x0000017d)]
            void ShapeAdded([in] IVShape* Shape);
            [id(0x00000385), helpcontext(0x00000035)]
            void BeforeSelectionDelete([in] IVSelection* Selection);
            [id(0x00002040), helpcontext(0x0000017e)]
            void ShapeChanged([in] IVShape* Shape);
            [id(0x00000386), helpcontext(0x00000170)]
            void SelectionAdded([in] IVSelection* Selection);
            [id(0x00004040), helpcontext(0x00000036)]
            void BeforeShapeDelete([in] IVShape* Shape);
            [id(0x00002080), helpcontext(0x000001a6)]
            void TextChanged([in] IVShape* Shape);
            [id(0x00002800), helpstring("Fires after a cell's value changes."), helpcontext(0x00000048)]
            void CellChanged([in] IVCell* Cell);
            [id(0x00001100), helpcontext(0x000000fd)]
            void MarkerEvent(
                            [in] IVApplication* app, 
                            [in] long SequenceNum, 
                            [in] BSTR ContextString);
            [id(0x00001200), helpcontext(0x00001388)]
            void NoEventsPending([in] IVApplication* app);
            [id(0x00001400), helpcontext(0x00001388)]
            void VisioIsIdle([in] IVApplication* app);
            [id(0x000000c8), helpcontext(0x00001388)]
            void MustFlushScopeBeginning([in] IVApplication* app);
            [id(0x000000c9), helpcontext(0x00001388)]
            void MustFlushScopeEnded([in] IVApplication* app);
            [id(0x00000005), helpcontext(0x00000162)]
            void RunModeEntered([in] IVDocument* doc);
            [id(0x00000006), helpcontext(0x00000080)]
            void DesignModeEntered([in] IVDocument* doc);
            [id(0x00000007), helpcontext(0x0000002f)]
            void BeforeDocumentSave([in] IVDocument* doc);
            [id(0x00000008), helpcontext(0x00000030)]
            void BeforeDocumentSaveAs([in] IVDocument* doc);
            [id(0x00003000), helpstring("Fires after a cell's formula changes."), helpcontext(0x000000b7)]
            void FormulaChanged([in] IVCell* Cell);
            [id(0x00008100), helpcontext(0x00000060)]
            void ConnectionsAdded([in] IVConnects* Connects);
            [id(0x00004100), helpcontext(0x00000061)]
            void ConnectionsDeleted([in] IVConnects* Connects);
    };

    [
      uuid(000D0B01-0000-0000-C000-000000000046),
      helpstring("Visio Windows Event Interface"),
      helpcontext(0x00001388),
      hidden
    ]
    dispinterface EWindows {
        properties:
        methods:
            [id(0x00008001), helpcontext(0x000001ca)]
            void WindowOpened([in] IVWindow* Window);
            [id(0x000002bd), helpcontext(0x00000171)]
            void SelectionChanged([in] IVWindow* Window);
            [id(0x00004001), helpcontext(0x00000038)]
            void BeforeWindowClosed([in] IVWindow* Window);
            [id(0x00001080), helpcontext(0x000001c7)]
            void WindowActivated([in] IVWindow* Window);
            [id(0x000002be), helpcontext(0x0000003a)]
            void BeforeWindowSelDelete([in] IVWindow* Window);
            [id(0x000002bf), helpcontext(0x00000039)]
            void BeforeWindowPageTurn([in] IVWindow* Window);
            [id(0x000002c0), helpcontext(0x000001cc)]
            void WindowTurnedToPage([in] IVWindow* Window);
    };

    [
      uuid(000D0B02-0000-0000-C000-000000000046),
      helpstring("Visio Window Event Interface"),
      helpcontext(0x00001388),
      hidden
    ]
    dispinterface EWindow {
        properties:
        methods:
            [id(0x000002bd), helpcontext(0x00000171)]
            void SelectionChanged([in] IVWindow* Window);
            [id(0x00004001), helpcontext(0x00000038)]
            void BeforeWindowClosed([in] IVWindow* Window);
            [id(0x00001080), helpcontext(0x000001c7)]
            void WindowActivated([in] IVWindow* Window);
            [id(0x000002be), helpcontext(0x0000003a)]
            void BeforeWindowSelDelete([in] IVWindow* Window);
            [id(0x000002bf), helpcontext(0x00000039)]
            void BeforeWindowPageTurn([in] IVWindow* Window);
            [id(0x000002c0), helpcontext(0x000001cc)]
            void WindowTurnedToPage([in] IVWindow* Window);
    };

    [
      uuid(000D0B03-0000-0000-C000-000000000046),
      helpstring("Visio Documents Event Interface"),
      helpcontext(0x00001388),
      hidden
    ]
    dispinterface EDocuments {
        properties:
        methods:
            [id(0x00000002), helpcontext(0x00000087)]
            void DocumentOpened([in] IVDocument* doc);
            [id(0x00000001), helpcontext(0x00000086)]
            void DocumentCreated([in] IVDocument* doc);
            [id(0x00000003), helpcontext(0x00000089)]
            void DocumentSaved([in] IVDocument* doc);
            [id(0x00000004), helpcontext(0x0000008a)]
            void DocumentSavedAs([in] IVDocument* doc);
            [id(0x00002002), helpcontext(0x00000085)]
            void DocumentChanged([in] IVDocument* doc);
            [id(0x00004002), helpcontext(0x0000002e)]
            void BeforeDocumentClose([in] IVDocument* doc);
            [id(0x00008004), helpcontext(0x00000195)]
            void StyleAdded([in] IVStyle* Style);
            [id(0x00002004), helpcontext(0x00000196)]
            void StyleChanged([in] IVStyle* Style);
            [id(0x00004004), helpcontext(0x00000037)]
            void BeforeStyleDelete([in] IVStyle* Style);
            [id(0x00008008), helpcontext(0x000000ff)]
            void MasterAdded([in] IVMaster* Master);
            [id(0x00002008), helpcontext(0x00000100)]
            void MasterChanged([in] IVMaster* Master);
            [id(0x00004008), helpcontext(0x00000031)]
            void BeforeMasterDelete([in] IVMaster* Master);
            [id(0x00008010), helpcontext(0x0000011c)]
            void PageAdded([in] IVPage* Page);
            [id(0x00002010), helpcontext(0x0000011e)]
            void PageChanged([in] IVPage* Page);
            [id(0x00004010), helpcontext(0x00000033)]
            void BeforePageDelete([in] IVPage* Page);
            [id(0x00008040), helpcontext(0x0000017d)]
            void ShapeAdded([in] IVShape* Shape);
            [id(0x00000385), helpcontext(0x00000035)]
            void BeforeSelectionDelete([in] IVSelection* Selection);
            [id(0x00002040), helpcontext(0x0000017e)]
            void ShapeChanged([in] IVShape* Shape);
            [id(0x00000386), helpcontext(0x00000170)]
            void SelectionAdded([in] IVSelection* Selection);
            [id(0x00004040), helpcontext(0x00000036)]
            void BeforeShapeDelete([in] IVShape* Shape);
            [id(0x00002080), helpcontext(0x000001a6)]
            void TextChanged([in] IVShape* Shape);
            [id(0x00002800), helpstring("Fires after a cell's value changes."), helpcontext(0x00000048)]
            void CellChanged([in] IVCell* Cell);
            [id(0x00000005), helpcontext(0x00000162)]
            void RunModeEntered([in] IVDocument* doc);
            [id(0x00000006), helpcontext(0x00000080)]
            void DesignModeEntered([in] IVDocument* doc);
            [id(0x00000007), helpcontext(0x0000002f)]
            void BeforeDocumentSave([in] IVDocument* doc);
            [id(0x00000008), helpcontext(0x00000030)]
            void BeforeDocumentSaveAs([in] IVDocument* doc);
            [id(0x00003000), helpstring("Fires after a cell's formula changes."), helpcontext(0x000000b7)]
            void FormulaChanged([in] IVCell* Cell);
            [id(0x00008100), helpcontext(0x00000060)]
            void ConnectionsAdded([in] IVConnects* Connects);
            [id(0x00004100), helpcontext(0x00000061)]
            void ConnectionsDeleted([in] IVConnects* Connects);
    };

    [
      uuid(000D0B05-0000-0000-C000-000000000046),
      helpstring("Visio Styles Event Interface"),
      helpcontext(0x00001388),
      hidden
    ]
    dispinterface EStyles {
        properties:
        methods:
            [id(0x00008004), helpcontext(0x00000195)]
            void StyleAdded([in] IVStyle* Style);
            [id(0x00002004), helpcontext(0x00000196)]
            void StyleChanged([in] IVStyle* Style);
            [id(0x00004004), helpcontext(0x00000037)]
            void BeforeStyleDelete([in] IVStyle* Style);
    };

    [
      uuid(000D0B06-0000-0000-C000-000000000046),
      helpstring("Visio Style Event Interface"),
      helpcontext(0x00001388),
      hidden
    ]
    dispinterface EStyle {
        properties:
        methods:
            [id(0x00002004), helpcontext(0x00000196)]
            void StyleChanged([in] IVStyle* Style);
            [id(0x00004004), helpcontext(0x00000037)]
            void BeforeStyleDelete([in] IVStyle* Style);
    };

    [
      uuid(000D0B07-0000-0000-C000-000000000046),
      helpstring("Visio Masters Event Interface"),
      helpcontext(0x00001388),
      hidden
    ]
    dispinterface EMasters {
        properties:
        methods:
            [id(0x00008008), helpcontext(0x000000ff)]
            void MasterAdded([in] IVMaster* Master);
            [id(0x00002008), helpcontext(0x00000100)]
            void MasterChanged([in] IVMaster* Master);
            [id(0x00004008), helpcontext(0x00000031)]
            void BeforeMasterDelete([in] IVMaster* Master);
            [id(0x00008040), helpcontext(0x0000017d)]
            void ShapeAdded([in] IVShape* Shape);
            [id(0x00000385), helpcontext(0x00000035)]
            void BeforeSelectionDelete([in] IVSelection* Selection);
            [id(0x00002040), helpcontext(0x0000017e)]
            void ShapeChanged([in] IVShape* Shape);
            [id(0x00000386), helpcontext(0x00000170)]
            void SelectionAdded([in] IVSelection* Selection);
            [id(0x00004040), helpcontext(0x00000036)]
            void BeforeShapeDelete([in] IVShape* Shape);
            [id(0x00002080), helpcontext(0x000001a6)]
            void TextChanged([in] IVShape* Shape);
            [id(0x00002800), helpstring("Fires after a cell's value changes."), helpcontext(0x00000048)]
            void CellChanged([in] IVCell* Cell);
            [id(0x00003000), helpstring("Fires after a cell's formula changes."), helpcontext(0x000000b7)]
            void FormulaChanged([in] IVCell* Cell);
            [id(0x00008100), helpcontext(0x00000060)]
            void ConnectionsAdded([in] IVConnects* Connects);
            [id(0x00004100), helpcontext(0x00000061)]
            void ConnectionsDeleted([in] IVConnects* Connects);
    };

    [
      uuid(000D0B08-0000-0000-C000-000000000046),
      helpstring("Visio Master Event Interface"),
      helpcontext(0x00001388),
      hidden
    ]
    dispinterface EMaster {
        properties:
        methods:
            [id(0x00002008), helpcontext(0x00000100)]
            void MasterChanged([in] IVMaster* Master);
            [id(0x00004008), helpcontext(0x00000031)]
            void BeforeMasterDelete([in] IVMaster* Master);
            [id(0x00008040), helpcontext(0x0000017d)]
            void ShapeAdded([in] IVShape* Shape);
            [id(0x00000385), helpcontext(0x00000035)]
            void BeforeSelectionDelete([in] IVSelection* Selection);
            [id(0x00002040), helpcontext(0x0000017e)]
            void ShapeChanged([in] IVShape* Shape);
            [id(0x00000386), helpcontext(0x00000170)]
            void SelectionAdded([in] IVSelection* Selection);
            [id(0x00004040), helpcontext(0x00000036)]
            void BeforeShapeDelete([in] IVShape* Shape);
            [id(0x00002080), helpcontext(0x000001a6)]
            void TextChanged([in] IVShape* Shape);
            [id(0x00002800), helpstring("Fires after a cell's value changes."), helpcontext(0x00000048)]
            void CellChanged([in] IVCell* Cell);
            [id(0x00003000), helpstring("Fires after a cell's formula changes."), helpcontext(0x000000b7)]
            void FormulaChanged([in] IVCell* Cell);
            [id(0x00008100), helpcontext(0x00000060)]
            void ConnectionsAdded([in] IVConnects* Connects);
            [id(0x00004100), helpcontext(0x00000061)]
            void ConnectionsDeleted([in] IVConnects* Connects);
    };

    [
      uuid(000D0B09-0000-0000-C000-000000000046),
      helpstring("Visio Pages Event Interface"),
      helpcontext(0x00001388),
      hidden
    ]
    dispinterface EPages {
        properties:
        methods:
            [id(0x00008010), helpcontext(0x0000011c)]
            void PageAdded([in] IVPage* Page);
            [id(0x00002010), helpcontext(0x0000011e)]
            void PageChanged([in] IVPage* Page);
            [id(0x00004010), helpcontext(0x00000033)]
            void BeforePageDelete([in] IVPage* Page);
            [id(0x00008040), helpcontext(0x0000017d)]
            void ShapeAdded([in] IVShape* Shape);
            [id(0x00000385), helpcontext(0x00000035)]
            void BeforeSelectionDelete([in] IVSelection* Selection);
            [id(0x00002040), helpcontext(0x0000017e)]
            void ShapeChanged([in] IVShape* Shape);
            [id(0x00000386), helpcontext(0x00000170)]
            void SelectionAdded([in] IVSelection* Selection);
            [id(0x00004040), helpcontext(0x00000036)]
            void BeforeShapeDelete([in] IVShape* Shape);
            [id(0x00002080), helpcontext(0x000001a6)]
            void TextChanged([in] IVShape* Shape);
            [id(0x00002800), helpstring("Fires after a cell's value changes."), helpcontext(0x00000048)]
            void CellChanged([in] IVCell* Cell);
            [id(0x00003000), helpstring("Fires after a cell's formula changes."), helpcontext(0x000000b7)]
            void FormulaChanged([in] IVCell* Cell);
            [id(0x00008100), helpcontext(0x00000060)]
            void ConnectionsAdded([in] IVConnects* Connects);
            [id(0x00004100), helpcontext(0x00000061)]
            void ConnectionsDeleted([in] IVConnects* Connects);
    };

    [
      uuid(000D0B0A-0000-0000-C000-000000000046),
      helpstring("Visio Page Event Interface"),
      helpcontext(0x00001388),
      hidden
    ]
    dispinterface EPage {
        properties:
        methods:
            [id(0x00002010), helpcontext(0x0000011e)]
            void PageChanged([in] IVPage* Page);
            [id(0x00004010), helpcontext(0x00000033)]
            void BeforePageDelete([in] IVPage* Page);
            [id(0x00008040), helpcontext(0x0000017d)]
            void ShapeAdded([in] IVShape* Shape);
            [id(0x00000385), helpcontext(0x00000035)]
            void BeforeSelectionDelete([in] IVSelection* Selection);
            [id(0x00002040), helpcontext(0x0000017e)]
            void ShapeChanged([in] IVShape* Shape);
            [id(0x00000386), helpcontext(0x00000170)]
            void SelectionAdded([in] IVSelection* Selection);
            [id(0x00004040), helpcontext(0x00000036)]
            void BeforeShapeDelete([in] IVShape* Shape);
            [id(0x00002080), helpcontext(0x000001a6)]
            void TextChanged([in] IVShape* Shape);
            [id(0x00002800), helpstring("Fires after a cell's value changes."), helpcontext(0x00000048)]
            void CellChanged([in] IVCell* Cell);
            [id(0x00003000), helpstring("Fires after a cell's formula changes."), helpcontext(0x000000b7)]
            void FormulaChanged([in] IVCell* Cell);
            [id(0x00008100), helpcontext(0x00000060)]
            void ConnectionsAdded([in] IVConnects* Connects);
            [id(0x00004100), helpcontext(0x00000061)]
            void ConnectionsDeleted([in] IVConnects* Connects);
    };

    [
      uuid(000D0B0B-0000-0000-C000-000000000046),
      helpstring("Visio Shape Event Interface"),
      helpcontext(0x00001388),
      hidden
    ]
    dispinterface EShape {
        properties:
        methods:
            [id(0x00002800), helpstring("Fires after a cell's value changes."), helpcontext(0x00000048)]
            void CellChanged([in] IVCell* Cell);
            [id(0x00008040), helpcontext(0x0000017d)]
            void ShapeAdded([in] IVShape* Shape);
            [id(0x00000385), helpcontext(0x00000035)]
            void BeforeSelectionDelete([in] IVSelection* Selection);
            [id(0x00002040), helpcontext(0x0000017e)]
            void ShapeChanged([in] IVShape* Shape);
            [id(0x00000386), helpcontext(0x00000170)]
            void SelectionAdded([in] IVSelection* Selection);
            [id(0x00004040), helpcontext(0x00000036)]
            void BeforeShapeDelete([in] IVShape* Shape);
            [id(0x00002080), helpcontext(0x000001a6)]
            void TextChanged([in] IVShape* Shape);
            [id(0x00003000), helpstring("Fires after a cell's formula changes."), helpcontext(0x000000b7)]
            void FormulaChanged([in] IVCell* Cell);
    };

    [
      uuid(000D0B0C-0000-0000-C000-000000000046),
      helpstring("Visio Characters Event Interface"),
      helpcontext(0x00001388),
      hidden
    ]
    dispinterface ECharacters {
        properties:
        methods:
            [id(0x00002080), helpcontext(0x000001a6)]
            void TextChanged([in] IVShape* Shape);
    };

    [
      uuid(000D0B0D-0000-0000-C000-000000000046),
      helpstring("Visio Cell Event Interface"),
      helpcontext(0x00001388),
      hidden
    ]
    dispinterface ECell {
        properties:
        methods:
            [id(0x00002800), helpstring("Fires after a cell's value changes."), helpcontext(0x00000048)]
            void CellChanged([in] IVCell* Cell);
            [id(0x00003000), helpstring("Fires after a cell's formula changes."), helpcontext(0x000000b7)]
            void FormulaChanged([in] IVCell* Cell);
    };

    [
      uuid(00021A20-0000-0000-C000-000000000046),
      helpcontext(0x00001388)
    ]
    coclass Application {
        [default] interface IVApplication;
        [default, source] dispinterface EApplication;
    };

    [
      uuid(00021A21-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Document {
        [default] interface IVDocument;
        [default, source] dispinterface EDocument;
    };

    [
      uuid(000D0A00-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Documents {
        [default] interface IVDocuments;
        [default, source] dispinterface EDocuments;
    };

    [
      uuid(000D0A01-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Styles {
        [default] interface IVStyles;
        [default, source] dispinterface EStyles;
    };

    [
      uuid(000D0A02-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Style {
        [default] interface IVStyle;
        [default, source] dispinterface EStyle;
    };

    [
      uuid(000D0A03-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Masters {
        [default] interface IVMasters;
        [default, source] dispinterface EMasters;
    };

    [
      uuid(000D0A04-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Master {
        [default] interface IVMaster;
        [default, source] dispinterface EMaster;
    };

    [
      uuid(000D0A05-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Pages {
        [default] interface IVPages;
        [default, source] dispinterface EPages;
    };

    [
      uuid(000D0A06-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Page {
        [default] interface IVPage;
        [default, source] dispinterface EPage;
    };

    [
      uuid(000D0A07-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Layers {
        [default] interface IVLayers;
    };

    [
      uuid(000D0A08-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Layer {
        [default] interface IVLayer;
    };

    [
      uuid(000D0A09-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Shapes {
        [default] interface IVShapes;
    };

    [
      uuid(000D0A0A-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Shape {
        [default] interface IVShape;
        [default, source] dispinterface EShape;
    };

    [
      uuid(000D0A0B-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Windows {
        [default] interface IVWindows;
        [default, source] dispinterface EWindows;
    };

    [
      uuid(000D0A0C-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Window {
        [default] interface IVWindow;
        [default, source] dispinterface EWindow;
    };

    [
      uuid(000D0A0D-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Cell {
        [default] interface IVCell;
        [default, source] dispinterface ECell;
    };

    [
      uuid(000D0A0E-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Selection {
        [default] interface IVSelection;
    };

    [
      uuid(000D0A0F-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Font {
        [default] interface IVFont;
    };

    [
      uuid(000D0A10-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Fonts {
        [default] interface IVFonts;
    };

    [
      uuid(000D0A11-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Color {
        [default] interface IVColor;
    };

    [
      uuid(000D0A12-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Colors {
        [default] interface IVColors;
    };

    [
      uuid(000D0A13-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Addon {
        [default] interface IVAddon;
    };

    [
      uuid(000D0A14-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Addons {
        [default] interface IVAddons;
    };

    [
      uuid(000D0A15-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Event {
        [default] interface IVEvent;
    };

    [
      uuid(000D0A16-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass EventList {
        [default] interface IVEventList;
    };

    [
      uuid(000D0A17-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Characters {
        [default] interface IVCharacters;
        [default, source] dispinterface ECharacters;
    };

    [
      uuid(000D0A18-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Connect {
        [default] interface IVConnect;
    };

    [
      uuid(000D0A19-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Connects {
        [default] interface IVConnects;
    };

    [
      uuid(000D0A1A-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      appobject,
      noncreatable
    ]
    coclass Global {
        [default] interface IVGlobal;
    };

    [
      odl,
      uuid(000D0212-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVMenuItem : IDispatch {
        [id(0x60020000), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x60020001), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall Default([out, retval] BSTR* pCaption);
        [id(0x60020002), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] long* plIndex);
        [id(0x60020003), propget, helpcontext(0x00000104)]
        HRESULT _stdcall MenuItems([out, retval] IVMenuItems** lplpVMenuItems);
        [id(0x60020004), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVMenuItems** lplpVMenuItems);
        [id(0x60020005), propput, helpcontext(0x00000059)]
        HRESULT _stdcall CmdNum([in] short pwCmd);
        [id(0x60020005), propget, helpcontext(0x00000059)]
        HRESULT _stdcall CmdNum([out, retval] short* pwCmd);
        [id(0x60020007), propput, helpcontext(0x000000cb)]
        HRESULT _stdcall HelpContextID([in] short pHelpContextID);
        [id(0x60020007), propget, helpcontext(0x000000cb)]
        HRESULT _stdcall HelpContextID([out, retval] short* pHelpContextID);
        [id(0x60020009), propget, helpcontext(0x000000e5)]
        HRESULT _stdcall IsSeparator([out, retval] short* pIsSeparator);
        [id(0x6002000a), propget, helpcontext(0x000000e3)]
        HRESULT _stdcall IsHierarchical([out, retval] short* pIsHierarchical);
        [id(00000000), propput, helpcontext(0x00000046)]
        HRESULT _stdcall Caption([in] BSTR pCaption);
        [id(00000000), propget, helpcontext(0x00000046)]
        HRESULT _stdcall Caption([out, retval] BSTR* pCaption);
        [id(0x6002000d), propput, helpcontext(0x00000004)]
        HRESULT _stdcall ActionText([in] BSTR pActionText);
        [id(0x6002000d), propget, helpcontext(0x00000004)]
        HRESULT _stdcall ActionText([out, retval] BSTR* pActionText);
        [id(0x6002000f), propput, helpcontext(0x00000107)]
        HRESULT _stdcall MiniHelp([in] BSTR pMiniHelp);
        [id(0x6002000f), propget, helpcontext(0x00000107)]
        HRESULT _stdcall MiniHelp([out, retval] BSTR* pMiniHelp);
        [id(0x60020011), propput, helpcontext(0x00000014)]
        HRESULT _stdcall AddOnName([in] BSTR pAddOnName);
        [id(0x60020011), propget, helpcontext(0x00000014)]
        HRESULT _stdcall AddOnName([out, retval] BSTR* pAddOnName);
        [id(0x60020013), propput, helpcontext(0x00000013)]
        HRESULT _stdcall AddOnArgs([in] BSTR pAddOnArgs);
        [id(0x60020013), propget, helpcontext(0x00000013)]
        HRESULT _stdcall AddOnArgs([out, retval] BSTR* pAddOnArgs);
        [id(0x60020015), propput, helpcontext(0x000000cc)]
        HRESULT _stdcall HelpFile([in] BSTR pHelpFile);
        [id(0x60020015), propget, helpcontext(0x000000cc)]
        HRESULT _stdcall HelpFile([out, retval] BSTR* pHelpFile);
    };

    [
      odl,
      uuid(000D0213-0000-0000-C000-000000000046),
      version(4.6),
      hidden,
      restricted
    ]
    interface IEnumVMenuItem : IUnknown {
        HRESULT _stdcall Next(
                        [in] long celt, 
                        [out] IVMenuItem** rgelt, 
                        [out] long* pceltFetched);
        HRESULT _stdcall Skip([in] long celt);
        HRESULT _stdcall Reset();
        HRESULT _stdcall Clone([out] IEnumVMenuItem** ppenm);
    };

    [
      odl,
      uuid(000D0216-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVMenuItems : IDispatch {
        [id(0xfffffffc), propget, restricted, helpcontext(0x00001388)]
        HRESULT _stdcall _NewEnum([out, retval] IUnknown** lplpIEnumVMenuItem);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] long lIndex, 
                        [out, retval] IVMenuItem** lplpMenuItem);
        [id(0x60020002), helpcontext(0x0000000a)]
        HRESULT _stdcall Add([out, retval] IVMenuItem** lplpMenuItem);
        [id(0x60020003), helpcontext(0x0000000c)]
        HRESULT _stdcall AddAt(
                        [in] long lIndex, 
                        [out, retval] IVMenuItem** lplpMenuItem);
        [id(0x60020004), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] long* lplCount);
        [id(0x60020005), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVMenu** lplpVMenu);
    };

    [
      odl,
      uuid(000D0222-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVMenu : IDispatch {
        [id(0x60020000), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x60020001), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall Default([out, retval] BSTR* pCaption);
        [id(00000000), propput, helpcontext(0x00000046)]
        HRESULT _stdcall Caption([in] BSTR pCaption);
        [id(00000000), propget, helpcontext(0x00000046)]
        HRESULT _stdcall Caption([out, retval] BSTR* pCaption);
        [id(0x60020004), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] long* plIndex);
        [id(0x60020005), propput, helpcontext(0x00000103)]
        HRESULT _stdcall MDIWindowMenu([in] short pMDIWindowMenu);
        [id(0x60020005), propget, helpcontext(0x00000103)]
        HRESULT _stdcall MDIWindowMenu([out, retval] short* pMDIWindowMenu);
        [id(0x60020007), propget, helpcontext(0x00000104)]
        HRESULT _stdcall MenuItems([out, retval] IVMenuItems** lplpVMenuItems);
        [id(0x60020008), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVMenus** lplpVMenus);
    };

    [
      odl,
      uuid(000D0223-0000-0000-C000-000000000046),
      version(4.6),
      hidden,
      restricted
    ]
    interface IEnumVMenu : IUnknown {
        HRESULT _stdcall Next(
                        [in] long celt, 
                        [out] IVMenu** rgelt, 
                        [out] long* pceltFetched);
        HRESULT _stdcall Skip([in] long celt);
        HRESULT _stdcall Reset();
        HRESULT _stdcall Clone([out] IEnumVMenu** ppenm);
    };

    [
      odl,
      uuid(000D0225-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVMenus : IDispatch {
        [id(0xfffffffc), propget, restricted, helpcontext(0x00001388)]
        HRESULT _stdcall _NewEnum([out, retval] IUnknown** lplpIEnumVMenu);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] long lIndex, 
                        [out, retval] IVMenu** lplpMenu);
        [id(0x60020002), helpcontext(0x0000000a)]
        HRESULT _stdcall Add([out, retval] IVMenu** lplpMenu);
        [id(0x60020003), helpcontext(0x0000000c)]
        HRESULT _stdcall AddAt(
                        [in] long lIndex, 
                        [out, retval] IVMenu** lplpMenu);
        [id(0x60020004), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] long* lplCount);
        [id(0x60020005), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVMenuSet** lplpVMenuSet);
    };

    [
      odl,
      uuid(000D0232-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVMenuSet : IDispatch {
        [id(0x60020000), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x60020001), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall Default([out, retval] BSTR* pCaption);
        [id(00000000), propput, helpcontext(0x00000046)]
        HRESULT _stdcall Caption([in] BSTR pCaption);
        [id(00000000), propget, helpcontext(0x00000046)]
        HRESULT _stdcall Caption([out, retval] BSTR* pCaption);
        [id(0x60020004), propget, helpcontext(0x0000017a)]
        HRESULT _stdcall SetID([out, retval] long* plSetID);
        [id(0x60020005), propget, helpcontext(0x00000105)]
        HRESULT _stdcall Menus([out, retval] IVMenus** lplpVMenus);
        [id(0x60020006), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVMenuSets** lplpVMenuSets);
    };

    [
      odl,
      uuid(000D0233-0000-0000-C000-000000000046),
      version(4.6),
      hidden,
      restricted
    ]
    interface IEnumVMenuSet : IUnknown {
        HRESULT _stdcall Next(
                        [in] long celt, 
                        [out] IVMenuSet** rgelt, 
                        [out] long* pceltFetched);
        HRESULT _stdcall Skip([in] long celt);
        HRESULT _stdcall Reset();
        HRESULT _stdcall Clone([out] IEnumVMenuSet** ppenm);
    };

    [
      odl,
      uuid(000D0236-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVMenuSets : IDispatch {
        [id(0xfffffffc), propget, restricted, helpcontext(0x00001388)]
        HRESULT _stdcall _NewEnum([out, retval] IUnknown** lplpIEnumVMenuSet);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] long lIndex, 
                        [out, retval] IVMenuSet** lplpMenuSet);
        [id(0x60020002), propget, helpcontext(0x000000e9)]
        HRESULT _stdcall ItemAtID(
                        [in] long lID, 
                        [out, retval] IVMenuSet** lplpMenuSet);
        [id(0x60020003), helpcontext(0x0000000a)]
        HRESULT _stdcall Add([out, retval] IVMenuSet** lplpMenuSet);
        [id(0x60020004), helpcontext(0x0000000c)]
        HRESULT _stdcall AddAtID(
                        [in] long lID, 
                        [out, retval] IVMenuSet** lplpMenuSet);
        [id(0x60020005), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] long* lplCount);
        [id(0x60020006), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVUIObject** lplpVUIObject);
    };

    [
      odl,
      uuid(000D0242-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVToolbarItem : IDispatch {
        [id(0x60020000), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x60020001), helpcontext(0x000000d1)]
        HRESULT _stdcall IconFileName([in] BSTR IconFileName);
        [id(0x60020002), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall Default([out, retval] BSTR* pActionText);
        [id(0x60020003), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] long* plIndex);
        [id(0x60020004), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVToolbarItems** lplpVToolbarItems);
        [id(0x60020005), propput, helpcontext(0x00000059)]
        HRESULT _stdcall CmdNum([in] short pwCmd);
        [id(0x60020005), propget, helpcontext(0x00000059)]
        HRESULT _stdcall CmdNum([out, retval] short* pwCmd);
        [id(0x60020007), propput, helpcontext(0x000000cb)]
        HRESULT _stdcall HelpContextID([in] short pHelpContextID);
        [id(0x60020007), propget, helpcontext(0x000000cb)]
        HRESULT _stdcall HelpContextID([out, retval] short* pHelpContextID);
        [id(00000000), propput, helpcontext(0x00000004)]
        HRESULT _stdcall ActionText([in] BSTR pActionText);
        [id(00000000), propget, helpcontext(0x00000004)]
        HRESULT _stdcall ActionText([out, retval] BSTR* pActionText);
        [id(0x6002000b), propput, helpcontext(0x00000014)]
        HRESULT _stdcall AddOnName([in] BSTR pAddOnName);
        [id(0x6002000b), propget, helpcontext(0x00000014)]
        HRESULT _stdcall AddOnName([out, retval] BSTR* pAddOnName);
        [id(0x6002000d), propput, helpcontext(0x00000013)]
        HRESULT _stdcall AddOnArgs([in] BSTR pAddOnArgs);
        [id(0x6002000d), propget, helpcontext(0x00000013)]
        HRESULT _stdcall AddOnArgs([out, retval] BSTR* pAddOnArgs);
        [id(0x6002000f), propput, helpcontext(0x000000cc)]
        HRESULT _stdcall HelpFile([in] BSTR pHelpFile);
        [id(0x6002000f), propget, helpcontext(0x000000cc)]
        HRESULT _stdcall HelpFile([out, retval] BSTR* pHelpFile);
        [id(0x60020011), propput, helpcontext(0x0000005b)]
        HRESULT _stdcall CntrlType([in] short pwCntrlType);
        [id(0x60020011), propget, helpcontext(0x0000005b)]
        HRESULT _stdcall CntrlType([out, retval] short* pwCntrlType);
        [id(0x60020013), propput, helpcontext(0x0000005a)]
        HRESULT _stdcall CntrlID([in] short pwCntrlID);
        [id(0x60020013), propget, helpcontext(0x0000005a)]
        HRESULT _stdcall CntrlID([out, retval] short* pwCntrlID);
        [id(0x60020015), propput, helpcontext(0x000001b6)]
        HRESULT _stdcall TypeSpecific1([in] short pwTypeSpecific);
        [id(0x60020015), propget, helpcontext(0x000001b6)]
        HRESULT _stdcall TypeSpecific1([out, retval] short* pwTypeSpecific);
        [id(0x60020017), propput, helpcontext(0x0000013e)]
        HRESULT _stdcall Priority([in] short pwPriority);
        [id(0x60020017), propget, helpcontext(0x0000013e)]
        HRESULT _stdcall Priority([out, retval] short* pwPriority);
        [id(0x60020019), propput, helpcontext(0x0000018c)]
        HRESULT _stdcall Spacing([in] short pwSpacing);
        [id(0x60020019), propget, helpcontext(0x0000018c)]
        HRESULT _stdcall Spacing([out, retval] short* pwSpacing);
        [id(0x6002001b), propput, helpcontext(0x000001b7)]
        HRESULT _stdcall TypeSpecific2([in] short pwTypeSpecific);
        [id(0x6002001b), propget, helpcontext(0x000001b7)]
        HRESULT _stdcall TypeSpecific2([out, retval] short* pwTypeSpecific);
    };

    [
      odl,
      uuid(000D0243-0000-0000-C000-000000000046),
      version(4.6),
      hidden,
      restricted
    ]
    interface IEnumVToolbarItem : IUnknown {
        HRESULT _stdcall Next(
                        [in] long celt, 
                        [out] IVToolbarItem** rgelt, 
                        [out] long* pceltFetched);
        HRESULT _stdcall Skip([in] long celt);
        HRESULT _stdcall Reset();
        HRESULT _stdcall Clone([out] IEnumVToolbarItem** ppenm);
    };

    [
      odl,
      uuid(000D0245-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVToolbarItems : IDispatch {
        [id(0xfffffffc), propget, restricted, helpcontext(0x00001388)]
        HRESULT _stdcall _NewEnum([out, retval] IUnknown** lplpIEnumVToolbarItem);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] long lIndex, 
                        [out, retval] IVToolbarItem** lplpToolbarItem);
        [id(0x60020002), helpcontext(0x0000000a)]
        HRESULT _stdcall Add([out, retval] IVToolbarItem** lplpToolbarItem);
        [id(0x60020003), helpcontext(0x0000000c)]
        HRESULT _stdcall AddAt(
                        [in] long lIndex, 
                        [out, retval] IVToolbarItem** lplpToolbarItem);
        [id(0x60020004), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] long* lplCount);
        [id(0x60020005), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVToolbar** lplpVToolbar);
    };

    [
      odl,
      uuid(000D0252-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVToolbar : IDispatch {
        [id(0x60020000), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x60020001), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall Default([out, retval] BSTR* pCaption);
        [id(00000000), propput, helpcontext(0x00000046)]
        HRESULT _stdcall Caption([in] BSTR pCaption);
        [id(00000000), propget, helpcontext(0x00000046)]
        HRESULT _stdcall Caption([out, retval] BSTR* pCaption);
        [id(0x60020004), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] long* plIndex);
        [id(0x60020005), propget, helpcontext(0x000001ab)]
        HRESULT _stdcall ToolbarItems([out, retval] IVToolbarItems** lplpVToolbarItems);
        [id(0x60020006), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVToolbars** lplpVToolbars);
    };

    [
      odl,
      uuid(000D0253-0000-0000-C000-000000000046),
      version(4.6),
      hidden,
      restricted
    ]
    interface IEnumVToolbar : IUnknown {
        HRESULT _stdcall Next(
                        [in] long celt, 
                        [out] IVToolbar** rgelt, 
                        [out] long* pceltFetched);
        HRESULT _stdcall Skip([in] long celt);
        HRESULT _stdcall Reset();
        HRESULT _stdcall Clone([out] IEnumVToolbar** ppenm);
    };

    [
      odl,
      uuid(000D0255-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVToolbars : IDispatch {
        [id(0xfffffffc), propget, restricted, helpcontext(0x00001388)]
        HRESULT _stdcall _NewEnum([out, retval] IUnknown** lplpIEnumVToolbar);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] long lIndex, 
                        [out, retval] IVToolbar** lplpToolbar);
        [id(0x60020002), helpcontext(0x0000000a)]
        HRESULT _stdcall Add([out, retval] IVToolbar** lplpToolbar);
        [id(0x60020003), helpcontext(0x0000000c)]
        HRESULT _stdcall AddAt(
                        [in] long lIndex, 
                        [out, retval] IVToolbar** lplpToolbar);
        [id(0x60020004), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] long* lplCount);
        [id(0x60020005), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVToolbarSet** lplpVToolbarSet);
    };

    [
      odl,
      uuid(000D0262-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVToolbarSet : IDispatch {
        [id(0x60020000), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x60020001), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall Default([out, retval] BSTR* pCaption);
        [id(00000000), propput, helpcontext(0x00000046)]
        HRESULT _stdcall Caption([in] BSTR pCaption);
        [id(00000000), propget, helpcontext(0x00000046)]
        HRESULT _stdcall Caption([out, retval] BSTR* pCaption);
        [id(0x60020004), propget, helpcontext(0x0000017a)]
        HRESULT _stdcall SetID([out, retval] long* plSetID);
        [id(0x60020005), propget, helpcontext(0x000001ac)]
        HRESULT _stdcall Toolbars([out, retval] IVToolbars** lplpVToolbars);
        [id(0x60020006), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVToolbarSets** lplpVToolbarSets);
    };

    [
      odl,
      uuid(000D0263-0000-0000-C000-000000000046),
      version(4.6),
      hidden,
      restricted
    ]
    interface IEnumVToolbarSet : IUnknown {
        HRESULT _stdcall Next(
                        [in] long celt, 
                        [out] IVToolbarSet** rgelt, 
                        [out] long* pceltFetched);
        HRESULT _stdcall Skip([in] long celt);
        HRESULT _stdcall Reset();
        HRESULT _stdcall Clone([out] IEnumVToolbarSet** ppenm);
    };

    [
      odl,
      uuid(000D0266-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVToolbarSets : IDispatch {
        [id(0xfffffffc), propget, restricted, helpcontext(0x00001388)]
        HRESULT _stdcall _NewEnum([out, retval] IUnknown** lplpIEnumVToolbarSet);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] long lIndex, 
                        [out, retval] IVToolbarSet** lplpToolbarSet);
        [id(0x60020002), propget, helpcontext(0x000000e9)]
        HRESULT _stdcall ItemAtID(
                        [in] long lID, 
                        [out, retval] IVToolbarSet** lplpToolbarSet);
        [id(0x60020003), helpcontext(0x0000000a)]
        HRESULT _stdcall Add([out, retval] IVToolbarSet** lplpToolbarSet);
        [id(0x60020004), helpcontext(0x0000000c)]
        HRESULT _stdcall AddAtID(
                        [in] long lID, 
                        [out, retval] IVToolbarSet** lplpToolbarSet);
        [id(0x60020005), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] long* lplCount);
        [id(0x60020006), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVUIObject** lplpVUIObject);
    };

    [
      odl,
      uuid(000D0272-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVStatusBarItem : IDispatch {
        [id(0x60020000), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x60020001), helpcontext(0x000000d1)]
        HRESULT _stdcall IconFileName([in] BSTR IconFileName);
        [id(0x60020002), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall Default([out, retval] BSTR* pActionText);
        [id(0x60020003), propget, helpcontext(0x000000da)]
        HRESULT _stdcall Index([out, retval] long* plIndex);
        [id(0x60020004), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVStatusBarItems** lplpVStatusBarItems);
        [id(0x60020005), propput, helpcontext(0x00000059)]
        HRESULT _stdcall CmdNum([in] short pwCmd);
        [id(0x60020005), propget, helpcontext(0x00000059)]
        HRESULT _stdcall CmdNum([out, retval] short* pwCmd);
        [id(0x60020007), propput, helpcontext(0x000000cb)]
        HRESULT _stdcall HelpContextID([in] short pHelpContextID);
        [id(0x60020007), propget, helpcontext(0x000000cb)]
        HRESULT _stdcall HelpContextID([out, retval] short* pHelpContextID);
        [id(00000000), propput, helpcontext(0x00000004)]
        HRESULT _stdcall ActionText([in] BSTR pActionText);
        [id(00000000), propget, helpcontext(0x00000004)]
        HRESULT _stdcall ActionText([out, retval] BSTR* pActionText);
        [id(0x6002000b), propput, helpcontext(0x00000014)]
        HRESULT _stdcall AddOnName([in] BSTR pAddOnName);
        [id(0x6002000b), propget, helpcontext(0x00000014)]
        HRESULT _stdcall AddOnName([out, retval] BSTR* pAddOnName);
        [id(0x6002000d), propput, helpcontext(0x00000013)]
        HRESULT _stdcall AddOnArgs([in] BSTR pAddOnArgs);
        [id(0x6002000d), propget, helpcontext(0x00000013)]
        HRESULT _stdcall AddOnArgs([out, retval] BSTR* pAddOnArgs);
        [id(0x6002000f), propput, helpcontext(0x000000cc)]
        HRESULT _stdcall HelpFile([in] BSTR pHelpFile);
        [id(0x6002000f), propget, helpcontext(0x000000cc)]
        HRESULT _stdcall HelpFile([out, retval] BSTR* pHelpFile);
        [id(0x60020011), propput, helpcontext(0x0000005b)]
        HRESULT _stdcall CntrlType([in] short pwCntrlType);
        [id(0x60020011), propget, helpcontext(0x0000005b)]
        HRESULT _stdcall CntrlType([out, retval] short* pwCntrlType);
        [id(0x60020013), propput, helpcontext(0x0000005a)]
        HRESULT _stdcall CntrlID([in] short pwCntrlID);
        [id(0x60020013), propget, helpcontext(0x0000005a)]
        HRESULT _stdcall CntrlID([out, retval] short* pwCntrlID);
        [id(0x60020015), propput, helpcontext(0x000001b6)]
        HRESULT _stdcall TypeSpecific1([in] short pwTypeSpecific);
        [id(0x60020015), propget, helpcontext(0x000001b6)]
        HRESULT _stdcall TypeSpecific1([out, retval] short* pwTypeSpecific);
        [id(0x60020017), propput, helpcontext(0x0000013e)]
        HRESULT _stdcall Priority([in] short pwPriority);
        [id(0x60020017), propget, helpcontext(0x0000013e)]
        HRESULT _stdcall Priority([out, retval] short* pwPriority);
        [id(0x60020019), propput, helpcontext(0x0000018c)]
        HRESULT _stdcall Spacing([in] short pwSpacing);
        [id(0x60020019), propget, helpcontext(0x0000018c)]
        HRESULT _stdcall Spacing([out, retval] short* pwSpacing);
        [id(0x6002001b), propput, helpcontext(0x000001b7)]
        HRESULT _stdcall TypeSpecific2([in] short pwTypeSpecific);
        [id(0x6002001b), propget, helpcontext(0x000001b7)]
        HRESULT _stdcall TypeSpecific2([out, retval] short* pwTypeSpecific);
    };

    [
      odl,
      uuid(000D0273-0000-0000-C000-000000000046),
      version(4.6),
      hidden,
      restricted
    ]
    interface IEnumVStatusBarItem : IUnknown {
        HRESULT _stdcall Next(
                        [in] long celt, 
                        [out] IVStatusBarItem** rgelt, 
                        [out] long* pceltFetched);
        HRESULT _stdcall Skip([in] long celt);
        HRESULT _stdcall Reset();
        HRESULT _stdcall Clone([out] IEnumVStatusBarItem** ppenm);
    };

    [
      odl,
      uuid(000D0275-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVStatusBarItems : IDispatch {
        [id(0xfffffffc), propget, restricted, helpcontext(0x00001388)]
        HRESULT _stdcall _NewEnum([out, retval] IUnknown** lplpIEnumVStatusBar);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] long lIndex, 
                        [out, retval] IVStatusBarItem** lplpStatusBar);
        [id(0x60020002), helpcontext(0x0000000a)]
        HRESULT _stdcall Add([out, retval] IVStatusBarItem** lplpStatusBarItem);
        [id(0x60020003), helpcontext(0x0000000c)]
        HRESULT _stdcall AddAt(
                        [in] long lIndex, 
                        [out, retval] IVStatusBarItem** lplpStatusBarItem);
        [id(0x60020004), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] long* lplCount);
        [id(0x60020005), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVStatusBar** lplpVStatusBar);
    };

    [
      odl,
      uuid(000D0282-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVStatusBar : IDispatch {
        [id(0x60020000), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x60020001), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall Default([out, retval] BSTR* pCaption);
        [id(00000000), propput, helpcontext(0x00000046)]
        HRESULT _stdcall Caption([in] BSTR pCaption);
        [id(00000000), propget, helpcontext(0x00000046)]
        HRESULT _stdcall Caption([out, retval] BSTR* pCaption);
        [id(0x60020004), propget, helpcontext(0x0000017a)]
        HRESULT _stdcall SetID([out, retval] long* plSetID);
        [id(0x60020005), propget, helpcontext(0x00000190)]
        HRESULT _stdcall StatusBarItems([out, retval] IVStatusBarItems** lplpVStatusBarItems);
        [id(0x60020006), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVStatusBars** lplpVStatusBars);
    };

    [
      odl,
      uuid(000D0283-0000-0000-C000-000000000046),
      version(4.6),
      hidden,
      restricted
    ]
    interface IEnumVStatusBar : IUnknown {
        HRESULT _stdcall Next(
                        [in] long celt, 
                        [out] IVStatusBar** rgelt, 
                        [out] long* pceltFetched);
        HRESULT _stdcall Skip([in] long celt);
        HRESULT _stdcall Reset();
        HRESULT _stdcall Clone([out] IEnumVStatusBar** ppenm);
    };

    [
      odl,
      uuid(000D0285-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVStatusBars : IDispatch {
        [id(0xfffffffc), propget, restricted, helpcontext(0x00001388)]
        HRESULT _stdcall _NewEnum([out, retval] IUnknown** lplpIEnumVStatusBar);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] long lIndex, 
                        [out, retval] IVStatusBar** lplpStatusBar);
        [id(0x60020002), propget, helpcontext(0x000000e9)]
        HRESULT _stdcall ItemAtID(
                        [in] long lID, 
                        [out, retval] IVStatusBar** lplpStatusBar);
        [id(0x60020003), helpcontext(0x0000000a)]
        HRESULT _stdcall Add([out, retval] IVStatusBar** lplpStatusBar);
        [id(0x60020004), helpcontext(0x0000000c)]
        HRESULT _stdcall AddAtID(
                        [in] long lID, 
                        [out, retval] IVStatusBar** lplpStatusBar);
        [id(0x60020005), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] long* lplCount);
        [id(0x60020006), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVUIObject** lplpVUIObject);
    };

    [
      odl,
      uuid(000D0292-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVAccelItem : IDispatch {
        [id(0x60020000), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x60020001), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall Default([out, retval] short* pwCmd);
        [id(00000000), propput, helpcontext(0x00000059)]
        HRESULT _stdcall CmdNum([in] short pwCmd);
        [id(00000000), propget, helpcontext(0x00000059)]
        HRESULT _stdcall CmdNum([out, retval] short* pwCmd);
        [id(0x60020004), propput, helpcontext(0x000000ec)]
        HRESULT _stdcall Key([in] short pKey);
        [id(0x60020004), propget, helpcontext(0x000000ec)]
        HRESULT _stdcall Key([out, retval] short* pKey);
        [id(0x60020006), propput, helpcontext(0x00000020)]
        HRESULT _stdcall Alt([in] short pAlt);
        [id(0x60020006), propget, helpcontext(0x00000020)]
        HRESULT _stdcall Alt([out, retval] short* pAlt);
        [id(0x60020008), propput, helpcontext(0x00000181)]
        HRESULT _stdcall Shift([in] short pShift);
        [id(0x60020008), propget, helpcontext(0x00000181)]
        HRESULT _stdcall Shift([out, retval] short* pShift);
        [id(0x6002000a), propput, helpcontext(0x00000066)]
        HRESULT _stdcall Control([in] short pControl);
        [id(0x6002000a), propget, helpcontext(0x00000066)]
        HRESULT _stdcall Control([out, retval] short* pControl);
        [id(0x6002000c), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVAccelItems** lplpVAccelItems);
    };

    [
      odl,
      uuid(000D0293-0000-0000-C000-000000000046),
      version(4.6),
      hidden,
      restricted
    ]
    interface IEnumVAccelItem : IUnknown {
        HRESULT _stdcall Next(
                        [in] long celt, 
                        [out] IVAccelItem** rgelt, 
                        [out] long* pceltFetched);
        HRESULT _stdcall Skip([in] long celt);
        HRESULT _stdcall Reset();
        HRESULT _stdcall Clone([out] IEnumVAccelItem** ppenm);
    };

    [
      odl,
      uuid(000D0295-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVAccelItems : IDispatch {
        [id(0xfffffffc), propget, restricted, helpcontext(0x00001388)]
        HRESULT _stdcall _NewEnum([out, retval] IUnknown** lplpIEnumVAccelItem);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] long lIndex, 
                        [out, retval] IVAccelItem** lplpAccelItem);
        [id(0x60020002), helpcontext(0x0000000a)]
        HRESULT _stdcall Add([out, retval] IVAccelItem** lplpAccelItem);
        [id(0x60020003), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] long* lplCount);
        [id(0x60020004), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVAccelTable** lplpVAccelTable);
    };

    [
      odl,
      uuid(000D02A2-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVAccelTable : IDispatch {
        [id(0x60020000), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x60020001), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall Default([out, retval] BSTR* pTableName);
        [id(00000000), propput, helpcontext(0x0000019d)]
        HRESULT _stdcall TableName([in] BSTR pTableName);
        [id(00000000), propget, helpcontext(0x0000019d)]
        HRESULT _stdcall TableName([out, retval] BSTR* pTableName);
        [id(0x60020004), propget, helpcontext(0x0000017a)]
        HRESULT _stdcall SetID([out, retval] long* plSetID);
        [id(0x60020005), propget, helpcontext(0x00000001)]
        HRESULT _stdcall AccelItems([out, retval] IVAccelItems** lplpVAccelItems);
        [id(0x60020006), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVAccelTables** lplpVAccelTables);
    };

    [
      odl,
      uuid(000D02A3-0000-0000-C000-000000000046),
      version(4.6),
      hidden
    ]
    interface IEnumVAccelTable : IUnknown {
        HRESULT _stdcall Next(
                        [in] long celt, 
                        [out] IVAccelTable** rgelt, 
                        [out] long* pceltFetched);
        HRESULT _stdcall Skip([in] long celt);
        HRESULT _stdcall Reset();
        HRESULT _stdcall Clone([out] IEnumVAccelTable** ppenm);
    };

    [
      odl,
      uuid(000D02A5-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVAccelTables : IDispatch {
        [id(0xfffffffc), propget, restricted, helpcontext(0x00001388)]
        HRESULT _stdcall _NewEnum([out, retval] IUnknown** lplpIEnumVAccelTable);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] long lIndex, 
                        [out, retval] IVAccelTable** lplpAccelTable);
        [id(0x60020002), propget, helpcontext(0x000000e9)]
        HRESULT _stdcall ItemAtID(
                        [in] long lID, 
                        [out, retval] IVAccelTable** lplpAccelTable);
        [id(0x60020003), helpcontext(0x0000000a)]
        HRESULT _stdcall Add([out, retval] IVAccelTable** lplpAccelTable);
        [id(0x60020004), helpcontext(0x0000000c)]
        HRESULT _stdcall AddAtID(
                        [in] long lID, 
                        [out, retval] IVAccelTable** lplpAccelTable);
        [id(0x60020005), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] long* lplCount);
        [id(0x60020006), propget, helpcontext(0x00000128)]
        HRESULT _stdcall Parent([out, retval] IVUIObject** lplpVUIObject);
    };

    [
      odl,
      uuid(000D0202-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVUIObject : IDispatch {
        [id(0x60020000), hidden, helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x60020001), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall Default([out, retval] BSTR* pName);
        [id(00000000), propput, helpcontext(0x0000010b)]
        HRESULT _stdcall Name([in] BSTR pName);
        [id(00000000), propget, helpcontext(0x0000010b)]
        HRESULT _stdcall Name([out, retval] BSTR* pName);
        [id(0x60020004), propput, helpcontext(0x000000ae)]
        HRESULT _stdcall Flavor([in] short pFlavor);
        [id(0x60020004), propget, helpcontext(0x000000ae)]
        HRESULT _stdcall Flavor([out, retval] short* pFlavor);
        [id(0x60020006), propget, helpcontext(0x00000106)]
        HRESULT _stdcall MenuSets([out, retval] IVMenuSets** lplpVMenuSets);
        [id(0x60020007), propget, helpcontext(0x000001ad)]
        HRESULT _stdcall ToolbarSets([out, retval] IVToolbarSets** lplpVToolbarSets);
        [id(0x60020008), propget, helpcontext(0x00000191)]
        HRESULT _stdcall StatusBars([out, retval] IVStatusBars** lplpVStatusBars);
        [id(0x60020009), propget, helpcontext(0x00000002)]
        HRESULT _stdcall AccelTables([out, retval] IVAccelTables** lplpVAccelTables);
        [id(0x6002000a), helpcontext(0x00000168)]
        HRESULT _stdcall SaveToFile([in] BSTR FileName);
        [id(0x6002000b), helpcontext(0x000000f9)]
        HRESULT _stdcall LoadFromFile([in] BSTR FileName);
        [id(0x6002000c), helpcontext(0x000001bd)]
        HRESULT _stdcall UpdateUI();
    };

    [
      uuid(000D0201-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass UIObject {
        [default] interface IVUIObject;
    };

    [
      uuid(000D0210-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass MenuItem {
        [default] interface IVMenuItem;
    };

    [
      uuid(000D0215-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass MenuItems {
        [default] interface IVMenuItems;
    };

    [
      uuid(000D0220-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass Menu {
        [default] interface IVMenu;
    };

    [
      uuid(000D0224-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass Menus {
        [default] interface IVMenus;
    };

    [
      uuid(000D0230-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass MenuSet {
        [default] interface IVMenuSet;
    };

    [
      uuid(000D0235-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass MenuSets {
        [default] interface IVMenuSets;
    };

    [
      uuid(000D0240-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass ToolbarItem {
        [default] interface IVToolbarItem;
    };

    [
      uuid(000D0244-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass ToolbarItems {
        [default] interface IVToolbarItems;
    };

    [
      uuid(000D0250-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass Toolbar {
        [default] interface IVToolbar;
    };

    [
      uuid(000D0254-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass Toolbars {
        [default] interface IVToolbars;
    };

    [
      uuid(000D0260-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass ToolbarSet {
        [default] interface IVToolbarSet;
    };

    [
      uuid(000D0265-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass ToolbarSets {
        [default] interface IVToolbarSets;
    };

    [
      uuid(000D0270-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass StatusBarItem {
        [default] interface IVStatusBarItem;
    };

    [
      uuid(000D0274-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass StatusBarItems {
        [default] interface IVStatusBarItems;
    };

    [
      uuid(000D0280-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass StatusBar {
        [default] interface IVStatusBar;
    };

    [
      uuid(000D0284-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass StatusBars {
        [default] interface IVStatusBars;
    };

    [
      uuid(000D0290-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass AccelItem {
        [default] interface IVAccelItem;
    };

    [
      uuid(000D0294-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass AccelItems {
        [default] interface IVAccelItems;
    };

    [
      uuid(000D02A0-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass AccelTable {
        [default] interface IVAccelTable;
    };

    [
      uuid(000D02A4-0000-0000-C000-000000000046),
      version(4.6),
      helpcontext(0x00001388)
    ]
    coclass AccelTables {
        [default] interface IVAccelTables;
    };

    typedef [public]
    IVHyperlink* LPVISIOHYPERLINK;

    typedef [public]
    IVOLEObjects* LPVISIOOBJECTS;

    typedef [public]
    IVOLEObject* LPVISIOOBJECT;

    typedef [public]
    IVPaths* LPVISIOPATHS;

    typedef [public]
    IVPath* LPVISIOPATH;

    typedef [public]
    IVCurve* LPVISIOCURVE;

    typedef [uuid(000D0C26-0000-0000-C000-000000000046), helpstring("Value to use with Window.ShowScrollBars."), helpcontext(0x00001388)]
    enum {
        visScrollBarNeither = 0,
        visScrollBarHoriz = 1,
        visScrollBarVert = 4,
        visScrollBarBoth = 5
    } VisScrollbarStates;

    typedef [uuid(000D0C24-0000-0000-C000-000000000046), helpstring("Flags passed to or returned by Document.Mode."), helpcontext(0x00001388)]
    enum {
        visDocModeRun = 0,
        visDocModeDesign = 1
    } VisDocModeArgs;

    typedef [uuid(000D0C25-0000-0000-C000-000000000046), helpstring("Flags to use with App.TraceFlags."), helpcontext(0x00001388)]
    enum {
        visTraceEvents = 1,
        visTraceAdvises = 2,
        visTraceAddonInvokes = 4,
        visTraceCallsToVBA = 8
    } VisTraceFlags;

    [
      odl,
      uuid(000D071D-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVHyperlink : IDispatch {
        [id(00000000), propget, helpcontext(0x0000007e)]
        HRESULT _stdcall Description([out, retval] BSTR* lpbstrRet);
        [id(00000000), propput, helpcontext(0x0000007e)]
        HRESULT _stdcall Description([in] BSTR lpbstrRet);
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x0000017c)]
        HRESULT _stdcall Shape([out, retval] IVShape** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000004), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x00000005), propget, helpcontext(0x00000017)]
        HRESULT _stdcall Address([out, retval] BSTR* lpbstrRet);
        [id(0x00000005), propput, helpcontext(0x00000017)]
        HRESULT _stdcall Address([in] BSTR lpbstrRet);
        [id(0x00000006), propget, helpcontext(0x00000199)]
        HRESULT _stdcall SubAddress([out, retval] BSTR* lpbstrRet);
        [id(0x00000006), propput, helpcontext(0x00000199)]
        HRESULT _stdcall SubAddress([in] BSTR lpbstrRet);
        [id(0x00000007), propget, helpcontext(0x0000010d)]
        HRESULT _stdcall NewWindow([out, retval] short* lpi2Ret);
        [id(0x00000007), propput, helpcontext(0x0000010d)]
        HRESULT _stdcall NewWindow([in] short lpi2Ret);
        [id(0x00000008), propget, helpcontext(0x000000a3)]
        HRESULT _stdcall ExtraInfo([out, retval] BSTR* lpbstrRet);
        [id(0x00000008), propput, helpcontext(0x000000a3)]
        HRESULT _stdcall ExtraInfo([in] BSTR lpbstrRet);
        [id(0x00000009), propget, helpcontext(0x000000ba)]
        HRESULT _stdcall Frame([out, retval] BSTR* lpbstrRet);
        [id(0x00000009), propput, helpcontext(0x000000ba)]
        HRESULT _stdcall Frame([in] BSTR lpbstrRet);
        [id(0x0000000a), helpcontext(0x0000001b)]
        HRESULT _stdcall AddToFavorites([in, optional] VARIANT FavoritesTitle);
        [id(0x0000000b), helpcontext(0x000000b1)]
        HRESULT _stdcall Follow();
        [id(0x0000000c), helpcontext(0x0000007b)]
        HRESULT _stdcall Delete();
        [id(0x0000000d), helpcontext(0x00000069)]
        HRESULT _stdcall Copy();
        [id(0x0000000e), helpcontext(0x0000006b)]
        HRESULT _stdcall CreateURL(
                        [in] short CanonicalForm, 
                        [out, retval] BSTR* lpbstrRet);
    };

    [
      odl,
      uuid(000D071E-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVOLEObjects : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000003), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] VARIANT NameOrIndex, 
                        [out, retval] IVOLEObject** lpdispRet);
        [id(0x00000004), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] short* lpi2Ret);
    };

    [
      odl,
      uuid(000D071F-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVOLEObject : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x0000017c)]
        HRESULT _stdcall Shape([out, retval] IVShape** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000004), propget, helpcontext(0x0000018f)]
        HRESULT _stdcall Stat([out, retval] short* lpi2Ret);
        [id(0x00000005), propget, helpcontext(0x00000054)]
        HRESULT _stdcall ClassID([out, retval] BSTR* lpbstrRet);
        [id(0x00000006), propget, helpcontext(0x00000141)]
        HRESULT _stdcall ProgID([out, retval] BSTR* lpbstrRet);
        [id(0x00000007), propget, helpcontext(0x000000b4)]
        HRESULT _stdcall ForeignType([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x00000111)]
        HRESULT _stdcall Object([out, retval] IDispatch** lpdispRet);
    };

    [
      odl,
      uuid(000D0720-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVPaths : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] short Index, 
                        [out, retval] IVPath** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] short* lpi2Ret);
    };

    [
      odl,
      uuid(000D0721-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVPath : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(00000000), propget, helpcontext(0x000000e8)]
        HRESULT _stdcall Item(
                        [in] short Index, 
                        [out, retval] IVCurve** lpdispRet);
        [id(0x00000003), propget, helpcontext(0x0000006a)]
        HRESULT _stdcall Count([out, retval] short* lpi2Ret);
        [id(0x00000004), propget, helpcontext(0x00000058)]
        HRESULT _stdcall Closed([out, retval] short* lpi2Ret);
        [id(0x00000005), helpcontext(0x00000135)]
        HRESULT _stdcall Points(
                        [in] double Tolerance, 
                        [out] SAFEARRAY(double)* xyArray);
    };

    [
      odl,
      uuid(000D0722-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden,
      dual,
      oleautomation
    ]
    interface IVCurve : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x00000002), propget, helpcontext(0x00000111)]
        HRESULT _stdcall ObjectType([out, retval] short* lpi2Ret);
        [id(0x00000003), propget, helpcontext(0x00000058)]
        HRESULT _stdcall Closed([out, retval] short* lpi2Ret);
        [id(0x00000004), helpcontext(0x00000135)]
        HRESULT _stdcall Points(
                        [in] double Tolerance, 
                        [out] SAFEARRAY(double)* xyArray);
        [id(0x00000005), propget, helpcontext(0x0000018d)]
        HRESULT _stdcall Start([out, retval] double* lpr8Ret);
        [id(0x00000006), propget, helpcontext(0x00000096)]
        HRESULT _stdcall End([out, retval] double* lpr8Ret);
        [id(00000000), helpcontext(0x00000133)]
        HRESULT _stdcall Point(
                        [in] double t, 
                        [out] double* x, 
                        [out] double* y);
        [id(0x00000008), helpcontext(0x00000134)]
        HRESULT _stdcall PointAndDerivatives(
                        [in] double t, 
                        [in] short n, 
                        [out] double* x, 
                        [out] double* y, 
                        [out] double* dxdt, 
                        [out] double* dydt, 
                        [out] double* ddxdt, 
                        [out] double* ddydt);
    };

    [
      odl,
      uuid(000D0D0E-0000-0000-C000-000000000046),
      helpstring("Visio Control Extender Dual Interface"),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface IVExtender : IDispatch {
        [id(0x80010000), propget]
        HRESULT _stdcall Name([out, retval] BSTR* pbstr);
        [id(0x80010000), propput]
        HRESULT _stdcall Name([in] BSTR pbstr);
        [id(0xfffffcde), propget]
        HRESULT _stdcall Object([out, retval] IUnknown** ppunk);
        [id(0x80010008), propget]
        HRESULT _stdcall Parent([out, retval] IUnknown** ppunk);
        [id(0xfffffcdf), hidden]
        HRESULT _stdcall Delete();
        [id(0xfffffcdc), hidden]
        HRESULT _stdcall Index();
        [id(0x80010100), propget, helpcontext(0x0000017c)]
        HRESULT _stdcall Shape([out, retval] IVShape** lpdispRet);
        [id(0x8001012d), helpcontext(0x000000c7)]
        HRESULT _stdcall Group();
        [id(0x8001012e), helpcontext(0x00000042)]
        HRESULT _stdcall BringForward();
        [id(0x8001012f), helpcontext(0x00000043)]
        HRESULT _stdcall BringToFront();
        [id(0x80010130), helpcontext(0x00000068)]
        HRESULT _stdcall ConvertToGroup();
        [id(0x80010134), helpcontext(0x00000172)]
        HRESULT _stdcall SendBackward();
        [id(0x80010135), helpcontext(0x00000173)]
        HRESULT _stdcall SendToBack();
        [id(0x8001012c), propget, helpcontext(0x00000083)]
        HRESULT _stdcall Document([out, retval] IVDocument** lpdispRet);
        [id(0x80010138), propget, helpcontext(0x00000128)]
        HRESULT _stdcall ShapeParent([out, retval] IDispatch** lpdispRet);
        [id(0x80010101), propget, helpcontext(0x00000023)]
        HRESULT _stdcall Application([out, retval] IVApplication** lpdispRet);
        [id(0x80010115), propget, helpcontext(0x000000fe)]
        HRESULT _stdcall Master([out, retval] IVMaster** lpdispRet);
        [id(0x8001010d), propget, helpcontext(0x0000004a)]
        HRESULT _stdcall Cells(
                        [in] BSTR CellName, 
                        [out, retval] IVCell** lpdispRet);
        [id(0x8001010e), propget, helpcontext(0x0000004c)]
        HRESULT _stdcall CellsSRC(
                        [in] short Section, 
                        [in] short Row, 
                        [in] short Column, 
                        [out, retval] IVCell** lpdispRet);
        [id(0x8001010f), propget, helpcontext(0x00000072)]
        HRESULT _stdcall Data1([out, retval] BSTR* lpbstrRet);
        [id(0x8001010f), propput, helpcontext(0x00000072)]
        HRESULT _stdcall Data1([in] BSTR lpbstrRet);
        [id(0x80010110), propget, helpcontext(0x00000073)]
        HRESULT _stdcall Data2([out, retval] BSTR* lpbstrRet);
        [id(0x80010110), propput, helpcontext(0x00000073)]
        HRESULT _stdcall Data2([in] BSTR lpbstrRet);
        [id(0x80010111), propget, helpcontext(0x00000074)]
        HRESULT _stdcall Data3([out, retval] BSTR* lpbstrRet);
        [id(0x80010111), propput, helpcontext(0x00000074)]
        HRESULT _stdcall Data3([in] BSTR lpbstrRet);
        [id(0x80010112), propget, helpcontext(0x000000ca)]
        HRESULT _stdcall Help([out, retval] BSTR* lpbstrRet);
        [id(0x80010112), propput, helpcontext(0x000000ca)]
        HRESULT _stdcall Help([in] BSTR lpbstrRet);
        [id(0x80010104), propget, helpcontext(0x0000010c)]
        HRESULT _stdcall NameID([out, retval] BSTR* lpbstrRet);
        [id(0x80010109), helpcontext(0x00000069)]
        HRESULT _stdcall ShapeCopy();
        [id(0x8001010a), helpcontext(0x00000071)]
        HRESULT _stdcall ShapeCut();
        [id(0x8001010b), helpcontext(0x0000007b)]
        HRESULT _stdcall ShapeDelete();
        [id(0x8001010c), helpcontext(0x00000094)]
        HRESULT _stdcall ShapeDuplicate();
        [id(0x80010118), propget, helpcontext(0x0000015a)]
        HRESULT _stdcall RowCount(
                        [in] short Section, 
                        [out, retval] short* lpi2Ret);
        [id(0x80010119), helpcontext(0x0000001a)]
        HRESULT _stdcall AddSection(
                        [in] short Section, 
                        [out, retval] short* lpi2Ret);
        [id(0x8001011a), helpcontext(0x0000007d)]
        HRESULT _stdcall DeleteSection([in] short Section);
        [id(0x8001011b), helpcontext(0x00000018)]
        HRESULT _stdcall AddRow(
                        [in] short Section, 
                        [in] short Row, 
                        [in] short RowTag, 
                        [out, retval] short* lpi2Ret);
        [id(0x8001011c), helpcontext(0x0000007c)]
        HRESULT _stdcall DeleteRow(
                        [in] short Section, 
                        [in] short Row);
        [id(0x8001011d), propget, helpcontext(0x0000015d)]
        HRESULT _stdcall RowsCellCount(
                        [in] short Section, 
                        [in] short Row, 
                        [out, retval] short* lpi2Ret);
        [id(0x8001011e), propget, helpcontext(0x0000015e)]
        HRESULT _stdcall RowType(
                        [in] short Section, 
                        [in] short Row, 
                        [out, retval] short* lpi2Ret);
        [id(0x8001011e), propput, helpcontext(0x0000015e)]
        HRESULT _stdcall RowType(
                        [in] short Section, 
                        [in] short Row, 
                        [in] short lpi2Ret);
        [id(0x8001011f), helpcontext(0x00000175)]
        HRESULT _stdcall SetCenter(
                        [in] double xPos, 
                        [in] double yPos);
        [id(0x80010122), propget, helpcontext(0x00000062)]
        HRESULT _stdcall Connects([out, retval] IVConnects** lpdispRet);
        [id(0x80010123), propget, helpcontext(0x000000da)]
        HRESULT _stdcall ShapeIndex([out, retval] short* lpi2Ret);
        [id(0x80010124), propget, helpcontext(0x00000194)]
        HRESULT _stdcall Style([out, retval] BSTR* lpbstrRet);
        [id(0x80010124), propput, helpcontext(0x00000194)]
        HRESULT _stdcall Style([in] BSTR lpbstrRet);
        [id(0x80010128), propput, helpcontext(0x00000197)]
        HRESULT _stdcall StyleKeepFmt([in] BSTR rhs);
        [id(0x80010125), propget, helpcontext(0x000000f7)]
        HRESULT _stdcall LineStyle([out, retval] BSTR* lpbstrRet);
        [id(0x80010125), propput, helpcontext(0x000000f7)]
        HRESULT _stdcall LineStyle([in] BSTR lpbstrRet);
        [id(0x80010129), propput, helpcontext(0x000000f8)]
        HRESULT _stdcall LineStyleKeepFmt([in] BSTR rhs);
        [id(0x80010126), propget, helpcontext(0x000000a9)]
        HRESULT _stdcall FillStyle([out, retval] BSTR* lpbstrRet);
        [id(0x80010126), propput, helpcontext(0x000000a9)]
        HRESULT _stdcall FillStyle([in] BSTR lpbstrRet);
        [id(0x8001012a), propput, helpcontext(0x000000aa)]
        HRESULT _stdcall FillStyleKeepFmt([in] BSTR rhs);
        [id(0x80010139), helpcontext(0x000000a1)]
        HRESULT _stdcall Export([in] BSTR FileName);
        [id(0x8001013d), propget, helpcontext(0x000001bb)]
        HRESULT _stdcall UniqueID(
                        [in] short fUniqueID, 
                        [out, retval] BSTR* lpbstrRet);
        [id(0x8001013e), propget, helpcontext(0x00000064)]
        HRESULT _stdcall ContainingPage([out, retval] IVPage** lpdispRet);
        [id(0x8001013f), propget, helpcontext(0x00000063)]
        HRESULT _stdcall ContainingMaster([out, retval] IVMaster** lpdispRet);
        [id(0x80010140), propget, helpcontext(0x00000065)]
        HRESULT _stdcall ContainingShape([out, retval] IVShape** lpdispRet);
        [id(0x80010141), propget, helpcontext(0x0000016c)]
        HRESULT _stdcall SectionExists(
                        [in] short Section, 
                        [in] short fLocalExists, 
                        [out, retval] short* lpi2Ret);
        [id(0x80010142), propget, helpcontext(0x0000015b)]
        HRESULT _stdcall RowExists(
                        [in] short Section, 
                        [in] short Row, 
                        [in] short fLocalExists, 
                        [out, retval] short* lpi2Ret);
        [id(0x80010143), propget, helpcontext(0x00000049)]
        HRESULT _stdcall CellExists(
                        [in] BSTR CellName, 
                        [in] short fLocalExists, 
                        [out, retval] short* lpi2Ret);
        [id(0x80010144), propget, helpcontext(0x0000004d)]
        HRESULT _stdcall CellsSRCExists(
                        [in] short Section, 
                        [in] short Row, 
                        [in] short Column, 
                        [in] short fLocalExists, 
                        [out, retval] short* lpi2Ret);
        [id(0x80010145), propget, helpcontext(0x000000f0)]
        HRESULT _stdcall LayerCount([out, retval] short* lpi2Ret);
        [id(0x80010146), propget, helpcontext(0x000000ef)]
        HRESULT _stdcall Layer(
                        [in] short Index, 
                        [out, retval] IVLayer** lpdispRet);
        [id(0x80010147), helpcontext(0x00000012)]
        HRESULT _stdcall AddNamedRow(
                        [in] short Section, 
                        [in] BSTR RowName, 
                        [in] short RowTag, 
                        [out, retval] short* lpi2Ret);
        [id(0x80010148), helpcontext(0x00000019)]
        HRESULT _stdcall AddRows(
                        [in] short Section, 
                        [in] short Row, 
                        [in] short RowTag, 
                        [in] short RowCount, 
                        [out, retval] short* lpi2Ret);
        [id(0x80010149), propget, helpcontext(0x0000009e)]
        HRESULT _stdcall EventList([out, retval] IVEventList** lpdispRet);
        [id(0x8001014a), propget, helpcontext(0x00000131)]
        HRESULT _stdcall PersistsEvents([out, retval] short* lpboolRet);
        [id(0x80010156), propget, helpcontext(0x00000054)]
        HRESULT _stdcall ClassID([out, retval] BSTR* lpbstrRet);
        [id(0x80010158), propget, helpcontext(0x0000010f)]
        HRESULT _stdcall ShapeObject([out, retval] IDispatch** lpdispRet);
        [id(0x8001015a), helpcontext(0x00000119)]
        HRESULT _stdcall OpenSheetWindow([out, retval] IVWindow** lpdispRet);
        [id(0x8001015b), propget, helpcontext(0x000000d4)]
        HRESULT _stdcall ShapeID([out, retval] short* lpi2Ret);
        [id(0x8001015d), helpcontext(0x000000c1)]
        HRESULT _stdcall GetFormulas(
                        [in] SAFEARRAY(short)* SRCStream, 
                        [out] SAFEARRAY(VARIANT)* formulaArray);
        [id(0x8001015e), helpcontext(0x000000c3)]
        HRESULT _stdcall GetResults(
                        [in] SAFEARRAY(short)* SRCStream, 
                        [in] short Flags, 
                        [in] SAFEARRAY(VARIANT)* UnitsNamesOrCodes, 
                        [out] SAFEARRAY(VARIANT)* resultArray);
        [id(0x8001015f), helpcontext(0x00000179)]
        HRESULT _stdcall SetFormulas(
                        [in] SAFEARRAY(short)* SRCStream, 
                        [in] SAFEARRAY(VARIANT)* formulaArray, 
                        [in] short Flags, 
                        [out, retval] short* lpi2Ret);
        [id(0x80010160), helpcontext(0x0000017b)]
        HRESULT _stdcall SetResults(
                        [in] SAFEARRAY(short)* SRCStream, 
                        [in] SAFEARRAY(VARIANT)* UnitsNamesOrCodes, 
                        [in] SAFEARRAY(VARIANT)* resultArray, 
                        [in] short Flags, 
                        [out, retval] short* lpi2Ret);
        [id(0x80010161), propget, helpcontext(0x000000bc)]
        HRESULT _stdcall FromConnects([out, retval] IVConnects** lpdispRet);
        [id(0x80010163), helpcontext(0x00000041)]
        HRESULT _stdcall BoundingBox(
                        [in] short Flags, 
                        [out] double* lpr8Left, 
                        [out] double* lpr8Bottom, 
                        [out] double* lpr8Right, 
                        [out] double* lpr8Top);
        [id(0x80010164), helpcontext(0x000000ce)]
        HRESULT _stdcall HitTest(
                        [in] double xPos, 
                        [in] double yPos, 
                        [in] double Tolerance, 
                        [out, retval] short* lpi2Ret);
        [id(0x80010165), propget, helpcontext(0x000000cf)]
        HRESULT _stdcall Hyperlink([out, retval] IVHyperlink** lpdispRet);
        [id(0x80010166), propget, helpcontext(0x00000141)]
        HRESULT _stdcall ProgID([out, retval] BSTR* lpbstrRet);
        [id(0x80010167), propget, helpcontext(0x00000110)]
        HRESULT _stdcall ObjectIsInherited([out, retval] short* lpboolRet);
    };

    [
      uuid(000D0D0F-0000-0000-C000-000000000046),
      helpstring("Visio Control Extender Dispatch Interface"),
      hidden
    ]
    dispinterface IVDispExtender {
        properties:
        methods:
            [id(0x60000000), restricted]
            void QueryInterface(
                            [in] GUID* riid, 
                            [out] void** ppvObj);
            [id(0x60000001), restricted]
            unsigned long AddRef();
            [id(0x60000002), restricted]
            unsigned long Release();
            [id(0x60010000), restricted]
            void GetTypeInfoCount([out] unsigned int* pctinfo);
            [id(0x60010001), restricted]
            void GetTypeInfo(
                            [in] unsigned int itinfo, 
                            [in] unsigned long lcid, 
                            [out] void** pptinfo);
            [id(0x60010002), restricted]
            void GetIDsOfNames(
                            [in] GUID* riid, 
                            [in] char** rgszNames, 
                            [in] unsigned int cNames, 
                            [in] unsigned long lcid, 
                            [out] long* rgdispid);
            [id(0x60010003), restricted]
            void Invoke(
                            [in] long dispidMember, 
                            [in] GUID* riid, 
                            [in] unsigned long lcid, 
                            [in] unsigned short wFlags, 
                            [in] DISPPARAMS* pdispparams, 
                            [out] VARIANT* pvarResult, 
                            [out] EXCEPINFO* pexcepinfo, 
                            [out] unsigned int* puArgErr);
            [id(0x80010000), propget]
            BSTR Name();
            [id(0x80010000), propput]
            void Name([in] BSTR rhs);
            [id(0xfffffcde), propget]
            IUnknown* Object();
            [id(0x80010008), propget]
            IUnknown* Parent();
            [id(0xfffffcdf), hidden]
            void Delete();
            [id(0xfffffcdc), hidden]
            void Index();
            [id(0x80010100), propget, helpcontext(0x0000017c)]
            IVShape* Shape();
            [id(0x8001012d), helpcontext(0x000000c7)]
            void Group();
            [id(0x8001012e), helpcontext(0x00000042)]
            void BringForward();
            [id(0x8001012f), helpcontext(0x00000043)]
            void BringToFront();
            [id(0x80010130), helpcontext(0x00000068)]
            void ConvertToGroup();
            [id(0x80010134), helpcontext(0x00000172)]
            void SendBackward();
            [id(0x80010135), helpcontext(0x00000173)]
            void SendToBack();
            [id(0x8001012c), propget, helpcontext(0x00000083)]
            IVDocument* Document();
            [id(0x80010138), propget, helpcontext(0x00000128)]
            IDispatch* ShapeParent();
            [id(0x80010101), propget, helpcontext(0x00000023)]
            IVApplication* Application();
            [id(0x80010115), propget, helpcontext(0x000000fe)]
            IVMaster* Master();
            [id(0x8001010d), propget, helpcontext(0x0000004a)]
            IVCell* Cells([in] BSTR CellName);
            [id(0x8001010e), propget, helpcontext(0x0000004c)]
            IVCell* CellsSRC(
                            [in] short Section, 
                            [in] short Row, 
                            [in] short Column);
            [id(0x8001010f), propget, helpcontext(0x00000072)]
            BSTR Data1();
            [id(0x8001010f), propput, helpcontext(0x00000072)]
            void Data1([in] BSTR rhs);
            [id(0x80010110), propget, helpcontext(0x00000073)]
            BSTR Data2();
            [id(0x80010110), propput, helpcontext(0x00000073)]
            void Data2([in] BSTR rhs);
            [id(0x80010111), propget, helpcontext(0x00000074)]
            BSTR Data3();
            [id(0x80010111), propput, helpcontext(0x00000074)]
            void Data3([in] BSTR rhs);
            [id(0x80010112), propget, helpcontext(0x000000ca)]
            BSTR Help();
            [id(0x80010112), propput, helpcontext(0x000000ca)]
            void Help([in] BSTR rhs);
            [id(0x80010104), propget, helpcontext(0x0000010c)]
            BSTR NameID();
            [id(0x80010109), helpcontext(0x00000069)]
            void ShapeCopy();
            [id(0x8001010a), helpcontext(0x00000071)]
            void ShapeCut();
            [id(0x8001010b), helpcontext(0x0000007b)]
            void ShapeDelete();
            [id(0x8001010c), helpcontext(0x00000094)]
            void ShapeDuplicate();
            [id(0x80010118), propget, helpcontext(0x0000015a)]
            short RowCount([in] short Section);
            [id(0x80010119), helpcontext(0x0000001a)]
            short AddSection([in] short Section);
            [id(0x8001011a), helpcontext(0x0000007d)]
            void DeleteSection([in] short Section);
            [id(0x8001011b), helpcontext(0x00000018)]
            short AddRow(
                            [in] short Section, 
                            [in] short Row, 
                            [in] short RowTag);
            [id(0x8001011c), helpcontext(0x0000007c)]
            void DeleteRow(
                            [in] short Section, 
                            [in] short Row);
            [id(0x8001011d), propget, helpcontext(0x0000015d)]
            short RowsCellCount(
                            [in] short Section, 
                            [in] short Row);
            [id(0x8001011e), propget, helpcontext(0x0000015e)]
            short RowType(
                            [in] short Section, 
                            [in] short Row);
            [id(0x8001011e), propput, helpcontext(0x0000015e)]
            void RowType(
                            [in] short Section, 
                            [in] short Row, 
                            [in] short rhs);
            [id(0x8001011f), helpcontext(0x00000175)]
            void SetCenter(
                            [in] double xPos, 
                            [in] double yPos);
            [id(0x80010122), propget, helpcontext(0x00000062)]
            IVConnects* Connects();
            [id(0x80010123), propget, helpcontext(0x000000da)]
            short ShapeIndex();
            [id(0x80010124), propget, helpcontext(0x00000194)]
            BSTR Style();
            [id(0x80010124), propput, helpcontext(0x00000194)]
            void Style([in] BSTR rhs);
            [id(0x80010128), propput, helpcontext(0x00000197)]
            void StyleKeepFmt([in] BSTR rhs);
            [id(0x80010125), propget, helpcontext(0x000000f7)]
            BSTR LineStyle();
            [id(0x80010125), propput, helpcontext(0x000000f7)]
            void LineStyle([in] BSTR rhs);
            [id(0x80010129), propput, helpcontext(0x000000f8)]
            void LineStyleKeepFmt([in] BSTR rhs);
            [id(0x80010126), propget, helpcontext(0x000000a9)]
            BSTR FillStyle();
            [id(0x80010126), propput, helpcontext(0x000000a9)]
            void FillStyle([in] BSTR rhs);
            [id(0x8001012a), propput, helpcontext(0x000000aa)]
            void FillStyleKeepFmt([in] BSTR rhs);
            [id(0x80010139), helpcontext(0x000000a1)]
            void Export([in] BSTR FileName);
            [id(0x8001013d), propget, helpcontext(0x000001bb)]
            BSTR UniqueID([in] short fUniqueID);
            [id(0x8001013e), propget, helpcontext(0x00000064)]
            IVPage* ContainingPage();
            [id(0x8001013f), propget, helpcontext(0x00000063)]
            IVMaster* ContainingMaster();
            [id(0x80010140), propget, helpcontext(0x00000065)]
            IVShape* ContainingShape();
            [id(0x80010141), propget, helpcontext(0x0000016c)]
            short SectionExists(
                            [in] short Section, 
                            [in] short fLocalExists);
            [id(0x80010142), propget, helpcontext(0x0000015b)]
            short RowExists(
                            [in] short Section, 
                            [in] short Row, 
                            [in] short fLocalExists);
            [id(0x80010143), propget, helpcontext(0x00000049)]
            short CellExists(
                            [in] BSTR CellName, 
                            [in] short fLocalExists);
            [id(0x80010144), propget, helpcontext(0x0000004d)]
            short CellsSRCExists(
                            [in] short Section, 
                            [in] short Row, 
                            [in] short Column, 
                            [in] short fLocalExists);
            [id(0x80010145), propget, helpcontext(0x000000f0)]
            short LayerCount();
            [id(0x80010146), propget, helpcontext(0x000000ef)]
            IVLayer* Layer([in] short Index);
            [id(0x80010147), helpcontext(0x00000012)]
            short AddNamedRow(
                            [in] short Section, 
                            [in] BSTR RowName, 
                            [in] short RowTag);
            [id(0x80010148), helpcontext(0x00000019)]
            short AddRows(
                            [in] short Section, 
                            [in] short Row, 
                            [in] short RowTag, 
                            [in] short RowCount);
            [id(0x80010149), propget, helpcontext(0x0000009e)]
            IVEventList* EventList();
            [id(0x8001014a), propget, helpcontext(0x00000131)]
            short PersistsEvents();
            [id(0x80010156), propget, helpcontext(0x00000054)]
            BSTR ClassID();
            [id(0x80010158), propget, helpcontext(0x0000010f)]
            IDispatch* ShapeObject();
            [id(0x8001015a), helpcontext(0x00000119)]
            IVWindow* OpenSheetWindow();
            [id(0x8001015b), propget, helpcontext(0x000000d4)]
            short ShapeID();
            [id(0x8001015d), helpcontext(0x000000c1)]
            void GetFormulas(
                            [in] SAFEARRAY(short)* SRCStream, 
                            [out] SAFEARRAY(VARIANT)* formulaArray);
            [id(0x8001015e), helpcontext(0x000000c3)]
            void GetResults(
                            [in] SAFEARRAY(short)* SRCStream, 
                            [in] short Flags, 
                            [in] SAFEARRAY(VARIANT)* UnitsNamesOrCodes, 
                            [out] SAFEARRAY(VARIANT)* resultArray);
            [id(0x8001015f), helpcontext(0x00000179)]
            short SetFormulas(
                            [in] SAFEARRAY(short)* SRCStream, 
                            [in] SAFEARRAY(VARIANT)* formulaArray, 
                            [in] short Flags);
            [id(0x80010160), helpcontext(0x0000017b)]
            short SetResults(
                            [in] SAFEARRAY(short)* SRCStream, 
                            [in] SAFEARRAY(VARIANT)* UnitsNamesOrCodes, 
                            [in] SAFEARRAY(VARIANT)* resultArray, 
                            [in] short Flags);
            [id(0x80010161), propget, helpcontext(0x000000bc)]
            IVConnects* FromConnects();
            [id(0x80010163), helpcontext(0x00000041)]
            void BoundingBox(
                            [in] short Flags, 
                            [out] double* lpr8Left, 
                            [out] double* lpr8Bottom, 
                            [out] double* lpr8Right, 
                            [out] double* lpr8Top);
            [id(0x80010164), helpcontext(0x000000ce)]
            short HitTest(
                            [in] double xPos, 
                            [in] double yPos, 
                            [in] double Tolerance);
            [id(0x80010165), propget, helpcontext(0x000000cf)]
            IVHyperlink* Hyperlink();
            [id(0x80010166), propget, helpcontext(0x00000141)]
            BSTR ProgID();
            [id(0x80010167), propget, helpcontext(0x00000110)]
            short ObjectIsInherited();
    };

    [
      odl,
      uuid(000D0D10-0000-0000-C000-000000000046),
      helpstring("Visio Control Site Ambients Interface"),
      hidden,
      dual,
      oleautomation
    ]
    interface IVAmbients : IDispatch {
        [id(0xfffffd43), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall BackColor([out, retval] long* lpColorRet);
        [id(0xfffffd42), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall DisplayName([out, retval] BSTR* bstr);
        [id(0xfffffd41), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall Font([out, retval] IDispatch** ppDisp);
        [id(0xfffffd40), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall ForeColor([out, retval] long* lpColorRet);
        [id(0xfffffd3f), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall LocaleID([out, retval] long* lpi4Ret);
        [id(0xfffffd3e), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall MessageReflect([out, retval] VARIANT_BOOL* lpi2Ret);
        [id(0xfffffd3d), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall ScaleUnits([out, retval] BSTR* bstr);
        [id(0xfffffd3c), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall TextAlign([out, retval] short* lpi2Ret);
        [id(0xfffffd3b), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall UserMode([out, retval] VARIANT_BOOL* lpi2Ret);
        [id(0xfffffd3a), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall UIDead([out, retval] VARIANT_BOOL* lpi2Ret);
        [id(0xfffffd39), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall ShowGrabHandles([out, retval] VARIANT_BOOL* lpi2Ret);
        [id(0xfffffd38), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall ShowHatching([out, retval] VARIANT_BOOL* lpi2Ret);
        [id(0xfffffd37), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall DisplayAsDefault([out, retval] VARIANT_BOOL* lpi2Ret);
        [id(0xfffffd36), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall SupportsMnemonics([out, retval] VARIANT_BOOL* lpi2Ret);
        [id(0xfffffd35), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall AutoClip([out, retval] VARIANT_BOOL* lpi2Ret);
        [id(0xfffffd34), propget, hidden, helpcontext(0x00001388)]
        HRESULT _stdcall Appearance([out, retval] long* lpi2Ret);
    };

    [
      uuid(000D0D00-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      hidden
    ]
    coclass Control {
        [default] interface IVPage;
        [default, source] dispinterface EPage;
    };

    [
      uuid(000D0D06-0000-0000-C000-000000000046),
      helpstring("Visio Control Extender Object"),
      hidden
    ]
    coclass Extender {
        [default] dispinterface IVDispExtender;
        [default, source] dispinterface EShape;
    };

    [
      uuid(000D0A1B-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Hyperlink {
        [default] interface IVHyperlink;
    };

    [
      uuid(000D0A1C-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass OLEObjects {
        [default] interface IVOLEObjects;
    };

    [
      uuid(000D0A1D-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass OLEObject {
        [default] interface IVOLEObject;
    };

    [
      uuid(000D0A1E-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Paths {
        [default] interface IVPaths;
    };

    [
      uuid(000D0A1F-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Path {
        [default] interface IVPath;
    };

    [
      uuid(000D0A20-0000-0000-C000-000000000046),
      helpcontext(0x00001388),
      noncreatable
    ]
    coclass Curve {
        [default] interface IVCurve;
    };
};
